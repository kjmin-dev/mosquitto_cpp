!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALL_DEPS	lib/Makefile	/^ALL_DEPS=libmosquitto.so.${SOVERSION}$/;"	m
ALL_DEPS	lib/cpp/Makefile	/^ALL_DEPS=libmosquittopp.so.${SOVERSION}$/;"	m
AUTHOR_PATH	www/conf.py	/^AUTHOR_PATH = "blog\/authors"$/;"	v
BLOG_AUTHOR	www/conf.py	/^BLOG_AUTHOR = "Mosquitto Project"  # (translatable)$/;"	v
BLOG_DESCRIPTION	www/conf.py	/^BLOG_DESCRIPTION = "An open source MQTT server"  # (translatable)$/;"	v
BLOG_EMAIL	www/conf.py	/^BLOG_EMAIL = "roger@atchoo.org"$/;"	v
BLOG_TITLE	www/conf.py	/^BLOG_TITLE = "Eclipse Mosquitto"  # (translatable)$/;"	v
BROKER_CFLAGS	config.mk	/^		BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_EPOLL$/;"	m
BROKER_CFLAGS	config.mk	/^		BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_MEMORY_TRACKING$/;"	m
BROKER_CFLAGS	config.mk	/^		BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_TLS_PSK$/;"	m
BROKER_CFLAGS	config.mk	/^		BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_UUID$/;"	m
BROKER_CFLAGS	config.mk	/^	BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_ADNS$/;"	m
BROKER_CFLAGS	config.mk	/^	BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_BRIDGE$/;"	m
BROKER_CFLAGS	config.mk	/^	BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_EC$/;"	m
BROKER_CFLAGS	config.mk	/^	BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_PERSISTENCE$/;"	m
BROKER_CFLAGS	config.mk	/^	BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_SYSTEMD$/;"	m
BROKER_CFLAGS	config.mk	/^	BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_SYS_TREE$/;"	m
BROKER_CFLAGS	config.mk	/^	BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_TLS$/;"	m
BROKER_CFLAGS	config.mk	/^	BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_WEBSOCKETS$/;"	m
BROKER_CFLAGS	config.mk	/^	BROKER_CFLAGS:=$(BROKER_CFLAGS) -DWITH_WRAP$/;"	m
BROKER_CFLAGS	config.mk	/^	BROKER_CFLAGS:=$(BROKER_CFLAGS) -Ideps$/;"	m
BROKER_CFLAGS	config.mk	/^BROKER_CFLAGS:=${LIB_CFLAGS} ${CPPFLAGS} -DVERSION="\\"${VERSION}\\"" -DWITH_BROKER$/;"	m
BROKER_LIBS	config.mk	/^		BROKER_LIBS:=$(BROKER_LIBS) -luuid$/;"	m
BROKER_LIBS	config.mk	/^	BROKER_LIBS:=$(BROKER_LIBS) -lanl$/;"	m
BROKER_LIBS	config.mk	/^	BROKER_LIBS:=$(BROKER_LIBS) -lrt -Wl,--dynamic-list=linker.syms$/;"	m
BROKER_LIBS	config.mk	/^	BROKER_LIBS:=$(BROKER_LIBS) -lsocket -lnsl$/;"	m
BROKER_LIBS	config.mk	/^	BROKER_LIBS:=$(BROKER_LIBS) -lsocket$/;"	m
BROKER_LIBS	config.mk	/^	BROKER_LIBS:=$(BROKER_LIBS) -lssl -lcrypto$/;"	m
BROKER_LIBS	config.mk	/^	BROKER_LIBS:=$(BROKER_LIBS) -lsystemd$/;"	m
BROKER_LIBS	config.mk	/^	BROKER_LIBS:=$(BROKER_LIBS) -lwebsockets$/;"	m
BROKER_LIBS	config.mk	/^	BROKER_LIBS:=$(BROKER_LIBS) -lwrap$/;"	m
BROKER_LIBS	config.mk	/^	BROKER_LIBS:=$(BROKER_LIBS) -static -lwebsockets$/;"	m
BROKER_LIBS	config.mk	/^	BROKER_LIBS:=-ldl -lm$/;"	m
BROKER_LIBS	config.mk	/^	BROKER_LIBS:=-lm$/;"	m
BUFLEN	src/sys_tree.cpp	28;"	d	file:
BrokerMonitor	test/broker/03-publish-qos1-queued-bytes.py	/^class BrokerMonitor(threading.Thread):$/;"	c
CATEGORY_ALLOW_HIERARCHIES	www/conf.py	/^CATEGORY_ALLOW_HIERARCHIES = False$/;"	v
CATEGORY_OUTPUT_FLAT_HIERARCHY	www/conf.py	/^CATEGORY_OUTPUT_FLAT_HIERARCHY = False$/;"	v
CC	client/Makefile	/^CC = g++$/;"	m
CC	lib/Makefile	/^CC = g++$/;"	m
CC	lib/cpp/Makefile	/^CC = g++$/;"	m
CC	src/Makefile	/^CC = g++$/;"	m
CC	test/Makefile	/^CC=cc$/;"	m
CFLAGS	config.mk	/^		CFLAGS?=-O$/;"	m
CFLAGS	config.mk	/^		CFLAGS?=-Wall -ggdb -O2$/;"	m
CFLAGS	config.mk	/^	CFLAGS?=-Wall -ggdb -O2$/;"	m
CFLAGS	examples/mysql_log/Makefile	/^CFLAGS=-Wall -ggdb$/;"	m
CFLAGS	examples/temperature_conversion/Makefile	/^CFLAGS=-Wall -ggdb -I..\/..\/lib -I..\/..\/lib\/cpp$/;"	m
CFLAGS	test/Makefile	/^CFLAGS=-I..\/src -I..\/lib -I. -I.. -Wall -ggdb -DDEBUG -DWITH_CLIENT$/;"	m
CFLAGS	test/broker/c/Makefile	/^CFLAGS=-I..\/..\/..\/lib -I..\/..\/..\/src -Wall -Werror$/;"	m
CFLAGS	test/lib/c/Makefile	/^CFLAGS=-I..\/..\/..\/lib -Werror$/;"	m
CFLAGS	test/lib/cpp/Makefile	/^CFLAGS=-I..\/..\/..\/lib -I..\/..\/..\/lib\/cpp -DDEBUG -Werror$/;"	m
CFLAGS_FINAL	src/db_dump/Makefile	/^CFLAGS_FINAL=${CFLAGS} -I.. -I..\/..\/lib -I..\/..$/;"	m
CLIENT_CFLAGS	config.mk	/^		CLIENT_CFLAGS:=$(CLIENT_CFLAGS) -DWITH_TLS_PSK$/;"	m
CLIENT_CFLAGS	config.mk	/^	CLIENT_CFLAGS:=$(CLIENT_CFLAGS) -DWITH_SOCKS$/;"	m
CLIENT_CFLAGS	config.mk	/^	CLIENT_CFLAGS:=$(CLIENT_CFLAGS) -DWITH_SRV$/;"	m
CLIENT_CFLAGS	config.mk	/^	CLIENT_CFLAGS:=$(CLIENT_CFLAGS) -DWITH_THREADING$/;"	m
CLIENT_CFLAGS	config.mk	/^	CLIENT_CFLAGS:=$(CLIENT_CFLAGS) -DWITH_TLS$/;"	m
CLIENT_CFLAGS	config.mk	/^CLIENT_CFLAGS:=${CFLAGS} ${CPPFLAGS} -I.. -I..\/lib -DVERSION="\\"${VERSION}\\""$/;"	m
CLIENT_CONFIG_H	client/client_shared.h	18;"	d
CLIENT_LDFLAGS	config.mk	/^CLIENT_LDFLAGS:=$(LDFLAGS) -L..\/lib ..\/lib\/libmosquitto.so.${SOVERSION}$/;"	m
CLIENT_PUB	client/client_shared.h	30;"	d
CLIENT_SUB	client/client_shared.h	31;"	d
COMMENT_SYSTEM	www/conf.py	/^COMMENT_SYSTEM = ""$/;"	v
COMPAT_CLOSE	lib/net_mosq.h	34;"	d
COMPAT_CLOSE	lib/net_mosq.h	38;"	d
COMPAT_ECONNRESET	lib/net_mosq.h	35;"	d
COMPAT_ECONNRESET	lib/net_mosq.h	39;"	d
COMPAT_EWOULDBLOCK	lib/net_mosq.h	36;"	d
COMPAT_EWOULDBLOCK	lib/net_mosq.h	40;"	d
COMPILERS	www/conf.py	/^COMPILERS = {$/;"	v
CONNACK	lib/mqtt3_protocol.h	30;"	d
CONNACK_ACCEPTED	lib/mqtt3_protocol.h	44;"	d
CONNACK_REFUSED_BAD_USERNAME_PASSWORD	lib/mqtt3_protocol.h	48;"	d
CONNACK_REFUSED_IDENTIFIER_REJECTED	lib/mqtt3_protocol.h	46;"	d
CONNACK_REFUSED_NOT_AUTHORIZED	lib/mqtt3_protocol.h	49;"	d
CONNACK_REFUSED_PROTOCOL_VERSION	lib/mqtt3_protocol.h	45;"	d
CONNACK_REFUSED_SERVER_UNAVAILABLE	lib/mqtt3_protocol.h	47;"	d
CONNECT	lib/mqtt3_protocol.h	29;"	d
CONTENT_FOOTER_FORMATS	www/conf.py	/^CONTENT_FOOTER_FORMATS = {$/;"	v
COPY_SOURCES	www/conf.py	/^COPY_SOURCES = False$/;"	v
COUNT	examples/subscribe_simple/multiple.cpp	5;"	d	file:
CompileDocbookManpage	www/plugins/docbookmanpage/docbookmanpage.py	/^class CompileDocbookManpage(PageCompiler):$/;"	c
CurrentCostMQTT	misc/currentcost/gnome-panel/CurrentCostMQTT.py	/^class CurrentCostMQTT(gnomeapplet.Applet):$/;"	c
CurrentCostMQTT_factory	misc/currentcost/gnome-panel/CurrentCostMQTT.py	/^def CurrentCostMQTT_factory(applet, iid):$/;"	f
DB_CHUNK_CFG	src/persist.h	24;"	d
DB_CHUNK_CLIENT	src/persist.h	29;"	d
DB_CHUNK_CLIENT_MSG	src/persist.h	26;"	d
DB_CHUNK_MSG_STORE	src/persist.h	25;"	d
DB_CHUNK_RETAIN	src/persist.h	27;"	d
DB_CHUNK_SUB	src/persist.h	28;"	d
DB_HTML_XSL	config.mk	/^DB_HTML_XSL=man\/html.xsl$/;"	m
DECLTYPE	src/deps/uthash.h	37;"	d
DECLTYPE	src/deps/uthash.h	40;"	d
DECLTYPE	src/deps/uthash.h	43;"	d
DECLTYPE_ASSIGN	src/deps/uthash.h	47;"	d
DECLTYPE_ASSIGN	src/deps/uthash.h	53;"	d
DEFAULT_LANG	www/conf.py	/^DEFAULT_LANG = "en"$/;"	v
DEMO_PROTOCOL_COUNT	src/websockets.cpp	/^	DEMO_PROTOCOL_COUNT$/;"	e	enum:mosq_ws_protocols	file:
DIRS	Makefile	/^DIRS=lib client src$/;"	m
DISCONNECT	lib/mqtt3_protocol.h	42;"	d
DISTDIRS	Makefile	/^DISTDIRS=man$/;"	m
DOCDIRS	Makefile	/^DOCDIRS=man$/;"	m
DUMMYPTHREAD_H	lib/dummypthread.h	2;"	d
ELMT_FROM_HH	src/deps/uthash.h	92;"	d
EPROTO	config.h	24;"	d
EXPECT_MATCH	test/lib/c/09-util-topic-matching.cpp	5;"	d	file:
EXPECT_NOMATCH	test/lib/c/09-util-topic-matching.cpp	6;"	d	file:
FAVICONS	www/conf.py	/^FAVICONS = ($/;"	v
FEED_LINKS_APPEND_QUERY	www/conf.py	/^FEED_LINKS_APPEND_QUERY = False$/;"	v
FRONT_INDEX_HEADER	www/conf.py	/^FRONT_INDEX_HEADER = {$/;"	v
FUNC_auth_plugin_acl_check_v2	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_acl_check_v2)(void *, const char *, const char *, const char *, int);$/;"	t
FUNC_auth_plugin_acl_check_v3	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_acl_check_v3)(void *, int, const struct mosquitto *, struct mosquitto_acl_msg *);$/;"	t
FUNC_auth_plugin_cleanup_v2	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_cleanup_v2)(void *, struct mosquitto_auth_opt *, int);$/;"	t
FUNC_auth_plugin_cleanup_v3	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_cleanup_v3)(void *, struct mosquitto_opt *, int);$/;"	t
FUNC_auth_plugin_init_v2	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_init_v2)(void **, struct mosquitto_auth_opt *, int);$/;"	t
FUNC_auth_plugin_init_v3	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_init_v3)(void **, struct mosquitto_opt *, int);$/;"	t
FUNC_auth_plugin_psk_key_get_v2	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_psk_key_get_v2)(void *, const char *, const char *, char *, int);$/;"	t
FUNC_auth_plugin_psk_key_get_v3	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_psk_key_get_v3)(void *, const struct mosquitto *, const char *, const char *, char *, int);$/;"	t
FUNC_auth_plugin_security_cleanup_v2	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_security_cleanup_v2)(void *, struct mosquitto_auth_opt *, int, bool);$/;"	t
FUNC_auth_plugin_security_cleanup_v3	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_security_cleanup_v3)(void *, struct mosquitto_opt *, int, bool);$/;"	t
FUNC_auth_plugin_security_init_v2	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_security_init_v2)(void *, struct mosquitto_auth_opt *, int, bool);$/;"	t
FUNC_auth_plugin_security_init_v3	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_security_init_v3)(void *, struct mosquitto_opt *, int, bool);$/;"	t
FUNC_auth_plugin_unpwd_check_v2	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_unpwd_check_v2)(void *, const char *, const char *);$/;"	t
FUNC_auth_plugin_unpwd_check_v3	src/mosquitto_broker_internal.h	/^typedef int (*FUNC_auth_plugin_unpwd_check_v3)(void *, const struct mosquitto *, const char *, const char *);$/;"	t
FUNC_auth_plugin_version	src/security.cpp	/^typedef int (*FUNC_auth_plugin_version)(void);$/;"	t	file:
GITHUB_COMMIT_SOURCE	www/conf.py	/^GITHUB_COMMIT_SOURCE = True$/;"	v
GITHUB_DEPLOY_BRANCH	www/conf.py	/^GITHUB_DEPLOY_BRANCH = 'master'$/;"	v
GITHUB_REMOTE_NAME	www/conf.py	/^GITHUB_REMOTE_NAME = 'origin'$/;"	v
GITHUB_SOURCE_BRANCH	www/conf.py	/^GITHUB_SOURCE_BRANCH = 'src'$/;"	v
GLOBAL_CONTEXT	www/conf.py	/^GLOBAL_CONTEXT = {}$/;"	v
GLOBAL_CONTEXT_FILLER	www/conf.py	/^GLOBAL_CONTEXT_FILLER = []$/;"	v
G_BYTES_RECEIVED_INC	src/sys_tree.h	34;"	d
G_BYTES_RECEIVED_INC	src/sys_tree.h	49;"	d
G_BYTES_SENT_INC	src/sys_tree.h	35;"	d
G_BYTES_SENT_INC	src/sys_tree.h	50;"	d
G_CLIENTS_EXPIRED_INC	src/sys_tree.h	43;"	d
G_CLIENTS_EXPIRED_INC	src/sys_tree.h	58;"	d
G_CONNECTION_COUNT_INC	src/sys_tree.h	45;"	d
G_CONNECTION_COUNT_INC	src/sys_tree.h	60;"	d
G_MSGS_DROPPED_INC	src/sys_tree.h	42;"	d
G_MSGS_DROPPED_INC	src/sys_tree.h	57;"	d
G_MSGS_RECEIVED_INC	src/sys_tree.h	38;"	d
G_MSGS_RECEIVED_INC	src/sys_tree.h	53;"	d
G_MSGS_SENT_INC	src/sys_tree.h	39;"	d
G_MSGS_SENT_INC	src/sys_tree.h	54;"	d
G_PUB_BYTES_RECEIVED_INC	src/sys_tree.h	36;"	d
G_PUB_BYTES_RECEIVED_INC	src/sys_tree.h	51;"	d
G_PUB_BYTES_SENT_INC	lib/send_mosq.cpp	27;"	d	file:
G_PUB_BYTES_SENT_INC	lib/send_publish.cpp	26;"	d	file:
G_PUB_BYTES_SENT_INC	src/sys_tree.h	37;"	d
G_PUB_BYTES_SENT_INC	src/sys_tree.h	52;"	d
G_PUB_MSGS_RECEIVED_INC	src/sys_tree.h	40;"	d
G_PUB_MSGS_RECEIVED_INC	src/sys_tree.h	55;"	d
G_PUB_MSGS_SENT_INC	src/sys_tree.h	41;"	d
G_PUB_MSGS_SENT_INC	src/sys_tree.h	56;"	d
G_SOCKET_CONNECTIONS_INC	src/sys_tree.h	44;"	d
G_SOCKET_CONNECTIONS_INC	src/sys_tree.h	59;"	d
HASH_ADD	src/deps/uthash.h	160;"	d
HASH_ADD_INT	src/deps/uthash.h	260;"	d
HASH_ADD_KEYPTR	src/deps/uthash.h	173;"	d
HASH_ADD_PTR	src/deps/uthash.h	266;"	d
HASH_ADD_STR	src/deps/uthash.h	254;"	d
HASH_ADD_TO_BKT	src/deps/uthash.h	611;"	d
HASH_BER	src/deps/uthash.h	355;"	d
HASH_BKT_CAPACITY_THRESH	src/deps/uthash.h	89;"	d
HASH_BLOOM_ADD	src/deps/uthash.h	127;"	d
HASH_BLOOM_ADD	src/deps/uthash.h	136;"	d
HASH_BLOOM_BITLEN	src/deps/uthash.h	108;"	d
HASH_BLOOM_BITSET	src/deps/uthash.h	124;"	d
HASH_BLOOM_BITTEST	src/deps/uthash.h	125;"	d
HASH_BLOOM_BYTELEN	src/deps/uthash.h	109;"	d
HASH_BLOOM_BYTELEN	src/deps/uthash.h	138;"	d
HASH_BLOOM_FREE	src/deps/uthash.h	119;"	d
HASH_BLOOM_FREE	src/deps/uthash.h	135;"	d
HASH_BLOOM_MAKE	src/deps/uthash.h	110;"	d
HASH_BLOOM_MAKE	src/deps/uthash.h	134;"	d
HASH_BLOOM_SIGNATURE	src/deps/uthash.h	902;"	d
HASH_BLOOM_TEST	src/deps/uthash.h	130;"	d
HASH_BLOOM_TEST	src/deps/uthash.h	137;"	d
HASH_CLEAR	src/deps/uthash.h	849;"	d
HASH_CNT	src/deps/uthash.h	878;"	d
HASH_COUNT	src/deps/uthash.h	877;"	d
HASH_DEL	src/deps/uthash.h	270;"	d
HASH_DELETE	src/deps/uthash.h	215;"	d
HASH_DEL_IN_BKT	src/deps/uthash.h	625;"	d
HASH_EMIT_KEY	src/deps/uthash.h	337;"	d
HASH_EMIT_KEY	src/deps/uthash.h	344;"	d
HASH_EXPAND_BUCKETS	src/deps/uthash.h	666;"	d
HASH_FCN	src/deps/uthash.h	349;"	d
HASH_FCN	src/deps/uthash.h	351;"	d
HASH_FIND	src/deps/uthash.h	94;"	d
HASH_FIND_INT	src/deps/uthash.h	258;"	d
HASH_FIND_IN_BKT	src/deps/uthash.h	597;"	d
HASH_FIND_PTR	src/deps/uthash.h	264;"	d
HASH_FIND_STR	src/deps/uthash.h	252;"	d
HASH_FNV	src/deps/uthash.h	377;"	d
HASH_FSCK	src/deps/uthash.h	278;"	d
HASH_FSCK	src/deps/uthash.h	330;"	d
HASH_INITIAL_NUM_BUCKETS	src/deps/uthash.h	87;"	d
HASH_INITIAL_NUM_BUCKETS_LOG2	src/deps/uthash.h	88;"	d
HASH_ITER	src/deps/uthash.h	867;"	d
HASH_ITER	src/deps/uthash.h	871;"	d
HASH_JEN	src/deps/uthash.h	416;"	d
HASH_JEN_MIX	src/deps/uthash.h	403;"	d
HASH_KEYCMP	src/deps/uthash.h	594;"	d
HASH_MAKE_TABLE	src/deps/uthash.h	141;"	d
HASH_MUR	src/deps/uthash.h	554;"	d
HASH_OAT	src/deps/uthash.h	387;"	d
HASH_OOPS	src/deps/uthash.h	277;"	d
HASH_OVERHEAD	src/deps/uthash.h	860;"	d
HASH_REPLACE	src/deps/uthash.h	163;"	d
HASH_REPLACE_INT	src/deps/uthash.h	262;"	d
HASH_REPLACE_PTR	src/deps/uthash.h	268;"	d
HASH_REPLACE_STR	src/deps/uthash.h	256;"	d
HASH_SAX	src/deps/uthash.h	367;"	d
HASH_SELECT	src/deps/uthash.h	811;"	d
HASH_SFH	src/deps/uthash.h	468;"	d
HASH_SIGNATURE	src/deps/uthash.h	901;"	d
HASH_SORT	src/deps/uthash.h	718;"	d
HASH_SRT	src/deps/uthash.h	719;"	d
HASH_TO_BKT	src/deps/uthash.h	198;"	d
HAVE_NETINET_IN_H	config.h	11;"	d
HAVE_PSELECT	lib/loop.cpp	36;"	d	file:
HIDDEN_AUTHORS	www/conf.py	/^HIDDEN_AUTHORS = ['Guest']$/;"	v
HIDDEN_CATEGORIES	www/conf.py	/^HIDDEN_CATEGORIES = []$/;"	v
HIDDEN_TAGS	www/conf.py	/^HIDDEN_TAGS = ['mathjax']$/;"	v
HOST	test/msgsps_common.h	1;"	d
IMAGE_FOLDERS	www/conf.py	/^IMAGE_FOLDERS = {'images': 'images'}$/;"	v
INDEX_PATH	www/conf.py	/^INDEX_PATH = "blog"$/;"	v
INSTALL	config.mk	/^INSTALL?=install$/;"	m
INVALID_SOCKET	lib/net_mosq.h	45;"	d
LDFLAGS	examples/mysql_log/Makefile	/^LDFLAGS=..\/..\/lib\/libmosquitto.so.1 -lmysqlclient$/;"	m
LDFLAGS	examples/temperature_conversion/Makefile	/^LDFLAGS=-L..\/..\/lib ..\/..\/lib\/cpp\/libmosquittopp.so.1 ..\/..\/lib\/libmosquitto.so.1$/;"	m
LDFLAGS	test/Makefile	/^LDFLAGS=$/;"	m
LD_LIBRARY_PATH	test/lib/Makefile	/^LD_LIBRARY_PATH=..\/..\/lib$/;"	m
LIBMOSQUITTO_MAJOR	lib/mosquitto.h	48;"	d
LIBMOSQUITTO_MINOR	lib/mosquitto.h	49;"	d
LIBMOSQUITTO_REVISION	lib/mosquitto.h	50;"	d
LIBMOSQUITTO_VERSION_NUMBER	lib/mosquitto.h	52;"	d
LIBS	test/lib/c/Makefile	/^LIBS=..\/..\/..\/lib\/libmosquitto.so.1$/;"	m
LIBS	test/lib/cpp/Makefile	/^LIBS=..\/..\/..\/lib\/libmosquitto.so.1 ..\/..\/..\/lib\/cpp\/libmosquittopp.so.1$/;"	m
LIB_CFLAGS	config.mk	/^		LIB_CFLAGS:=$(LIB_CFLAGS) -DWITH_TLS_PSK$/;"	m
LIB_CFLAGS	config.mk	/^		LIB_CFLAGS:=$(LIB_CFLAGS) -fPIC$/;"	m
LIB_CFLAGS	config.mk	/^		LIB_CFLAGS:=$(LIB_CFLAGS) -xc99 -KPIC$/;"	m
LIB_CFLAGS	config.mk	/^	LIB_CFLAGS:=$(LIB_CFLAGS) -DWITH_SOCKS$/;"	m
LIB_CFLAGS	config.mk	/^	LIB_CFLAGS:=$(LIB_CFLAGS) -DWITH_SRV$/;"	m
LIB_CFLAGS	config.mk	/^	LIB_CFLAGS:=$(LIB_CFLAGS) -DWITH_THREADING$/;"	m
LIB_CFLAGS	config.mk	/^	LIB_CFLAGS:=$(LIB_CFLAGS) -DWITH_TLS$/;"	m
LIB_CFLAGS	config.mk	/^	LIB_CFLAGS:=$(LIB_CFLAGS) -fPIC$/;"	m
LIB_CFLAGS	config.mk	/^LIB_CFLAGS:=${CFLAGS} ${CPPFLAGS} -I. -I.. -I..\/lib$/;"	m
LIB_CLOSE	src/lib_load.h	28;"	d
LIB_CLOSE	src/lib_load.h	32;"	d
LIB_CXXFLAGS	config.mk	/^		LIB_CXXFLAGS:=$(LIB_CXXFLAGS) -KPIC$/;"	m
LIB_CXXFLAGS	config.mk	/^		LIB_CXXFLAGS:=$(LIB_CXXFLAGS) -fPIC$/;"	m
LIB_CXXFLAGS	config.mk	/^	LIB_CXXFLAGS:=$(LIB_CXXFLAGS) -fPIC$/;"	m
LIB_CXXFLAGS	config.mk	/^LIB_CXXFLAGS:=$(CFLAGS) ${CPPFLAGS} -I. -I.. -I..\/lib$/;"	m
LIB_ERROR	src/security.cpp	/^void LIB_ERROR(void)$/;"	f
LIB_LDFLAGS	config.mk	/^	LIB_LDFLAGS:=$(LIB_LDFLAGS) -Wl,--version-script=linker.version -Wl,-soname,libmosquitto.so.$(SOVERSION)$/;"	m
LIB_LDFLAGS	config.mk	/^LIB_LDFLAGS:=${LDFLAGS}$/;"	m
LIB_LDFLAGS	lib/cpp/Makefile	/^	LIB_LDFLAGS:=$(LDFLAGS) -Wl,-soname,libmosquittopp.so.${SOVERSION}$/;"	m
LIB_LIBS	config.mk	/^	LIB_LIBS:=$(LIB_LIBS) -lcares$/;"	m
LIB_LIBS	config.mk	/^	LIB_LIBS:=$(LIB_LIBS) -lpthread$/;"	m
LIB_LIBS	config.mk	/^	LIB_LIBS:=$(LIB_LIBS) -lrt$/;"	m
LIB_LIBS	config.mk	/^	LIB_LIBS:=$(LIB_LIBS) -lsocket -lnsl$/;"	m
LIB_LIBS	config.mk	/^	LIB_LIBS:=$(LIB_LIBS) -lsocket$/;"	m
LIB_LIBS	config.mk	/^	LIB_LIBS:=$(LIB_LIBS) -lssl -lcrypto$/;"	m
LIB_LIBS	config.mk	/^LIB_LIBS:=$/;"	m
LIB_LOAD	src/lib_load.h	27;"	d
LIB_LOAD	src/lib_load.h	31;"	d
LIB_LOAD_H	src/lib_load.h	18;"	d
LIB_SYM	src/lib_load.h	29;"	d
LIB_SYM	src/lib_load.h	33;"	d
LIB_SYM_EASY	src/lib_load.h	36;"	d
LICENSE	www/conf.py	/^LICENSE = ""$/;"	v
LOGGING_MOSQ_H	lib/logging_mosq.h	17;"	d
MAKE_ALL	config.mk	/^	MAKE_ALL:=$(MAKE_ALL) docs$/;"	m
MAKE_ALL	config.mk	/^MAKE_ALL:=mosquitto$/;"	m
MARKDOWN_EXTENSIONS	www/conf.py	/^MARKDOWN_EXTENSIONS = ['fenced_code', 'codehilite', 'extra']$/;"	v
MAX_BUFFER_LEN	src/mosquitto_passwd.cpp	50;"	d	file:
MAX_EVENTS	src/loop.cpp	29;"	d	file:
MEMORY_MOSQ_H	lib/memory_mosq.h	18;"	d
MESSAGES_MOSQ_H	lib/messages_mosq.h	17;"	d
MESSAGE_COUNT	test/msgsps_common.h	7;"	d
MESSAGE_SIZE	test/msgsps_common.h	8;"	d
MOSQUITTOPP_H	lib/cpp/mosquittopp.h	18;"	d
MOSQUITTO_BROKER_H	src/mosquitto_broker.h	18;"	d
MOSQUITTO_BROKER_INTERNAL_H	src/mosquitto_broker_internal.h	19;"	d
MOSQUITTO_H	lib/mosquitto.h	18;"	d
MOSQUITTO_INTERNAL_H	lib/mosquitto_internal.h	19;"	d
MOSQUITTO_PLUGIN_H	src/mosquitto_plugin.h	18;"	d
MOSQUITTO_PLUGIN_H	test/broker/c/mosquitto_plugin_v2.h	18;"	d
MOSQ_ACL_NONE	src/mosquitto_plugin.h	22;"	d
MOSQ_ACL_NONE	test/broker/c/mosquitto_plugin_v2.h	22;"	d
MOSQ_ACL_READ	src/mosquitto_plugin.h	23;"	d
MOSQ_ACL_READ	test/broker/c/mosquitto_plugin_v2.h	23;"	d
MOSQ_ACL_SUBSCRIBE	src/mosquitto_plugin.h	25;"	d
MOSQ_ACL_WRITE	src/mosquitto_plugin.h	24;"	d
MOSQ_ACL_WRITE	test/broker/c/mosquitto_plugin_v2.h	24;"	d
MOSQ_AUTH_PLUGIN_VERSION	src/mosquitto_plugin.h	20;"	d
MOSQ_AUTH_PLUGIN_VERSION	test/broker/c/mosquitto_plugin_v2.h	20;"	d
MOSQ_DB_VERSION	src/persist.h	20;"	d
MOSQ_ERR_ACL_DENIED	lib/mosquitto.h	/^	MOSQ_ERR_ACL_DENIED = 12,$/;"	e	enum:mosq_err_t
MOSQ_ERR_ACL_DENIED	test/broker/c/auth_plugin_v2.cpp	/^	MOSQ_ERR_ACL_DENIED = 12$/;"	e	enum:mosq_err_t	file:
MOSQ_ERR_AUTH	lib/mosquitto.h	/^	MOSQ_ERR_AUTH = 11,$/;"	e	enum:mosq_err_t
MOSQ_ERR_AUTH	test/broker/c/auth_plugin_v2.cpp	/^	MOSQ_ERR_AUTH = 11,$/;"	e	enum:mosq_err_t	file:
MOSQ_ERR_CONN_LOST	lib/mosquitto.h	/^	MOSQ_ERR_CONN_LOST = 7,$/;"	e	enum:mosq_err_t
MOSQ_ERR_CONN_PENDING	lib/mosquitto.h	/^	MOSQ_ERR_CONN_PENDING = -1,$/;"	e	enum:mosq_err_t
MOSQ_ERR_CONN_REFUSED	lib/mosquitto.h	/^	MOSQ_ERR_CONN_REFUSED = 5,$/;"	e	enum:mosq_err_t
MOSQ_ERR_EAI	lib/mosquitto.h	/^	MOSQ_ERR_EAI = 15,$/;"	e	enum:mosq_err_t
MOSQ_ERR_ERRNO	lib/mosquitto.h	/^	MOSQ_ERR_ERRNO = 14,$/;"	e	enum:mosq_err_t
MOSQ_ERR_INVAL	lib/mosquitto.h	/^	MOSQ_ERR_INVAL = 3,$/;"	e	enum:mosq_err_t
MOSQ_ERR_KEEPALIVE	lib/mosquitto.h	/^	MOSQ_ERR_KEEPALIVE = 19,$/;"	e	enum:mosq_err_t
MOSQ_ERR_LOOKUP	lib/mosquitto.h	/^	MOSQ_ERR_LOOKUP = 20,$/;"	e	enum:mosq_err_t
MOSQ_ERR_MALFORMED_UTF8	lib/mosquitto.h	/^	MOSQ_ERR_MALFORMED_UTF8 = 18,$/;"	e	enum:mosq_err_t
MOSQ_ERR_NOMEM	lib/mosquitto.h	/^	MOSQ_ERR_NOMEM = 1,$/;"	e	enum:mosq_err_t
MOSQ_ERR_NOT_FOUND	lib/mosquitto.h	/^	MOSQ_ERR_NOT_FOUND = 6,$/;"	e	enum:mosq_err_t
MOSQ_ERR_NOT_SUPPORTED	lib/mosquitto.h	/^	MOSQ_ERR_NOT_SUPPORTED = 10,$/;"	e	enum:mosq_err_t
MOSQ_ERR_NO_CONN	lib/mosquitto.h	/^	MOSQ_ERR_NO_CONN = 4,$/;"	e	enum:mosq_err_t
MOSQ_ERR_PAYLOAD_SIZE	lib/mosquitto.h	/^	MOSQ_ERR_PAYLOAD_SIZE = 9,$/;"	e	enum:mosq_err_t
MOSQ_ERR_PLUGIN_DEFER	lib/mosquitto.h	/^	MOSQ_ERR_PLUGIN_DEFER = 17,$/;"	e	enum:mosq_err_t
MOSQ_ERR_PROTOCOL	lib/mosquitto.h	/^	MOSQ_ERR_PROTOCOL = 2,$/;"	e	enum:mosq_err_t
MOSQ_ERR_PROXY	lib/mosquitto.h	/^	MOSQ_ERR_PROXY = 16,$/;"	e	enum:mosq_err_t
MOSQ_ERR_SUCCESS	lib/mosquitto.h	/^	MOSQ_ERR_SUCCESS = 0,$/;"	e	enum:mosq_err_t
MOSQ_ERR_SUCCESS	test/broker/c/auth_plugin_v2.cpp	/^	MOSQ_ERR_SUCCESS = 0,$/;"	e	enum:mosq_err_t	file:
MOSQ_ERR_TLS	lib/mosquitto.h	/^	MOSQ_ERR_TLS = 8,$/;"	e	enum:mosq_err_t
MOSQ_ERR_UNKNOWN	lib/mosquitto.h	/^	MOSQ_ERR_UNKNOWN = 13,$/;"	e	enum:mosq_err_t
MOSQ_LOG_ALL	lib/mosquitto.h	64;"	d
MOSQ_LOG_DEBUG	lib/mosquitto.h	60;"	d
MOSQ_LOG_ERR	lib/mosquitto.h	59;"	d
MOSQ_LOG_INFO	lib/mosquitto.h	56;"	d
MOSQ_LOG_NONE	lib/mosquitto.h	55;"	d
MOSQ_LOG_NOTICE	lib/mosquitto.h	57;"	d
MOSQ_LOG_SUBSCRIBE	lib/mosquitto.h	61;"	d
MOSQ_LOG_UNSUBSCRIBE	lib/mosquitto.h	62;"	d
MOSQ_LOG_WARNING	lib/mosquitto.h	58;"	d
MOSQ_LOG_WEBSOCKETS	lib/mosquitto.h	63;"	d
MOSQ_LSB	lib/net_mosq.h	50;"	d
MOSQ_MQTT_ID_MAX_LENGTH	lib/mosquitto.h	100;"	d
MOSQ_MSB	lib/net_mosq.h	49;"	d
MOSQ_OBJS	lib/Makefile	/^MOSQ_OBJS=mosquitto.o \\$/;"	m
MOSQ_OPT_PROTOCOL_VERSION	lib/mosquitto.h	/^	MOSQ_OPT_PROTOCOL_VERSION = 1,$/;"	e	enum:mosq_opt_t
MOSQ_OPT_SSL_CTX	lib/mosquitto.h	/^	MOSQ_OPT_SSL_CTX = 2,$/;"	e	enum:mosq_opt_t
MOSQ_OPT_SSL_CTX_WITH_DEFAULTS	lib/mosquitto.h	/^	MOSQ_OPT_SSL_CTX_WITH_DEFAULTS = 3,$/;"	e	enum:mosq_opt_t
MOSQ_PAYLOAD_UNION_SIZE	src/mosquitto_broker_internal.h	118;"	d
MOSQ_TOPIC_ELEMENT_UNION_SIZE	src/mosquitto_broker_internal.h	128;"	d
MQTT3_LOG_ALL	src/mosquitto_broker_internal.h	69;"	d
MQTT3_LOG_FILE	src/mosquitto_broker_internal.h	65;"	d
MQTT3_LOG_NONE	src/mosquitto_broker_internal.h	63;"	d
MQTT3_LOG_STDERR	src/mosquitto_broker_internal.h	67;"	d
MQTT3_LOG_STDOUT	src/mosquitto_broker_internal.h	66;"	d
MQTT3_LOG_SYSLOG	src/mosquitto_broker_internal.h	64;"	d
MQTT3_LOG_TOPIC	src/mosquitto_broker_internal.h	68;"	d
MQTT3_PROTOCOL_H	lib/mqtt3_protocol.h	18;"	d
MQTT_MAX_PAYLOAD	lib/mqtt3_protocol.h	51;"	d
MQTT_PROTOCOL_V31	lib/mosquitto.h	102;"	d
MQTT_PROTOCOL_V311	lib/mosquitto.h	103;"	d
MSGMODE_CMD	client/client_shared.h	24;"	d
MSGMODE_FILE	client/client_shared.h	27;"	d
MSGMODE_NONE	client/client_shared.h	23;"	d
MSGMODE_NULL	client/client_shared.h	28;"	d
MSGMODE_STDIN_FILE	client/client_shared.h	26;"	d
MSGMODE_STDIN_LINE	client/client_shared.h	25;"	d
MUR_FMIX	src/deps/uthash.h	545;"	d
MUR_GETBLOCK	src/deps/uthash.h	523;"	d
MUR_GETBLOCK	src/deps/uthash.h	539;"	d
MUR_ONE_THREE	src/deps/uthash.h	533;"	d
MUR_ONE_THREE	src/deps/uthash.h	537;"	d
MUR_PLUS0_ALIGNED	src/deps/uthash.h	525;"	d
MUR_PLUS1_ALIGNED	src/deps/uthash.h	526;"	d
MUR_PLUS2_ALIGNED	src/deps/uthash.h	527;"	d
MUR_PLUS3_ALIGNED	src/deps/uthash.h	528;"	d
MUR_ROTL32	src/deps/uthash.h	544;"	d
MUR_THREE_ONE	src/deps/uthash.h	531;"	d
MUR_THREE_ONE	src/deps/uthash.h	535;"	d
MUR_TWO_TWO	src/deps/uthash.h	532;"	d
MUR_TWO_TWO	src/deps/uthash.h	536;"	d
NAVIGATION_LINKS	www/conf.py	/^NAVIGATION_LINKS = {$/;"	v
NET_MOSQ_H	lib/net_mosq.h	17;"	d
NEW_POST_DATE_PATH	www/conf.py	/^NEW_POST_DATE_PATH = True$/;"	v
NEW_POST_DATE_PATH_FORMAT	www/conf.py	/^NEW_POST_DATE_PATH_FORMAT = '%Y\/%m'$/;"	v
NO_DECLTYPE	src/deps/uthash.h	39;"	d
OBJS	src/Makefile	/^OBJS=	mosquitto.o \\$/;"	m
OBJS	test/Makefile	/^OBJS=context.o database.o logging.o memory.o net.o raw_send.o raw_send_client.o read_handle.o read_handle_client.o util.o$/;"	m
OUTPUT_FOLDER	www/conf.py	/^OUTPUT_FOLDER = '\/home\/mosqorg\/site\/mosquitto.org'$/;"	v
OrderedDict	www/plugins/docbookmanpage/docbookmanpage.py	/^    OrderedDict = dict  # NOQA$/;"	v
PACKET_MOSQ_H	lib/packet_mosq.h	17;"	d
PAGES	www/conf.py	/^PAGES = ($/;"	v
PASSWD_LIBS	config.mk	/^	PASSWD_LIBS:=-lcrypto$/;"	m
PASSWD_LIBS	config.mk	/^PASSWD_LIBS:=$/;"	m
PERSIST_H	src/persist.h	18;"	d
PINGREQ	lib/mqtt3_protocol.h	40;"	d
PINGRESP	lib/mqtt3_protocol.h	41;"	d
PORT	test/msgsps_common.h	2;"	d
POSTS	www/conf.py	/^POSTS = ($/;"	v
POSTS_SECTIONS	www/conf.py	/^POSTS_SECTIONS = True$/;"	v
PRETTY_URLS	www/conf.py	/^PRETTY_URLS = True$/;"	v
PROTOCOL_HTTP	src/websockets.cpp	/^	PROTOCOL_HTTP = 0,$/;"	e	enum:mosq_ws_protocols	file:
PROTOCOL_MQTT	src/websockets.cpp	/^	PROTOCOL_MQTT,$/;"	e	enum:mosq_ws_protocols	file:
PROTOCOL_NAME_v31	lib/mqtt3_protocol.h	22;"	d
PROTOCOL_NAME_v311	lib/mqtt3_protocol.h	25;"	d
PROTOCOL_VERSION_v31	lib/mqtt3_protocol.h	23;"	d
PROTOCOL_VERSION_v311	lib/mqtt3_protocol.h	26;"	d
PUBACK	lib/mqtt3_protocol.h	32;"	d
PUBCOMP	lib/mqtt3_protocol.h	35;"	d
PUBLISH	lib/mqtt3_protocol.h	31;"	d
PUBREC	lib/mqtt3_protocol.h	33;"	d
PUBREL	lib/mqtt3_protocol.h	34;"	d
PUB_QOS	test/msgsps_common.h	4;"	d
READ_HANDLE_H	lib/read_handle.h	17;"	d
REAL_WITH_MEMORY_TRACKING	lib/memory_mosq.h	24;"	d
REDIRECTIONS	www/conf.py	/^    ]$/;"	v
RSS_COPYRIGHT_FORMATS	www/conf.py	/^RSS_COPYRIGHT_FORMATS = CONTENT_FOOTER_FORMATS$/;"	v
RSS_COPYRIGHT_PLAIN	www/conf.py	/^RSS_COPYRIGHT_PLAIN = 'Contents © {date} {author} {license}'$/;"	v
SALT_LEN	src/mosquitto_passwd.cpp	51;"	d	file:
SEND_MOSQ_H	lib/send_mosq.h	17;"	d
SHOW_BLOG_TITLE	www/conf.py	/^SHOW_BLOG_TITLE = False$/;"	v
SHOW_SOURCELINK	www/conf.py	/^SHOW_SOURCELINK = False$/;"	v
SITE_URL	www/conf.py	/^SITE_URL = "https:\/\/mosquitto.org\/"$/;"	v
SOCKS_ATYPE_DOMAINNAME	lib/socks_mosq.cpp	40;"	d	file:
SOCKS_ATYPE_IP_V4	lib/socks_mosq.cpp	39;"	d	file:
SOCKS_ATYPE_IP_V6	lib/socks_mosq.cpp	41;"	d	file:
SOCKS_AUTH_GSS	lib/socks_mosq.cpp	35;"	d	file:
SOCKS_AUTH_NONE	lib/socks_mosq.cpp	34;"	d	file:
SOCKS_AUTH_NO_ACCEPTABLE	lib/socks_mosq.cpp	37;"	d	file:
SOCKS_AUTH_USERPASS	lib/socks_mosq.cpp	36;"	d	file:
SOCKS_MOSQ_H	lib/socks_mosq.h	18;"	d
SOCKS_REPLY_ADDRESS_TYPE_NOT_SUPPORTED	lib/socks_mosq.cpp	51;"	d	file:
SOCKS_REPLY_COMMAND_NOT_SUPPORTED	lib/socks_mosq.cpp	50;"	d	file:
SOCKS_REPLY_CONNECTION_NOT_ALLOWED	lib/socks_mosq.cpp	45;"	d	file:
SOCKS_REPLY_CONNECTION_REFUSED	lib/socks_mosq.cpp	48;"	d	file:
SOCKS_REPLY_GENERAL_FAILURE	lib/socks_mosq.cpp	44;"	d	file:
SOCKS_REPLY_HOST_UNREACHABLE	lib/socks_mosq.cpp	47;"	d	file:
SOCKS_REPLY_NETWORK_UNREACHABLE	lib/socks_mosq.cpp	46;"	d	file:
SOCKS_REPLY_SUCCEEDED	lib/socks_mosq.cpp	43;"	d	file:
SOCKS_REPLY_TTL_EXPIRED	lib/socks_mosq.cpp	49;"	d	file:
SOVERSION	config.mk	/^SOVERSION=1$/;"	m
SOVERSION	test/Makefile	/^SOVERSION=1$/;"	m
SSL_DATA_PENDING	lib/tls_mosq.h	21;"	d
SSL_DATA_PENDING	lib/tls_mosq.h	23;"	d
STATUS_CONNACK_RECVD	client/pub_client.cpp	36;"	d	file:
STATUS_CONNECTING	client/pub_client.cpp	35;"	d	file:
STATUS_DISCONNECTING	client/pub_client.cpp	38;"	d	file:
STATUS_WAITING	client/pub_client.cpp	37;"	d	file:
STREMPTY	lib/mosquitto_internal.h	289;"	d
STRIP	config.mk	/^STRIP?=strip$/;"	m
STRIP_INDEXES	www/conf.py	/^STRIP_INDEXES = True$/;"	v
STRIP_OPTS	config.mk	/^	STRIP_OPTS?=-s --strip-program=${CROSS_COMPILE}${STRIP}$/;"	m
SUBACK	lib/mqtt3_protocol.h	37;"	d
SUBSCRIBE	lib/mqtt3_protocol.h	36;"	d
SUB_QOS	test/msgsps_common.h	5;"	d
SYS_TREE_H	src/sys_tree.h	18;"	d
SYS_TREE_QOS	src/sys_tree.cpp	30;"	d	file:
SigThreadProc	src/signals.cpp	/^DWORD WINAPI SigThreadProc(void* data)$/;"	f
StoreCounts	test/broker/03-publish-qos1-queued-bytes.py	/^class StoreCounts():$/;"	c
TAG_PATH	www/conf.py	/^TAG_PATH = "blog\/categories"$/;"	v
TEMPERATURE_CONVERSION_H	examples/temperature_conversion/temperature_conversion.h	2;"	d
THEME	www/conf.py	/^THEME = "mosquitto"$/;"	v
THEME_COLOR	www/conf.py	/^THEME_COLOR = '#3c5280'$/;"	v
TIMEZONE	www/conf.py	/^TIMEZONE = "Europe\/London"$/;"	v
TIME_MOSQ_H	lib/time_mosq.h	18;"	d
TLS_MOSQ_H	lib/tls_mosq.h	18;"	d
TRANSLATIONS	www/conf.py	/^TRANSLATIONS = {$/;"	v
TRANSLATIONS_PATTERN	www/conf.py	/^TRANSLATIONS_PATTERN = "{path}.{lang}.{ext}"$/;"	v
UHPA_ACCESS	src/uhpa.h	156;"	d
UHPA_ACCESS	src/uhpa.h	161;"	d
UHPA_ACCESS_CHK	src/uhpa.h	137;"	d
UHPA_ACCESS_PAYLOAD	src/mosquitto_broker_internal.h	124;"	d
UHPA_ACCESS_STR	src/uhpa.h	167;"	d
UHPA_ACCESS_TOPIC	src/mosquitto_broker_internal.h	134;"	d
UHPA_ALLOC	src/uhpa.h	155;"	d
UHPA_ALLOC	src/uhpa.h	160;"	d
UHPA_ALLOC_CHK	src/uhpa.h	132;"	d
UHPA_ALLOC_PAYLOAD	src/mosquitto_broker_internal.h	123;"	d
UHPA_ALLOC_STR	src/uhpa.h	166;"	d
UHPA_ALLOC_TOPIC	src/mosquitto_broker_internal.h	133;"	d
UHPA_FREE	src/uhpa.h	157;"	d
UHPA_FREE	src/uhpa.h	162;"	d
UHPA_FREE_CHK	src/uhpa.h	139;"	d
UHPA_FREE_PAYLOAD	src/mosquitto_broker_internal.h	125;"	d
UHPA_FREE_STR	src/uhpa.h	168;"	d
UHPA_FREE_TOPIC	src/mosquitto_broker_internal.h	135;"	d
UHPA_H	src/uhpa.h	17;"	d
UHPA_MOVE	src/uhpa.h	158;"	d
UHPA_MOVE	src/uhpa.h	163;"	d
UHPA_MOVE_CHK	src/uhpa.h	145;"	d
UHPA_MOVE_PAYLOAD	src/mosquitto_broker_internal.h	126;"	d
UHPA_MOVE_STR	src/uhpa.h	169;"	d
UHPA_MOVE_TOPIC	src/mosquitto_broker_internal.h	136;"	d
UNAME	config.mk	/^UNAME:=$(shell uname -s)$/;"	m
UNSLUGIFY_TITLES	www/conf.py	/^UNSLUGIFY_TITLES = True$/;"	v
UNSUBACK	lib/mqtt3_protocol.h	39;"	d
UNSUBSCRIBE	lib/mqtt3_protocol.h	38;"	d
USE_BASE_TAG	www/conf.py	/^USE_BASE_TAG = False$/;"	v
USE_BUNDLES	www/conf.py	/^USE_BUNDLES = False$/;"	v
UTHASH_H	src/deps/uthash.h	25;"	d
UTHASH_VERSION	src/deps/uthash.h	67;"	d
UTIL_MOSQ_H	lib/util_mosq.h	17;"	d
UT_hash_bucket	src/deps/uthash.h	/^typedef struct UT_hash_bucket {$/;"	s
UT_hash_bucket	src/deps/uthash.h	/^} UT_hash_bucket;$/;"	t	typeref:struct:UT_hash_bucket
UT_hash_handle	src/deps/uthash.h	/^typedef struct UT_hash_handle {$/;"	s
UT_hash_handle	src/deps/uthash.h	/^} UT_hash_handle;$/;"	t	typeref:struct:UT_hash_handle
UT_hash_table	src/deps/uthash.h	/^typedef struct UT_hash_table {$/;"	s
UT_hash_table	src/deps/uthash.h	/^} UT_hash_table;$/;"	t	typeref:struct:UT_hash_table
VERSION	config.mk	/^VERSION=1.5.3$/;"	m
WEBSOCKET_CLIENT	src/mosquitto_broker_internal.h	71;"	d
WILL_MOSQ_H	lib/will_mosq.h	18;"	d
WITH_BRIDGE	config.mk	/^WITH_BRIDGE:=yes$/;"	m
WITH_BUNDLED_DEPS	config.mk	/^WITH_BUNDLED_DEPS:=yes$/;"	m
WITH_DOCS	config.mk	/^WITH_DOCS:=yes$/;"	m
WITH_EC	config.mk	/^WITH_EC:=yes$/;"	m
WITH_EPOLL	config.mk	/^WITH_EPOLL:=yes$/;"	m
WITH_MEMORY_TRACKING	config.mk	/^WITH_MEMORY_TRACKING:=yes$/;"	m
WITH_PERSISTENCE	config.mk	/^WITH_PERSISTENCE:=yes$/;"	m
WITH_SOCKS	config.mk	/^WITH_SOCKS:=yes$/;"	m
WITH_SRV	config.mk	/^WITH_SRV:=no$/;"	m
WITH_STATIC_LIBRARIES	config.mk	/^WITH_STATIC_LIBRARIES:=no$/;"	m
WITH_STRIP	config.mk	/^WITH_STRIP:=no$/;"	m
WITH_SYSTEMD	config.mk	/^WITH_SYSTEMD:=no$/;"	m
WITH_SYS_TREE	config.mk	/^WITH_SYS_TREE:=yes$/;"	m
WITH_THREADING	config.mk	/^WITH_THREADING:=yes$/;"	m
WITH_TLS	config.mk	/^WITH_TLS:=yes$/;"	m
WITH_TLS_PSK	config.mk	/^WITH_TLS_PSK:=yes$/;"	m
WITH_UUID	config.mk	/^WITH_UUID:=yes$/;"	m
WITH_WEBSOCKETS	config.mk	/^WITH_WEBSOCKETS:=no$/;"	m
WP	src/deps/uthash.h	529;"	d
WRITE_TAG_CLOUD	www/conf.py	/^WRITE_TAG_CLOUD = True$/;"	v
WinMain	src/mosquitto.cpp	/^int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)$/;"	f
XSLTPROC	config.mk	/^XSLTPROC=xsltproc$/;"	m
_DEFAULT_SOURCE	config.h	14;"	d
_GNU_SOURCE	lib/net_mosq.cpp	17;"	d	file:
_GNU_SOURCE	lib/net_mosq.cpp	26;"	d	file:
_GNU_SOURCE	src/loop.cpp	22;"	d	file:
_POSIX_C_SOURCE	config.h	15;"	d
_WIN32_WINNT	lib/time_mosq.cpp	25;"	d	file:
_XOPEN_SOURCE	config.h	13;"	d
_XOPEN_SOURCE	config.h	9;"	d
__BSD_VISIBLE	config.h	10;"	d
__DARWIN_C_SOURCE	config.h	7;"	d
__attribute__	src/mosquitto_broker_internal.h	59;"	d
__init__	misc/currentcost/gnome-panel/CurrentCostMQTT.py	/^    def __init__(self, applet, iid):$/;"	m	class:CurrentCostMQTT
__init__	test/broker/03-publish-qos1-queued-bytes.py	/^    def __init__(self):$/;"	m	class:StoreCounts
__init__	test/broker/03-publish-qos1-queued-bytes.py	/^    def __init__(self, group=None, target=None, name=None, args=(), kwargs=None, verbose=None):$/;"	m	class:BrokerMonitor
__repr__	test/broker/03-publish-qos1-queued-bytes.py	/^    def __repr__(self):$/;"	m	class:StoreCounts	file:
_mosquitto_free	src/db_dump/db_dump.cpp	35;"	d	file:
_mosquitto_malloc	src/db_dump/db_dump.cpp	34;"	d	file:
access	src/mosquitto_broker_internal.h	/^	int access;$/;"	m	struct:mosquitto__acl
achan	lib/mosquitto_internal.h	/^	ares_channel achan;$/;"	m	struct:mosquitto
acl	src/mosquitto_broker_internal.h	/^	struct mosquitto__acl *acl;$/;"	m	struct:mosquitto__acl_user	typeref:struct:mosquitto__acl_user::mosquitto__acl
acl__check_single	src/security.cpp	/^static int acl__check_single(struct mosquitto__auth_plugin_config *auth_plugin, struct mosquitto *context, struct mosquitto_acl_msg *msg, int access)$/;"	f	file:
acl__cleanup	src/security_default.cpp	/^static int acl__cleanup(struct mosquitto_db *db, bool reload)$/;"	f	file:
acl__cleanup_single	src/security_default.cpp	/^static void acl__cleanup_single(struct mosquitto__security_options *security_opts)$/;"	f	file:
acl_check_v2	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_acl_check_v2 acl_check_v2;$/;"	m	struct:mosquitto__auth_plugin
acl_check_v3	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_acl_check_v3 acl_check_v3;$/;"	m	struct:mosquitto__auth_plugin
acl_file	src/mosquitto_broker_internal.h	/^	char *acl_file;$/;"	m	struct:mosquitto__security_options
acl_list	lib/mosquitto_internal.h	/^	struct mosquitto__acl_user *acl_list;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto__acl_user
acl_list	src/mosquitto_broker_internal.h	/^	struct mosquitto__acl_user *acl_list;$/;"	m	struct:mosquitto__security_options	typeref:struct:mosquitto__security_options::mosquitto__acl_user
acl_patterns	src/mosquitto_broker_internal.h	/^	struct mosquitto__acl *acl_patterns;$/;"	m	struct:mosquitto__security_options	typeref:struct:mosquitto__security_options::mosquitto__acl
aclfile__parse	src/security_default.cpp	/^static int aclfile__parse(struct mosquitto_db *db, struct mosquitto__security_options *security_opts)$/;"	f	file:
add__acl	src/security_default.cpp	/^int add__acl(struct mosquitto__security_options *security_opts, const char *user, const char *topic, int access)$/;"	f
add__acl_pattern	src/security_default.cpp	/^int add__acl_pattern(struct mosquitto__security_options *security_opts, const char *topic, int access)$/;"	f
address	lib/mosquitto_internal.h	/^	char *address;$/;"	m	struct:mosquitto
address	src/mosquitto_broker_internal.h	/^	char *address;$/;"	m	struct:bridge_address
address_count	src/mosquitto_broker_internal.h	/^	int address_count;$/;"	m	struct:mosquitto__bridge
addresses	src/mosquitto_broker_internal.h	/^	struct bridge_address *addresses;$/;"	m	struct:mosquitto__bridge	typeref:struct:mosquitto__bridge::bridge_address
adns	lib/mosquitto_internal.h	/^	struct gaicb *adns; \/* For getaddrinfo_a *\/$/;"	m	struct:mosquitto	typeref:struct:mosquitto::gaicb
allow_anonymous	src/mosquitto_broker_internal.h	/^	int8_t allow_anonymous;$/;"	m	struct:mosquitto__security_options
allow_duplicate_messages	src/mosquitto_broker_internal.h	/^	bool allow_duplicate_messages;$/;"	m	struct:mosquitto__config
allow_severity	src/mosquitto.cpp	/^int allow_severity = LOG_INFO;$/;"	v
allow_zero_length_clientid	src/mosquitto_broker_internal.h	/^	bool allow_zero_length_clientid;$/;"	m	struct:mosquitto__security_options
array	src/mosquitto_broker_internal.h	/^	char array[MOSQ_PAYLOAD_UNION_SIZE];$/;"	m	union:__anon1
array	src/mosquitto_broker_internal.h	/^	char array[MOSQ_TOPIC_ELEMENT_UNION_SIZE];$/;"	m	union:__anon2
assert_invalid	test/lib/c/09-util-utf8-validate.cpp	/^void assert_invalid(const char *str)$/;"	f
assert_invalid	test/lib/cpp/09-util-utf8-validate.cpp	/^void assert_invalid(const char *str)$/;"	f
assert_valid	test/lib/c/09-util-utf8-validate.cpp	/^void assert_valid(const char *str)$/;"	f
assert_valid	test/lib/cpp/09-util-utf8-validate.cpp	/^void assert_valid(const char *str)$/;"	f
assert_valid_len	test/lib/c/09-util-utf8-validate.cpp	/^void assert_valid_len(const char *str, int len)$/;"	f
assert_valid_len	test/lib/cpp/09-util-utf8-validate.cpp	/^void assert_valid_len(const char *str, int len)$/;"	f
attempt_unsubscribe	src/mosquitto_broker_internal.h	/^	bool attempt_unsubscribe;$/;"	m	struct:mosquitto__bridge
auth_plugin_config_count	src/mosquitto_broker_internal.h	/^	int auth_plugin_config_count;$/;"	m	struct:mosquitto__security_options
auth_plugin_configs	src/mosquitto_broker_internal.h	/^	struct mosquitto__auth_plugin_config *auth_plugin_configs;$/;"	m	struct:mosquitto__security_options	typeref:struct:mosquitto__security_options::mosquitto__auth_plugin_config
auth_plugin_count	src/mosquitto_broker_internal.h	/^	int auth_plugin_count;$/;"	m	struct:mosquitto_db
auto_id_prefix	src/mosquitto_broker_internal.h	/^	char *auto_id_prefix;$/;"	m	struct:mosquitto__security_options
auto_id_prefix_len	src/mosquitto_broker_internal.h	/^	int auto_id_prefix_len;$/;"	m	struct:mosquitto__security_options
autosave_interval	src/mosquitto_broker_internal.h	/^	int autosave_interval;$/;"	m	struct:mosquitto__config
autosave_on_changes	src/mosquitto_broker_internal.h	/^	bool autosave_on_changes;$/;"	m	struct:mosquitto__config
b	test/broker/01-connect-invalid-id-utf8.py	/^b = list(struct.unpack("B"*len(connect_packet), connect_packet))$/;"	v
b	test/broker/01-connect-uname-invalid-utf8.py	/^b = list(struct.unpack("B"*len(connect_packet), connect_packet))$/;"	v
b	test/broker/01-connect-uname-no-flag.py	/^b = list(struct.unpack("B"*len(connect_packet), connect_packet))$/;"	v
b	test/broker/01-connect-uname-pwd-no-flag.py	/^b = list(struct.unpack("B"*len(connect_packet), connect_packet))$/;"	v
b	test/broker/02-subscribe-invalid-utf8.py	/^b = list(struct.unpack("B"*len(subscribe_packet), subscribe_packet))$/;"	v
b	test/broker/03-publish-invalid-utf8.py	/^b = list(struct.unpack("B"*len(publish_packet), publish_packet))$/;"	v
b	test/broker/07-will-invalid-utf8.py	/^b = list(struct.unpack("B"*len(connect_packet), connect_packet))$/;"	v
b	test/broker/07-will-no-flag.py	/^b = list(struct.unpack("B"*len(connect_packet), connect_packet))$/;"	v
base64__decode	src/security_default.cpp	/^int base64__decode(char *in, unsigned char **decoded, unsigned int *decoded_len)$/;"	f
base64_encode	src/mosquitto_passwd.cpp	/^int base64_encode(unsigned char *in, unsigned int in_len, char **encoded)$/;"	f
bd_both	src/mosquitto_broker_internal.h	/^	bd_both = 2$/;"	e	enum:mosquitto__bridge_direction
bd_in	src/mosquitto_broker_internal.h	/^	bd_in = 1,$/;"	e	enum:mosquitto__bridge_direction
bd_out	src/mosquitto_broker_internal.h	/^	bd_out = 0,$/;"	e	enum:mosquitto__bridge_direction
bind_address	client/client_shared.h	/^	char *bind_address;$/;"	m	struct:mosq_config
bind_address	lib/mosquitto_internal.h	/^	char *bind_address;$/;"	m	struct:mosquitto
bloom_bv	src/deps/uthash.h	/^   uint8_t *bloom_bv;$/;"	m	struct:UT_hash_table
bloom_nbits	src/deps/uthash.h	/^   char bloom_nbits;$/;"	m	struct:UT_hash_table
bloom_sig	src/deps/uthash.h	/^   uint32_t bloom_sig; \/* used only to test bloom exists in external analysis *\/$/;"	m	struct:UT_hash_table
bmod	test/broker/07-will-no-flag.py	/^bmod = b[0:len(b)-2]$/;"	v
bool	lib/mosquitto.h	36;"	d
bool	src/mosquitto_passwd.cpp	34;"	d	file:
bridge	lib/mosquitto_internal.h	/^	struct mosquitto__bridge *bridge;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto__bridge
bridge	test/broker/08-tls-psk-bridge.py	/^bridge = mosq_test.start_broker(filename=os.path.basename(__file__)+'_bridge', cmd=bridge_cmd, port=port3)$/;"	v
bridge__connect	src/bridge.cpp	/^int bridge__connect(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
bridge__connect_step1	src/bridge.cpp	/^int bridge__connect_step1(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
bridge__connect_step2	src/bridge.cpp	/^int bridge__connect_step2(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
bridge__connect_step3	src/bridge.cpp	/^int bridge__connect_step3(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
bridge__new	src/bridge.cpp	/^int bridge__new(struct mosquitto_db *db, struct mosquitto__bridge *bridge)$/;"	f
bridge__packet_cleanup	src/bridge.cpp	/^void bridge__packet_cleanup(struct mosquitto *context)$/;"	f
bridge_address	src/mosquitto_broker_internal.h	/^struct bridge_address{$/;"	s
bridge_cmd	test/broker/08-tls-psk-bridge.py	/^bridge_cmd = ['..\/..\/src\/mosquitto', '-c', '08-tls-psk-bridge.conf2']$/;"	v
bridge_count	src/mosquitto_broker_internal.h	/^	int bridge_count;$/;"	m	struct:mosquitto__config
bridge_count	src/mosquitto_broker_internal.h	/^	int bridge_count;$/;"	m	struct:mosquitto_db
bridges	src/mosquitto_broker_internal.h	/^	struct mosquitto **bridges;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::mosquitto
bridges	src/mosquitto_broker_internal.h	/^	struct mosquitto__bridge *bridges;$/;"	m	struct:mosquitto__config	typeref:struct:mosquitto__config::mosquitto__bridge
broker	test/broker/01-connect-anon-denied.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/01-connect-invalid-id-0-311.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/01-connect-invalid-id-0.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/01-connect-invalid-id-missing.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/01-connect-invalid-id-utf8.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/01-connect-invalid-protonum.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/01-connect-invalid-reserved.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/01-connect-success.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/01-connect-uname-invalid-utf8.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/01-connect-uname-no-flag.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/01-connect-uname-no-password-denied.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/01-connect-uname-password-denied.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/01-connect-uname-password-success-no-tls.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/01-connect-uname-password-success.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/01-connect-uname-pwd-no-flag.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-subhier-crash.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-subpub-qos0.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-subpub-qos1.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-subpub-qos2.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-subscribe-invalid-utf8.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-subscribe-persistence-flipflop.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-subscribe-qos0.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-subscribe-qos1.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-subscribe-qos2.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-unsubscribe-invalid-no-topic.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-unsubscribe-qos0.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-unsubscribe-qos1.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/02-unsubscribe-qos2.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/03-publish-b2c-disconnect-qos1.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/03-publish-b2c-disconnect-qos2.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/03-publish-b2c-timeout-qos1.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__))$/;"	v
broker	test/broker/03-publish-b2c-timeout-qos2.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__))$/;"	v
broker	test/broker/03-publish-c2b-disconnect-qos2.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/03-publish-c2b-timeout-qos2.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__))$/;"	v
broker	test/broker/03-publish-dollar.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/03-publish-invalid-utf8.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/03-publish-qos1-queued-bytes.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/03-publish-qos1.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/03-publish-qos2.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/04-retain-qos0-clear.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/04-retain-qos0-fresh.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/04-retain-qos0-repeated.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/04-retain-qos0.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/04-retain-qos1-qos0.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/04-retain-upgrade-outgoing-qos.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/05-clean-session-qos1.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/06-bridge-b2br-disconnect-qos1.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/06-bridge-b2br-disconnect-qos2.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/06-bridge-b2br-remapping.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/06-bridge-br2b-disconnect-qos1.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/06-bridge-br2b-disconnect-qos2.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/06-bridge-br2b-remapping.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/06-bridge-fail-persist-resend-qos1.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/06-bridge-fail-persist-resend-qos2.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/06-bridge-per-listener-settings.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/06-bridge-reconnect-local-out.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port1, use_conf=False)$/;"	v
broker	test/broker/07-will-invalid-utf8.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/07-will-no-flag.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/07-will-null-topic.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/07-will-null.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/07-will-qos0.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port)$/;"	v
broker	test/broker/08-ssl-bridge.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/08-ssl-connect-cert-auth-crl.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/08-ssl-connect-cert-auth-expired.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/08-ssl-connect-cert-auth-revoked.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/08-ssl-connect-cert-auth-without.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/08-ssl-connect-cert-auth.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/08-ssl-connect-identity.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/08-ssl-connect-no-auth-wrong-ca.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/08-ssl-connect-no-auth.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/08-ssl-connect-no-identity.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), port=port2, use_conf=True)$/;"	v
broker	test/broker/08-tls-psk-bridge.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port1)$/;"	v
broker	test/broker/08-tls-psk-pub.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port2)$/;"	v
broker	test/broker/09-plugin-auth-acl-sub.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/09-plugin-auth-context-params.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/09-plugin-auth-defer-unpwd-fail.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/09-plugin-auth-defer-unpwd-success.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/09-plugin-auth-msg-params.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/09-plugin-auth-unpwd-fail.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/09-plugin-auth-unpwd-success.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/09-plugin-auth-v2-unpwd-fail.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/09-plugin-auth-v2-unpwd-success.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
broker	test/broker/10-listener-mount-point.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port1)$/;"	v
broker	test/broker/11-persistent-subscription.py	/^broker = mosq_test.start_broker(filename=os.path.basename(__file__), use_conf=True, port=port)$/;"	v
brokerMonitor	test/broker/03-publish-qos1-queued-bytes.py	/^brokerMonitor = BrokerMonitor(args=(rq,cq))$/;"	v
bst_automatic	src/mosquitto_broker_internal.h	/^	bst_automatic = 0,$/;"	e	enum:mosquitto_bridge_start_type
bst_lazy	src/mosquitto_broker_internal.h	/^	bst_lazy = 1,$/;"	e	enum:mosquitto_bridge_start_type
bst_manual	src/mosquitto_broker_internal.h	/^	bst_manual = 2,$/;"	e	enum:mosquitto_bridge_start_type
bst_once	src/mosquitto_broker_internal.h	/^	bst_once = 3$/;"	e	enum:mosquitto_bridge_start_type
buckets	src/deps/uthash.h	/^   UT_hash_bucket *buckets;$/;"	m	struct:UT_hash_table
cafile	client/client_shared.h	/^	char *cafile;$/;"	m	struct:mosq_config
cafile	lib/mosquitto.h	/^	char *cafile;$/;"	m	struct:libmosquitto_tls
cafile	src/mosquitto_broker_internal.h	/^	char *cafile;$/;"	m	struct:mosquitto__listener
calc_load	src/sys_tree.cpp	/^static void calc_load(struct mosquitto_db *db, char *buf, const char *topic, bool initial, double exponent, double interval, double *current)$/;"	f	file:
callback	lib/helpers.cpp	/^	int (*callback)(struct mosquitto *, void *, const struct mosquitto_message *);$/;"	m	struct:userdata__callback	file:
callback_http	src/websockets.cpp	/^static int callback_http($/;"	f	file:
callback_mqtt	src/websockets.cpp	/^static int callback_mqtt($/;"	f	file:
callback_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t callback_mutex;$/;"	m	struct:mosquitto
capath	client/client_shared.h	/^	char *capath;$/;"	m	struct:mosq_config
capath	lib/mosquitto.h	/^	char *capath;$/;"	m	struct:libmosquitto_tls
capath	src/mosquitto_broker_internal.h	/^	char *capath;$/;"	m	struct:mosquitto__listener
ccount	src/mosquitto_broker_internal.h	/^	int ccount;$/;"	m	struct:mosquitto__acl
cert_reqs	lib/mosquitto.h	/^	int cert_reqs;$/;"	m	struct:libmosquitto_tls
certfile	client/client_shared.h	/^	char *certfile;$/;"	m	struct:mosq_config
certfile	lib/mosquitto.h	/^	char *certfile;$/;"	m	struct:libmosquitto_tls
certfile	src/mosquitto_broker_internal.h	/^	char *certfile;$/;"	m	struct:mosquitto__listener
cfg_add_topic	client/client_shared.cpp	/^int cfg_add_topic(struct mosq_config *cfg, int pub_or_sub, char *topic, const char *arg)$/;"	f
changeImg	www/files/stickers/index.html	/^		function changeImg(id){$/;"	f
check_format	client/client_shared.cpp	/^static int check_format(struct mosq_config *cfg, const char *str)$/;"	f	file:
children	src/mosquitto_broker_internal.h	/^	struct mosquitto__subhier *children;$/;"	m	struct:mosquitto__subhier	typeref:struct:mosquitto__subhier::mosquitto__subhier
ciphers	client/client_shared.h	/^	char *ciphers;$/;"	m	struct:mosq_config
ciphers	lib/mosquitto.h	/^	char *ciphers;$/;"	m	struct:libmosquitto_tls
ciphers	src/mosquitto_broker_internal.h	/^	char *ciphers;$/;"	m	struct:mosquitto__listener
clean_session	client/client_shared.h	/^	bool clean_session;$/;"	m	struct:mosq_config
clean_session	lib/mosquitto_internal.h	/^	bool clean_session;$/;"	m	struct:mosquitto
clean_session	src/mosquitto_broker_internal.h	/^	bool clean_session;$/;"	m	struct:mosquitto__bridge
client	test/lib/01-con-discon-success.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/01-keepalive-pingreq.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/01-no-clean-session.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/01-unpwd-set.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/01-will-set.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/01-will-unpwd-set.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/02-subscribe-qos0.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/02-subscribe-qos1.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/02-subscribe-qos2.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/02-unsubscribe.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/03-publish-b2c-qos1.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/03-publish-b2c-qos2.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/03-publish-c2b-qos1-disconnect.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/03-publish-c2b-qos1-timeout.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/03-publish-c2b-qos2-disconnect.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/03-publish-c2b-qos2-timeout.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/03-publish-c2b-qos2.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/03-publish-qos0-no-payload.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/03-publish-qos0.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/04-retain-qos0.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/08-ssl-bad-cacert.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env)$/;"	v
client	test/lib/08-ssl-connect-cert-auth-enc.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/08-ssl-connect-cert-auth.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/08-ssl-connect-no-auth.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/08-ssl-fake-cacert.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env, port=port)$/;"	v
client	test/lib/09-util-topic-matching.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env)$/;"	v
client	test/lib/09-util-topic-tokenise.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env)$/;"	v
client	test/lib/09-util-utf8-validate.py	/^client = mosq_test.start_client(filename=sys.argv[1].replace('\/', '-'), cmd=client_args, env=env)$/;"	v
client_args	test/lib/01-con-discon-success.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/01-keepalive-pingreq.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/01-no-clean-session.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/01-unpwd-set.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/01-will-set.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/01-will-unpwd-set.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/02-subscribe-qos0.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/02-subscribe-qos1.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/02-subscribe-qos2.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/02-unsubscribe.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/03-publish-b2c-qos1.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/03-publish-b2c-qos2.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/03-publish-c2b-qos1-disconnect.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/03-publish-c2b-qos1-timeout.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/03-publish-c2b-qos2-disconnect.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/03-publish-c2b-qos2-timeout.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/03-publish-c2b-qos2.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/03-publish-qos0-no-payload.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/03-publish-qos0.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/04-retain-qos0.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/08-ssl-bad-cacert.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/08-ssl-connect-cert-auth-enc.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/08-ssl-connect-cert-auth.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/08-ssl-connect-no-auth.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/08-ssl-fake-cacert.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/09-util-topic-matching.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/09-util-topic-tokenise.py	/^client_args = sys.argv[1:]$/;"	v
client_args	test/lib/09-util-utf8-validate.py	/^client_args = sys.argv[1:]$/;"	v
client_certificate_verify	src/net.cpp	/^static int client_certificate_verify(int preverify_ok, X509_STORE_CTX *ctx)$/;"	f	file:
client_chunk	src/db_dump/db_dump.cpp	/^struct client_chunk$/;"	s	file:
client_config_cleanup	client/client_shared.cpp	/^void client_config_cleanup(struct mosq_config *cfg)$/;"	f
client_config_line_proc	client/client_shared.cpp	/^int client_config_line_proc(struct mosq_config *cfg, int pub_or_sub, int argc, char *argv[])$/;"	f
client_config_load	client/client_shared.cpp	/^int client_config_load(struct mosq_config *cfg, int pub_or_sub, int argc, char *argv[])$/;"	f
client_connack_packet	test/broker/06-bridge-b2br-remapping.py	/^client_connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
client_connack_packet	test/broker/06-bridge-br2b-remapping.py	/^client_connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
client_connack_packet	test/broker/06-bridge-per-listener-settings.py	/^client_connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
client_connect	client/client_shared.cpp	/^int client_connect(struct mosquitto *mosq, struct mosq_config *cfg)$/;"	f
client_connect_packet	test/broker/06-bridge-b2br-remapping.py	/^client_connect_packet = mosq_test.gen_connect("pub-test", keepalive=keepalive)$/;"	v
client_connect_packet	test/broker/06-bridge-br2b-remapping.py	/^client_connect_packet = mosq_test.gen_connect("pub-test", keepalive=keepalive)$/;"	v
client_connect_packet	test/broker/06-bridge-per-listener-settings.py	/^client_connect_packet = mosq_test.gen_connect("pub-test", keepalive=keepalive)$/;"	v
client_count	src/mosquitto_broker_internal.h	/^	int client_count;$/;"	m	struct:mosquitto__listener
client_id	src/db_dump/db_dump.cpp	/^	char *client_id;$/;"	m	struct:db_client	file:
client_id	src/db_dump/db_dump.cpp	/^	char *client_id;$/;"	m	struct:db_client_msg	file:
client_id	src/db_dump/db_dump.cpp	/^	char *client_id;$/;"	m	struct:db_sub	file:
client_id	test/broker/06-bridge-b2br-disconnect-qos1.py	/^client_id = socket.gethostname()+".bridge_sample"$/;"	v
client_id	test/broker/06-bridge-b2br-disconnect-qos2.py	/^client_id = socket.gethostname()+".bridge_sample"$/;"	v
client_id	test/broker/06-bridge-b2br-remapping.py	/^client_id = socket.gethostname()+".bridge_sample"$/;"	v
client_id	test/broker/06-bridge-br2b-disconnect-qos1.py	/^client_id = socket.gethostname()+".bridge_sample"$/;"	v
client_id	test/broker/06-bridge-br2b-disconnect-qos2.py	/^client_id = socket.gethostname()+".bridge_sample"$/;"	v
client_id	test/broker/06-bridge-br2b-remapping.py	/^client_id = socket.gethostname()+".bridge_sample"$/;"	v
client_id	test/broker/06-bridge-per-listener-settings.py	/^client_id = socket.gethostname()+".bridge_sample"$/;"	v
client_id	test/broker/08-ssl-bridge.py	/^client_id = socket.gethostname()+".bridge_test"$/;"	v
client_id_gen	src/handle_connect.cpp	/^static char *client_id_gen(struct mosquitto_db *db, int *idlen, const char *auto_id_prefix, int auto_id_prefix_len)$/;"	f	file:
client_id_generate	client/client_shared.cpp	/^int client_id_generate(struct mosq_config *cfg, const char *id_base)$/;"	f
client_opts_set	client/client_shared.cpp	/^int client_opts_set(struct mosquitto *mosq, struct mosq_config *cfg)$/;"	f
client_stats	src/db_dump/db_dump.cpp	/^static int client_stats = 0;$/;"	v	file:
clientid_index_hash	src/mosquitto_broker_internal.h	/^	struct clientid__index_hash *clientid_index_hash;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::clientid__index_hash
clientid_prefixes	src/mosquitto_broker_internal.h	/^	char *clientid_prefixes;$/;"	m	struct:mosquitto__config
clients_by_id	src/db_dump/db_dump.cpp	/^struct client_chunk *clients_by_id = NULL;$/;"	v	typeref:struct:client_chunk
cmd_subfolder	test/broker/01-connect-anon-denied.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-invalid-id-0-311.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-invalid-id-0.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-invalid-id-missing.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-invalid-id-utf8.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-invalid-protonum.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-invalid-reserved.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-success.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-uname-invalid-utf8.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-uname-no-flag.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-uname-no-password-denied.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-uname-password-denied.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-uname-password-success-no-tls.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-uname-password-success.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/01-connect-uname-pwd-no-flag.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-subhier-crash.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-subpub-qos0.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-subpub-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-subpub-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-subscribe-invalid-utf8.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-subscribe-persistence-flipflop.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-subscribe-qos0.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-subscribe-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-subscribe-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-unsubscribe-invalid-no-topic.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-unsubscribe-qos0.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-unsubscribe-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/02-unsubscribe-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-pattern-matching-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-pattern-matching.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-b2c-disconnect-qos1-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-b2c-disconnect-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-b2c-disconnect-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-b2c-timeout-qos1-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-b2c-timeout-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-b2c-timeout-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-c2b-disconnect-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-c2b-timeout-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-dollar.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-invalid-utf8.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-qos1-queued-bytes.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/03-publish-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/04-retain-qos0-clear.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/04-retain-qos0-fresh.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/04-retain-qos0-repeated.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/04-retain-qos0.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/04-retain-qos1-qos0.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/04-retain-upgrade-outgoing-qos.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/05-clean-session-qos1-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/05-clean-session-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-b2br-disconnect-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-b2br-disconnect-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-b2br-remapping.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-br2b-disconnect-qos1-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-br2b-disconnect-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-br2b-disconnect-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-br2b-remapping.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-fail-persist-resend-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-fail-persist-resend-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-per-listener-settings.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-reconnect-local-out-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/06-bridge-reconnect-local-out.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/07-will-invalid-utf8.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/07-will-no-flag.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/07-will-null-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/07-will-null-topic.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/07-will-null.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/07-will-qos0-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/07-will-qos0.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-ssl-bridge-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-ssl-bridge.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-ssl-connect-cert-auth-crl.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-ssl-connect-cert-auth-expired.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-ssl-connect-cert-auth-revoked.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-ssl-connect-cert-auth-without.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-ssl-connect-cert-auth.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-ssl-connect-identity.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-ssl-connect-no-auth-wrong-ca.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-ssl-connect-no-auth.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-ssl-connect-no-identity.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-tls-psk-bridge.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/08-tls-psk-pub.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/09-plugin-auth-acl-sub.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/09-plugin-auth-context-params.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/09-plugin-auth-defer-unpwd-fail.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/09-plugin-auth-defer-unpwd-success.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/09-plugin-auth-msg-params.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/09-plugin-auth-unpwd-fail.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/09-plugin-auth-unpwd-success.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/09-plugin-auth-v2-unpwd-fail.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/09-plugin-auth-v2-unpwd-success.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/10-listener-mount-point-helper.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/10-listener-mount-point.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/broker/11-persistent-subscription.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/01-con-discon-success.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/01-keepalive-pingreq.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/01-no-clean-session.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/01-unpwd-set.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/01-will-set.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/01-will-unpwd-set.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/02-subscribe-qos0.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/02-subscribe-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/02-subscribe-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/02-unsubscribe.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/03-publish-b2c-qos1.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/03-publish-b2c-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/03-publish-c2b-qos1-disconnect.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/03-publish-c2b-qos1-timeout.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/03-publish-c2b-qos2-disconnect.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/03-publish-c2b-qos2-timeout.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/03-publish-c2b-qos2.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/03-publish-qos0-no-payload.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/03-publish-qos0.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/04-retain-qos0.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/08-ssl-bad-cacert.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/08-ssl-connect-cert-auth-enc.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/08-ssl-connect-cert-auth.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/08-ssl-connect-no-auth.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/08-ssl-fake-cacert.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/09-util-topic-matching.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/09-util-topic-tokenise.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
cmd_subfolder	test/lib/09-util-utf8-validate.py	/^cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"..")))$/;"	v
command	lib/mosquitto_internal.h	/^	uint8_t command;$/;"	m	struct:mosquitto__packet
compile	www/plugins/docbookmanpage/docbookmanpage.py	/^    def compile(self, source, dest, is_two_file=True, post=None, lang=None):$/;"	m	class:CompileDocbookManpage
complete	test/qos.cpp	/^	bool complete;$/;"	m	struct:sub	file:
conf__attempt_resolve	src/conf.cpp	/^static int conf__attempt_resolve(const char *host, const char *text, int log, const char *msg)$/;"	f	file:
conf__parse_bool	src/conf.cpp	/^static int conf__parse_bool(char **token, const char *name, bool *value, char *saveptr)$/;"	f	file:
conf__parse_int	src/conf.cpp	/^static int conf__parse_int(char **token, const char *name, int *value, char *saveptr)$/;"	f	file:
conf__parse_ssize_t	src/conf.cpp	/^static int conf__parse_ssize_t(char **token, const char *name, ssize_t *value, char *saveptr)$/;"	f	file:
conf__parse_string	src/conf.cpp	/^static int conf__parse_string(char **token, const char *name, char **value, char *saveptr)$/;"	f	file:
conf__set_cur_security_options	src/conf.cpp	/^static void conf__set_cur_security_options(struct mosquitto__config *config, struct mosquitto__listener *cur_listener, struct mosquitto__security_options **security_options)$/;"	f	file:
conf_file	test/broker/01-connect-anon-denied.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/01-connect-uname-no-password-denied.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/01-connect-uname-password-denied.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/01-connect-uname-password-success-no-tls.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/01-connect-uname-password-success.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/04-retain-upgrade-outgoing-qos.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/06-bridge-b2br-disconnect-qos1.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/06-bridge-b2br-disconnect-qos2.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/06-bridge-b2br-remapping.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/06-bridge-br2b-disconnect-qos1.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/06-bridge-br2b-disconnect-qos2.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/06-bridge-br2b-remapping.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/06-bridge-fail-persist-resend-qos1.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/06-bridge-fail-persist-resend-qos2.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/06-bridge-per-listener-settings.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/06-bridge-reconnect-local-out.py	/^conf_file = '06-bridge-reconnect-local-out.conf'$/;"	v
conf_file	test/broker/08-ssl-bridge.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/08-ssl-connect-cert-auth-crl.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/08-ssl-connect-cert-auth-expired.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/08-ssl-connect-cert-auth-revoked.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/08-ssl-connect-cert-auth-without.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/08-ssl-connect-cert-auth.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/08-ssl-connect-identity.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/08-ssl-connect-no-auth-wrong-ca.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/08-ssl-connect-no-auth.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/08-ssl-connect-no-identity.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/08-tls-psk-pub.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/09-plugin-auth-acl-sub.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/09-plugin-auth-context-params.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/09-plugin-auth-defer-unpwd-fail.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/09-plugin-auth-defer-unpwd-success.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/09-plugin-auth-msg-params.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/09-plugin-auth-unpwd-fail.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/09-plugin-auth-unpwd-success.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/09-plugin-auth-v2-unpwd-fail.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/09-plugin-auth-v2-unpwd-success.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/10-listener-mount-point.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file	test/broker/11-persistent-subscription.py	/^conf_file = os.path.basename(__file__).replace('.py', '.conf')$/;"	v
conf_file1	test/broker/08-tls-psk-bridge.py	/^conf_file1 = "08-tls-psk-bridge.conf"$/;"	v
conf_file2	test/broker/08-tls-psk-bridge.py	/^conf_file2 = "08-tls-psk-bridge.conf2"$/;"	v
config	src/mosquitto_broker_internal.h	/^	struct mosquitto__config *config;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::mosquitto__config
config__check	src/conf.cpp	/^static int config__check(struct mosquitto__config *config)$/;"	f	file:
config__cleanup	src/conf.cpp	/^void config__cleanup(struct mosquitto__config *config)$/;"	f
config__cleanup_plugins	src/conf.cpp	/^static void config__cleanup_plugins(struct mosquitto__config *config)$/;"	f	file:
config__copy	src/conf.cpp	/^void config__copy(struct mosquitto__config *src, struct mosquitto__config *dest)$/;"	f
config__get_dir_files	src/conf_includedir.cpp	/^int config__get_dir_files(const char *include_dir, char ***files, int *file_count)$/;"	f
config__init	src/conf.cpp	/^void config__init(struct mosquitto_db *db, struct mosquitto__config *config)$/;"	f
config__init_reload	src/conf.cpp	/^static void config__init_reload(struct mosquitto_db *db, struct mosquitto__config *config)$/;"	f	file:
config__parse_args	src/conf.cpp	/^int config__parse_args(struct mosquitto_db *db, struct mosquitto__config *config, int argc, char *argv[])$/;"	f
config__read	src/conf.cpp	/^int config__read(struct mosquitto_db *db, struct mosquitto__config *config, bool reload)$/;"	f
config__read_file	src/conf.cpp	/^int config__read_file(struct mosquitto__config *config, bool reload, const char *file, struct config_recurse *cr, int level, int *lineno)$/;"	f
config__read_file_core	src/conf.cpp	/^int config__read_file_core(struct mosquitto__config *config, bool reload, struct config_recurse *cr, int level, int *lineno, FILE *fptr, char **buf, int *buflen)$/;"	f
config_file	src/mosquitto_broker_internal.h	/^	char *config_file;$/;"	m	struct:mosquitto_db
config_recurse	src/conf.cpp	/^struct config_recurse {$/;"	s	file:
connack1_packet	test/broker/03-publish-b2c-disconnect-qos1.py	/^connack1_packet = mosq_test.gen_connack(resv=0, rc=0)$/;"	v
connack1_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^connack1_packet = mosq_test.gen_connack(resv=0, rc=0)$/;"	v
connack1_packet	test/broker/05-clean-session-qos1.py	/^connack1_packet = mosq_test.gen_connack(resv=0, rc=0)$/;"	v
connack2_packet	test/broker/03-publish-b2c-disconnect-qos1.py	/^connack2_packet = mosq_test.gen_connack(resv=1, rc=0)$/;"	v
connack2_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^connack2_packet = mosq_test.gen_connack(resv=1, rc=0)$/;"	v
connack2_packet	test/broker/05-clean-session-qos1.py	/^connack2_packet = mosq_test.gen_connack(resv=1, rc=0)$/;"	v
connack_packet	test/broker/01-connect-anon-denied.py	/^connack_packet = mosq_test.gen_connack(rc=5)$/;"	v
connack_packet	test/broker/01-connect-invalid-id-0-311.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/01-connect-invalid-id-0.py	/^connack_packet = mosq_test.gen_connack(rc=2)$/;"	v
connack_packet	test/broker/01-connect-invalid-protonum.py	/^connack_packet = mosq_test.gen_connack(rc=1)$/;"	v
connack_packet	test/broker/01-connect-success.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/01-connect-uname-no-flag.py	/^connack_packet = mosq_test.gen_connack(rc=5)$/;"	v
connack_packet	test/broker/01-connect-uname-no-password-denied.py	/^connack_packet = mosq_test.gen_connack(rc=5)$/;"	v
connack_packet	test/broker/01-connect-uname-password-denied.py	/^connack_packet = mosq_test.gen_connack(rc=5)$/;"	v
connack_packet	test/broker/01-connect-uname-password-success-no-tls.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/01-connect-uname-password-success.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/01-connect-uname-pwd-no-flag.py	/^connack_packet = mosq_test.gen_connack(rc=5)$/;"	v
connack_packet	test/broker/02-subhier-crash.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/02-subpub-qos0.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/02-subpub-qos1.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/02-subpub-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/02-subscribe-invalid-utf8.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/02-subscribe-qos0.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/02-subscribe-qos1.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/02-subscribe-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/02-unsubscribe-invalid-no-topic.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/02-unsubscribe-qos0.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/02-unsubscribe-qos1.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/02-unsubscribe-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-pattern-matching-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-publish-b2c-disconnect-qos1-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-publish-b2c-timeout-qos1-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-publish-b2c-timeout-qos1.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-publish-b2c-timeout-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-publish-c2b-disconnect-qos2.py	/^connack_packet = mosq_test.gen_connack(resv=0, rc=0)$/;"	v
connack_packet	test/broker/03-publish-c2b-timeout-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-publish-dollar.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-publish-invalid-utf8.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-publish-qos1.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/03-publish-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/04-retain-qos0-clear.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/04-retain-qos0-fresh.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/04-retain-qos0-repeated.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/04-retain-qos0.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/04-retain-qos1-qos0.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/04-retain-upgrade-outgoing-qos.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/05-clean-session-qos1-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-b2br-disconnect-qos1.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-b2br-remapping.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-br2b-disconnect-qos1-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-br2b-disconnect-qos1.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-br2b-remapping.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-fail-persist-resend-qos1.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-fail-persist-resend-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-per-listener-settings.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-reconnect-local-out-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/06-bridge-reconnect-local-out.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/07-will-null-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/07-will-null-topic.py	/^connack_packet = mosq_test.gen_connack(rc=2)$/;"	v
connack_packet	test/broker/07-will-null.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/07-will-qos0-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/07-will-qos0.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-ssl-bridge-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-ssl-bridge.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-ssl-connect-cert-auth-crl.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-ssl-connect-cert-auth-expired.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-ssl-connect-cert-auth-revoked.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-ssl-connect-cert-auth-without.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-ssl-connect-cert-auth.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-ssl-connect-identity.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-ssl-connect-no-auth-wrong-ca.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-ssl-connect-no-auth.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-ssl-connect-no-identity.py	/^connack_packet = mosq_test.gen_connack(rc=4)$/;"	v
connack_packet	test/broker/08-tls-psk-bridge.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/08-tls-psk-pub.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/09-plugin-auth-acl-sub.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/09-plugin-auth-context-params.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/09-plugin-auth-defer-unpwd-fail.py	/^connack_packet = mosq_test.gen_connack(rc=5)$/;"	v
connack_packet	test/broker/09-plugin-auth-defer-unpwd-success.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/09-plugin-auth-msg-params.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/09-plugin-auth-unpwd-fail.py	/^connack_packet = mosq_test.gen_connack(rc=5)$/;"	v
connack_packet	test/broker/09-plugin-auth-unpwd-success.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/09-plugin-auth-v2-unpwd-fail.py	/^connack_packet = mosq_test.gen_connack(rc=5)$/;"	v
connack_packet	test/broker/09-plugin-auth-v2-unpwd-success.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/10-listener-mount-point-helper.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/10-listener-mount-point.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/broker/11-persistent-subscription.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/01-con-discon-success.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/01-keepalive-pingreq.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/02-subscribe-qos0.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/02-subscribe-qos1.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/02-subscribe-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/02-unsubscribe.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/03-publish-b2c-qos1.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/03-publish-b2c-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/03-publish-c2b-qos1-disconnect.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/03-publish-c2b-qos1-timeout.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/03-publish-c2b-qos2-disconnect.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/03-publish-c2b-qos2-timeout.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/03-publish-c2b-qos2.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/03-publish-qos0-no-payload.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/03-publish-qos0.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/04-retain-qos0.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/08-ssl-connect-cert-auth-enc.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/08-ssl-connect-cert-auth.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet	test/lib/08-ssl-connect-no-auth.py	/^connack_packet = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet2	test/broker/11-persistent-subscription.py	/^connack_packet2 = mosq_test.gen_connack(rc=0, resv=1)  # session present$/;"	v
connack_packet_pub	test/broker/02-subscribe-persistence-flipflop.py	/^connack_packet_pub = mosq_test.gen_connack(rc=0)$/;"	v
connack_packet_sub	test/broker/02-subscribe-persistence-flipflop.py	/^connack_packet_sub = mosq_test.gen_connack(rc=0)$/;"	v
connack_string	lib/cpp/mosquittopp.cpp	/^const char* connack_string(int connack_code)$/;"	f	namespace:mosqpp
connect	lib/cpp/mosquittopp.cpp	/^int mosquittopp::connect(const char *host, int port, int keepalive)$/;"	f	class:mosqpp::mosquittopp
connect	lib/cpp/mosquittopp.cpp	/^int mosquittopp::connect(const char *host, int port, int keepalive, const char *bind_address)$/;"	f	class:mosqpp::mosquittopp
connect_async	lib/cpp/mosquittopp.cpp	/^int mosquittopp::connect_async(const char *host, int port, int keepalive)$/;"	f	class:mosqpp::mosquittopp
connect_async	lib/cpp/mosquittopp.cpp	/^int mosquittopp::connect_async(const char *host, int port, int keepalive, const char *bind_address)$/;"	f	class:mosqpp::mosquittopp
connect_callback	examples/mysql_log/mysql_log.cpp	/^void connect_callback(struct mosquitto *mosq, void *obj, int result)$/;"	f
connect_packet	test/broker/01-connect-anon-denied.py	/^connect_packet = mosq_test.gen_connect("connect-anon-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/01-connect-invalid-id-0-311.py	/^connect_packet = mosq_test.gen_connect("", keepalive=keepalive, proto_ver=4)$/;"	v
connect_packet	test/broker/01-connect-invalid-id-0.py	/^connect_packet = mosq_test.gen_connect("", keepalive=keepalive, proto_ver=3)$/;"	v
connect_packet	test/broker/01-connect-invalid-id-missing.py	/^connect_packet = mosq_test.gen_connect(None, keepalive=keepalive)$/;"	v
connect_packet	test/broker/01-connect-invalid-id-utf8.py	/^connect_packet = mosq_test.gen_connect("connect-invalid-utf8", keepalive=keepalive)$/;"	v
connect_packet	test/broker/01-connect-invalid-id-utf8.py	/^connect_packet = struct.pack("B"*len(b), *b)$/;"	v
connect_packet	test/broker/01-connect-invalid-protonum.py	/^connect_packet = mosq_test.gen_connect("connect-invalid-test", keepalive=keepalive, proto_ver=0)$/;"	v
connect_packet	test/broker/01-connect-invalid-reserved.py	/^connect_packet = mosq_test.gen_connect("connect-invalid-test", keepalive=keepalive, connect_reserved=True, proto_ver=4)$/;"	v
connect_packet	test/broker/01-connect-success.py	/^connect_packet = mosq_test.gen_connect("connect-success-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/01-connect-uname-invalid-utf8.py	/^connect_packet = mosq_test.gen_connect("connect-invalid-utf8", keepalive=keepalive, username="invalid\/utf8")$/;"	v
connect_packet	test/broker/01-connect-uname-invalid-utf8.py	/^connect_packet = struct.pack("B"*len(b), *b)$/;"	v
connect_packet	test/broker/01-connect-uname-no-flag.py	/^connect_packet = mosq_test.gen_connect("connect-uname-test", keepalive=keepalive, username="user")$/;"	v
connect_packet	test/broker/01-connect-uname-no-flag.py	/^connect_packet = struct.pack("B"*len(b), *b)$/;"	v
connect_packet	test/broker/01-connect-uname-no-password-denied.py	/^connect_packet = mosq_test.gen_connect("connect-uname-test", keepalive=keepalive, username="user")$/;"	v
connect_packet	test/broker/01-connect-uname-password-denied.py	/^connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="user", password="password9")$/;"	v
connect_packet	test/broker/01-connect-uname-password-success-no-tls.py	/^connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="user", password="password")$/;"	v
connect_packet	test/broker/01-connect-uname-password-success.py	/^connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="user", password="password")$/;"	v
connect_packet	test/broker/01-connect-uname-pwd-no-flag.py	/^connect_packet = mosq_test.gen_connect("connect-uname-test", keepalive=keepalive, username="user", password="pw")$/;"	v
connect_packet	test/broker/01-connect-uname-pwd-no-flag.py	/^connect_packet = struct.pack("B"*len(b), *b)$/;"	v
connect_packet	test/broker/02-subhier-crash.py	/^connect_packet = mosq_test.gen_connect("subhier-crash", keepalive=keepalive)$/;"	v
connect_packet	test/broker/02-subpub-qos0.py	/^connect_packet = mosq_test.gen_connect("subpub-qos0-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/02-subpub-qos1.py	/^connect_packet = mosq_test.gen_connect("subpub-qos1-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/02-subpub-qos2.py	/^connect_packet = mosq_test.gen_connect("subpub-qos2-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/02-subscribe-invalid-utf8.py	/^connect_packet = mosq_test.gen_connect("subscribe-invalid-utf8", keepalive=keepalive)$/;"	v
connect_packet	test/broker/02-subscribe-qos0.py	/^connect_packet = mosq_test.gen_connect("subscribe-qos0-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/02-subscribe-qos1.py	/^connect_packet = mosq_test.gen_connect("subscribe-qos1-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/02-subscribe-qos2.py	/^connect_packet = mosq_test.gen_connect("subscribe-qos2-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/02-unsubscribe-invalid-no-topic.py	/^connect_packet = mosq_test.gen_connect("unsubscribe-invalid-no-topic-test", keepalive=keepalive, proto_ver=4)$/;"	v
connect_packet	test/broker/02-unsubscribe-qos0.py	/^connect_packet = mosq_test.gen_connect("unsubscribe-qos0-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/02-unsubscribe-qos1.py	/^connect_packet = mosq_test.gen_connect("unsubscribe-qos1-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/02-unsubscribe-qos2.py	/^connect_packet = mosq_test.gen_connect("unsubscribe-qos2-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-pattern-matching-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-publish-b2c-disconnect-qos1-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-publish-b2c-disconnect-qos1.py	/^connect_packet = mosq_test.gen_connect("pub-qos1-disco-test", keepalive=keepalive, clean_session=False)$/;"	v
connect_packet	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^connect_packet = mosq_test.gen_connect("pub-qos2-disco-test", keepalive=keepalive, clean_session=False)$/;"	v
connect_packet	test/broker/03-publish-b2c-timeout-qos1-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-publish-b2c-timeout-qos1.py	/^connect_packet = mosq_test.gen_connect("pub-qos1-timeout-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-publish-b2c-timeout-qos2.py	/^connect_packet = mosq_test.gen_connect("pub-qo2-timeout-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-publish-c2b-disconnect-qos2.py	/^connect_packet = mosq_test.gen_connect("pub-qos2-disco-test", keepalive=keepalive, clean_session=False, proto_ver=3)$/;"	v
connect_packet	test/broker/03-publish-c2b-timeout-qos2.py	/^connect_packet = mosq_test.gen_connect("pub-qos2-timeout-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-publish-dollar.py	/^connect_packet = mosq_test.gen_connect("pub-dollar-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-publish-invalid-utf8.py	/^connect_packet = mosq_test.gen_connect("publish-invalid-utf8", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-publish-qos1.py	/^connect_packet = mosq_test.gen_connect("pub-qos1-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/03-publish-qos2.py	/^connect_packet = mosq_test.gen_connect("pub-qos2-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/04-retain-qos0-clear.py	/^connect_packet = mosq_test.gen_connect("retain-clear-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/04-retain-qos0-fresh.py	/^connect_packet = mosq_test.gen_connect("retain-qos0-fresh-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/04-retain-qos0-repeated.py	/^connect_packet = mosq_test.gen_connect("retain-qos0-rep-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/04-retain-qos0.py	/^connect_packet = mosq_test.gen_connect("retain-qos0-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/04-retain-qos1-qos0.py	/^connect_packet = mosq_test.gen_connect("retain-qos1-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/04-retain-upgrade-outgoing-qos.py	/^connect_packet = mosq_test.gen_connect("retain-qos0-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/05-clean-session-qos1-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)$/;"	v
connect_packet	test/broker/05-clean-session-qos1.py	/^connect_packet = mosq_test.gen_connect("clean-qos2-test", keepalive=keepalive, clean_session=False)$/;"	v
connect_packet	test/broker/06-bridge-b2br-disconnect-qos1.py	/^connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+4)$/;"	v
connect_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+4)$/;"	v
connect_packet	test/broker/06-bridge-b2br-remapping.py	/^connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+4)$/;"	v
connect_packet	test/broker/06-bridge-br2b-disconnect-qos1-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)$/;"	v
connect_packet	test/broker/06-bridge-br2b-disconnect-qos1.py	/^connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+4)$/;"	v
connect_packet	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)$/;"	v
connect_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+4)$/;"	v
connect_packet	test/broker/06-bridge-br2b-remapping.py	/^connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+4)$/;"	v
connect_packet	test/broker/06-bridge-fail-persist-resend-qos1.py	/^connect_packet = mosq_test.gen_connect("bridge-u-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/06-bridge-fail-persist-resend-qos2.py	/^connect_packet = mosq_test.gen_connect("bridge-u-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/06-bridge-per-listener-settings.py	/^connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+4)$/;"	v
connect_packet	test/broker/06-bridge-reconnect-local-out-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)$/;"	v
connect_packet	test/broker/06-bridge-reconnect-local-out.py	/^connect_packet = mosq_test.gen_connect("bridge-reconnect-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/07-will-invalid-utf8.py	/^connect_packet = mosq_test.gen_connect("will-invalid-utf8", keepalive=keepalive, will_topic="invalid\/utf8")$/;"	v
connect_packet	test/broker/07-will-invalid-utf8.py	/^connect_packet = struct.pack("B"*len(b), *b)$/;"	v
connect_packet	test/broker/07-will-no-flag.py	/^connect_packet = mosq_test.gen_connect("will-no-payload", keepalive=keepalive, will_topic="will\/topic", will_qos=1, will_retain=True)$/;"	v
connect_packet	test/broker/07-will-no-flag.py	/^connect_packet = struct.pack("B"*len(bmod), *bmod)$/;"	v
connect_packet	test/broker/07-will-null-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive, will_topic="will\/null\/test")$/;"	v
connect_packet	test/broker/07-will-null-topic.py	/^connect_packet = mosq_test.gen_connect("will-null-topic", keepalive=keepalive, will_topic="", will_payload=struct.pack("!4sB7s", "will", 0, "message"))$/;"	v
connect_packet	test/broker/07-will-null.py	/^connect_packet = mosq_test.gen_connect("will-qos0-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/07-will-qos0-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive, will_topic="will\/qos0\/test", will_payload="will-message")$/;"	v
connect_packet	test/broker/07-will-qos0.py	/^connect_packet = mosq_test.gen_connect("will-qos0-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-ssl-bridge-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-ssl-bridge.py	/^connect_packet = mosq_test.gen_connect(client_id, keepalive=keepalive, clean_session=False, proto_ver=128+4)$/;"	v
connect_packet	test/broker/08-ssl-connect-cert-auth-crl.py	/^connect_packet = mosq_test.gen_connect("connect-success-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-ssl-connect-cert-auth-expired.py	/^connect_packet = mosq_test.gen_connect("connect-success-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-ssl-connect-cert-auth-revoked.py	/^connect_packet = mosq_test.gen_connect("connect-revoked-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-ssl-connect-cert-auth-without.py	/^connect_packet = mosq_test.gen_connect("connect-cert-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-ssl-connect-cert-auth.py	/^connect_packet = mosq_test.gen_connect("connect-success-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-ssl-connect-identity.py	/^connect_packet = mosq_test.gen_connect("connect-identity-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-ssl-connect-no-auth-wrong-ca.py	/^connect_packet = mosq_test.gen_connect("connect-success-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-ssl-connect-no-auth.py	/^connect_packet = mosq_test.gen_connect("connect-success-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-ssl-connect-no-identity.py	/^connect_packet = mosq_test.gen_connect("connect-no-identity-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-tls-psk-bridge.py	/^connect_packet = mosq_test.gen_connect("no-psk-test-client", keepalive=keepalive)$/;"	v
connect_packet	test/broker/08-tls-psk-pub.py	/^connect_packet = mosq_test.gen_connect("no-psk-test-client", keepalive=keepalive)$/;"	v
connect_packet	test/broker/09-plugin-auth-acl-sub.py	/^connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="readonly")$/;"	v
connect_packet	test/broker/09-plugin-auth-context-params.py	/^connect_packet = mosq_test.gen_connect("client-params-test", keepalive=42, username="client-username")$/;"	v
connect_packet	test/broker/09-plugin-auth-defer-unpwd-fail.py	/^connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="test-username@v2", password="doesNotMatter")$/;"	v
connect_packet	test/broker/09-plugin-auth-defer-unpwd-success.py	/^connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="test-username@v2", password="doesNotMatter")$/;"	v
connect_packet	test/broker/09-plugin-auth-msg-params.py	/^connect_packet = mosq_test.gen_connect("msg-param-test", keepalive=keepalive)$/;"	v
connect_packet	test/broker/09-plugin-auth-unpwd-fail.py	/^connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="test-username", password="wrong")$/;"	v
connect_packet	test/broker/09-plugin-auth-unpwd-success.py	/^connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="test-username", password="cnwTICONIURW")$/;"	v
connect_packet	test/broker/09-plugin-auth-v2-unpwd-fail.py	/^connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="test-username", password="wrong")$/;"	v
connect_packet	test/broker/09-plugin-auth-v2-unpwd-success.py	/^connect_packet = mosq_test.gen_connect("connect-uname-pwd-test", keepalive=keepalive, username="test-username", password="cnwTICONIURW")$/;"	v
connect_packet	test/broker/10-listener-mount-point-helper.py	/^connect_packet = mosq_test.gen_connect("test-helper", keepalive=keepalive)$/;"	v
connect_packet	test/broker/10-listener-mount-point.py	/^connect_packet = mosq_test.gen_connect("test2", keepalive=keepalive)$/;"	v
connect_packet	test/broker/11-persistent-subscription.py	/^connect_packet = mosq_test.gen_connect($/;"	v
connect_packet	test/lib/01-con-discon-success.py	/^connect_packet = mosq_test.gen_connect("01-con-discon-success", keepalive=keepalive)$/;"	v
connect_packet	test/lib/01-keepalive-pingreq.py	/^connect_packet = mosq_test.gen_connect("01-keepalive-pingreq", keepalive=keepalive)$/;"	v
connect_packet	test/lib/01-no-clean-session.py	/^connect_packet = mosq_test.gen_connect("01-no-clean-session", clean_session=False, keepalive=keepalive)$/;"	v
connect_packet	test/lib/01-unpwd-set.py	/^connect_packet = mosq_test.gen_connect("01-unpwd-set", keepalive=keepalive, username="uname", password=";'[08gn=#")$/;"	v
connect_packet	test/lib/01-will-set.py	/^connect_packet = mosq_test.gen_connect("01-will-set", keepalive=keepalive, will_topic="topic\/on\/unexpected\/disconnect", will_qos=1, will_retain=True, will_payload="will message")$/;"	v
connect_packet	test/lib/01-will-unpwd-set.py	/^connect_packet = mosq_test.gen_connect("01-will-unpwd-set",$/;"	v
connect_packet	test/lib/02-subscribe-qos0.py	/^connect_packet = mosq_test.gen_connect("subscribe-qos0-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/02-subscribe-qos1.py	/^connect_packet = mosq_test.gen_connect("subscribe-qos1-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/02-subscribe-qos2.py	/^connect_packet = mosq_test.gen_connect("subscribe-qos2-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/02-unsubscribe.py	/^connect_packet = mosq_test.gen_connect("unsubscribe-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/03-publish-b2c-qos1.py	/^connect_packet = mosq_test.gen_connect("publish-qos1-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/03-publish-b2c-qos2.py	/^connect_packet = mosq_test.gen_connect("publish-qos2-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/03-publish-c2b-qos1-disconnect.py	/^connect_packet = mosq_test.gen_connect("publish-qos1-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/03-publish-c2b-qos1-timeout.py	/^connect_packet = mosq_test.gen_connect("publish-qos1-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/03-publish-c2b-qos2-disconnect.py	/^connect_packet = mosq_test.gen_connect("publish-qos2-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/03-publish-c2b-qos2-timeout.py	/^connect_packet = mosq_test.gen_connect("publish-qos2-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/03-publish-c2b-qos2.py	/^connect_packet = mosq_test.gen_connect("publish-qos2-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/03-publish-qos0-no-payload.py	/^connect_packet = mosq_test.gen_connect("publish-qos0-test-np", keepalive=keepalive)$/;"	v
connect_packet	test/lib/03-publish-qos0.py	/^connect_packet = mosq_test.gen_connect("publish-qos0-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/04-retain-qos0.py	/^connect_packet = mosq_test.gen_connect("retain-qos0-test", keepalive=keepalive)$/;"	v
connect_packet	test/lib/08-ssl-connect-cert-auth-enc.py	/^connect_packet = mosq_test.gen_connect("08-ssl-connect-crt-auth-enc", keepalive=keepalive)$/;"	v
connect_packet	test/lib/08-ssl-connect-cert-auth.py	/^connect_packet = mosq_test.gen_connect("08-ssl-connect-crt-auth", keepalive=keepalive)$/;"	v
connect_packet	test/lib/08-ssl-connect-no-auth.py	/^connect_packet = mosq_test.gen_connect("08-ssl-connect-no-auth", keepalive=keepalive)$/;"	v
connect_packet_pub	test/broker/02-subscribe-persistence-flipflop.py	/^connect_packet_pub = mosq_test.gen_connect("flipflop-test-pub", keepalive=keepalive)$/;"	v
connect_packet_sub_clean	test/broker/02-subscribe-persistence-flipflop.py	/^connect_packet_sub_clean = mosq_test.gen_connect("flipflop-test", keepalive=keepalive, clean_session=True)$/;"	v
connect_packet_sub_persistent	test/broker/02-subscribe-persistence-flipflop.py	/^connect_packet_sub_persistent = mosq_test.gen_connect("flipflop-test", keepalive=keepalive, clean_session=False)$/;"	v
connected	client/pub_client.cpp	/^static bool connected = true;$/;"	v	file:
connection_check_acl	src/handle_connect.cpp	/^void connection_check_acl(struct mosquitto_db *db, struct mosquitto *context, struct mosquitto_client_msg **msgs)$/;"	f
connection_messages	src/mosquitto_broker_internal.h	/^	bool connection_messages;$/;"	m	struct:mosquitto__config
context	src/mosquitto_broker_internal.h	/^	struct mosquitto *context;$/;"	m	struct:mosquitto__subleaf	typeref:struct:mosquitto__subleaf::mosquitto
context__add_to_disused	src/context.cpp	/^void context__add_to_disused(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
context__cleanup	src/context.cpp	/^void context__cleanup(struct mosquitto_db *db, struct mosquitto *context, bool do_free)$/;"	f
context__disconnect	src/context.cpp	/^void context__disconnect(struct mosquitto_db *db, struct mosquitto *ctxt)$/;"	f
context__free_disused	src/context.cpp	/^void context__free_disused(struct mosquitto_db *db)$/;"	f
context__init	src/context.cpp	/^struct mosquitto *context__init(struct mosquitto_db *db, mosq_sock_t sock)$/;"	f
context__send_will	src/context.cpp	/^void context__send_will(struct mosquitto_db *db, struct mosquitto *ctxt)$/;"	f
contexts_by_id	src/mosquitto_broker_internal.h	/^	struct mosquitto *contexts_by_id;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::mosquitto
contexts_by_sock	src/mosquitto_broker_internal.h	/^	struct mosquitto *contexts_by_sock;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::mosquitto
contexts_for_free	src/mosquitto_broker_internal.h	/^	struct mosquitto *contexts_for_free;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::mosquitto
copy_contents	src/mosquitto_passwd.cpp	/^int copy_contents(FILE *src, FILE *dest)$/;"	f
count	src/deps/uthash.h	/^   unsigned count;$/;"	m	struct:UT_hash_bucket
counts	test/broker/03-publish-qos1-queued-bytes.py	/^    counts = StoreCounts()$/;"	v
cq	test/broker/03-publish-qos1-queued-bytes.py	/^cq = Queue.Queue()$/;"	v
create_backup	src/mosquitto_passwd.cpp	/^int create_backup(const char *backup_file, FILE *fptr)$/;"	f
create_post	www/plugins/docbookmanpage/docbookmanpage.py	/^    def create_post(self, path, content=None, onefile=False, is_page=False, **kw):$/;"	m	class:CompileDocbookManpage
crlfile	src/mosquitto_broker_internal.h	/^	char *crlfile;$/;"	m	struct:mosquitto__listener
cur_address	src/mosquitto_broker_internal.h	/^	int cur_address;$/;"	m	struct:mosquitto__bridge
current_out_packet	lib/mosquitto_internal.h	/^	struct mosquitto__packet *current_out_packet;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto__packet
current_out_packet_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t current_out_packet_mutex;$/;"	m	struct:mosquitto
daemon	src/mosquitto_broker_internal.h	/^	bool daemon;$/;"	m	struct:mosquitto__config
db__client_chunk_restore	src/db_dump/db_dump.cpp	/^static int db__client_chunk_restore(struct mosquitto_db *db, FILE *db_fd, struct db_client *client)$/;"	f	file:
db__client_msg_chunk_restore	src/db_dump/db_dump.cpp	/^static int db__client_msg_chunk_restore(struct mosquitto_db *db, FILE *db_fd, uint32_t length, struct db_client_msg *msg)$/;"	f	file:
db__close	src/database.cpp	/^int db__close(struct mosquitto_db *db)$/;"	f
db__limits_set	src/database.cpp	/^void db__limits_set(int inflight, unsigned long inflight_bytes, int queued, unsigned long queued_bytes)$/;"	f
db__message_delete	src/database.cpp	/^int db__message_delete(struct mosquitto_db *db, struct mosquitto *context, uint16_t mid, enum mosquitto_msg_direction dir)$/;"	f
db__message_dequeue_first	src/database.cpp	/^void db__message_dequeue_first(struct mosquitto *context)$/;"	f
db__message_insert	src/database.cpp	/^int db__message_insert(struct mosquitto_db *db, struct mosquitto *context, uint16_t mid, enum mosquitto_msg_direction dir, int qos, bool retain, struct mosquitto_msg_store *stored)$/;"	f
db__message_reconnect_reset	src/database.cpp	/^int db__message_reconnect_reset(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
db__message_release	src/database.cpp	/^int db__message_release(struct mosquitto_db *db, struct mosquitto *context, uint16_t mid, enum mosquitto_msg_direction dir)$/;"	f
db__message_remove	src/database.cpp	/^static void db__message_remove(struct mosquitto_db *db, struct mosquitto *context, struct mosquitto_client_msg **msg, struct mosquitto_client_msg *last)$/;"	f	file:
db__message_store	src/database.cpp	/^int db__message_store(struct mosquitto_db *db, const char *source, uint16_t source_mid, char *topic, int qos, uint32_t payloadlen, mosquitto__payload_uhpa *payload, int retain, struct mosquitto_msg_store **stored, dbid_t store_id)$/;"	f
db__message_store_find	src/database.cpp	/^int db__message_store_find(struct mosquitto *context, uint16_t mid, struct mosquitto_msg_store **stored)$/;"	f
db__message_update	src/database.cpp	/^int db__message_update(struct mosquitto *context, uint16_t mid, enum mosquitto_msg_direction dir, enum mosquitto_msg_state state)$/;"	f
db__message_write	src/database.cpp	/^int db__message_write(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
db__messages_delete	src/database.cpp	/^int db__messages_delete(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
db__messages_easy_queue	src/database.cpp	/^int db__messages_easy_queue(struct mosquitto_db *db, struct mosquitto *context, const char *topic, int qos, uint32_t payloadlen, const void *payload, int retain)$/;"	f
db__msg_store_add	src/database.cpp	/^void db__msg_store_add(struct mosquitto_db *db, struct mosquitto_msg_store *store)$/;"	f
db__msg_store_chunk_restore	src/db_dump/db_dump.cpp	/^static int db__msg_store_chunk_restore(struct mosquitto_db *db, FILE *db_fd, uint32_t length, struct db_msg *msg)$/;"	f	file:
db__msg_store_clean	src/database.cpp	/^void db__msg_store_clean(struct mosquitto_db *db)$/;"	f
db__msg_store_deref	src/database.cpp	/^void db__msg_store_deref(struct mosquitto_db *db, struct mosquitto_msg_store **store)$/;"	f
db__msg_store_remove	src/database.cpp	/^void db__msg_store_remove(struct mosquitto_db *db, struct mosquitto_msg_store *store)$/;"	f
db__open	src/database.cpp	/^int db__open(struct mosquitto__config *config, struct mosquitto_db *db)$/;"	f
db__ready_for_flight	src/database.cpp	/^static bool db__ready_for_flight(struct mosquitto *context, int qos)$/;"	f	file:
db__ready_for_queue	src/database.cpp	/^static bool db__ready_for_queue(struct mosquitto *context, int qos)$/;"	f	file:
db__retain_chunk_restore	src/db_dump/db_dump.cpp	/^static int db__retain_chunk_restore(struct mosquitto_db *db, FILE *db_fd)$/;"	f	file:
db__sub_chunk_restore	src/db_dump/db_dump.cpp	/^static int db__sub_chunk_restore(struct mosquitto_db *db, FILE *db_fd, uint32_t length, struct db_sub *sub)$/;"	f	file:
db__vacuum	src/database.cpp	/^void db__vacuum(void)$/;"	f
db_client	src/db_dump/db_dump.cpp	/^struct db_client$/;"	s	file:
db_client_msg	src/db_dump/db_dump.cpp	/^struct db_client_msg$/;"	s	file:
db_database	examples/mysql_log/mysql_log.cpp	18;"	d	file:
db_host	examples/mysql_log/mysql_log.cpp	15;"	d	file:
db_id	src/mosquitto_broker_internal.h	/^	dbid_t db_id;$/;"	m	struct:mosquitto_msg_store
db_id	src/mosquitto_broker_internal.h	/^	dbid_t db_id;$/;"	m	struct:mosquitto_msg_store_load
db_msg	src/db_dump/db_dump.cpp	/^struct db_msg$/;"	s	file:
db_password	examples/mysql_log/mysql_log.cpp	17;"	d	file:
db_port	examples/mysql_log/mysql_log.cpp	19;"	d	file:
db_query	examples/mysql_log/mysql_log.cpp	21;"	d	file:
db_sub	src/db_dump/db_dump.cpp	/^struct db_sub$/;"	s	file:
db_username	examples/mysql_log/mysql_log.cpp	16;"	d	file:
db_version	src/db_dump/db_dump.cpp	/^static uint32_t db_version;$/;"	v	file:
db_version	src/persist.cpp	/^static uint32_t db_version;$/;"	v	file:
dbid_t	src/mosquitto_broker_internal.h	/^typedef uint64_t dbid_t;$/;"	t
debug	client/client_shared.h	/^	bool debug;$/;"	m	struct:mosq_config
default_listener	src/mosquitto_broker_internal.h	/^	struct mosquitto__listener default_listener;$/;"	m	struct:mosquitto__config	typeref:struct:mosquitto__config::mosquitto__listener
delete_pwuser	src/mosquitto_passwd.cpp	/^int delete_pwuser(FILE *fptr, FILE *ftmp, const char *username)$/;"	f
demote_headers	www/plugins/docbookmanpage/docbookmanpage.py	/^    demote_headers = True$/;"	v	class:CompileDocbookManpage
deny_severity	src/mosquitto.cpp	/^int deny_severity = LOG_INFO;$/;"	v
deny_special_chars	src/mosquitto_broker_internal.h	/^	bool deny_special_chars;$/;"	m	struct:mosquitto__auth_plugin_config
dest_id_count	src/mosquitto_broker_internal.h	/^	int dest_id_count;$/;"	m	struct:mosquitto_msg_store
dest_ids	src/mosquitto_broker_internal.h	/^	char **dest_ids;$/;"	m	struct:mosquitto_msg_store
direction	src/db_dump/db_dump.cpp	/^	uint8_t qos, retain, direction, state, dup;$/;"	m	struct:db_client_msg	file:
direction	src/mosquitto_broker_internal.h	/^	enum mosquitto__bridge_direction direction;$/;"	m	struct:mosquitto__bridge_topic	typeref:enum:mosquitto__bridge_topic::mosquitto__bridge_direction
direction	src/mosquitto_broker_internal.h	/^	enum mosquitto_msg_direction direction;$/;"	m	struct:mosquitto_client_msg	typeref:enum:mosquitto_client_msg::mosquitto_msg_direction
disconnect	lib/cpp/mosquittopp.cpp	/^int mosquittopp::disconnect()$/;"	f	class:mosqpp::mosquittopp
disconnect_packet	test/broker/02-subhier-crash.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/broker/05-clean-session-qos1.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/broker/06-bridge-reconnect-local-out-helper.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/broker/08-ssl-bridge-helper.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/01-con-discon-success.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/02-subscribe-qos0.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/02-subscribe-qos1.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/02-subscribe-qos2.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/02-unsubscribe.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/03-publish-b2c-qos1.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/03-publish-b2c-qos2.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/03-publish-c2b-qos1-disconnect.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/03-publish-c2b-qos1-timeout.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/03-publish-c2b-qos2-disconnect.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/03-publish-c2b-qos2-timeout.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/03-publish-c2b-qos2.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/03-publish-qos0-no-payload.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/03-publish-qos0.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/08-ssl-connect-cert-auth-enc.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/08-ssl-connect-cert-auth.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_packet	test/lib/08-ssl-connect-no-auth.py	/^disconnect_packet = mosq_test.gen_disconnect()$/;"	v
disconnect_sent	client/pub_client.cpp	/^static bool disconnect_sent = false;$/;"	v	file:
disconnect_t	lib/mosquitto_internal.h	/^	time_t disconnect_t;$/;"	m	struct:mosquitto
disconnect_t	src/db_dump/db_dump.cpp	/^	time_t disconnect_t;$/;"	m	struct:db_client	file:
do_check	test/lib/c/09-util-topic-matching.cpp	/^void do_check(const char *sub, const char *topic, bool bad_res)$/;"	f
do_check	test/lib/cpp/09-util-topic-matching.cpp	/^void do_check(const char *sub, const char *topic, bool bad_res)$/;"	f
do_client_connect	test/mosq_test.py	/^def do_client_connect(connect_packet, connack_packet, hostname="localhost", port=1888, timeout=60, connack_error="connack"):$/;"	f
do_disconnect	src/loop.cpp	/^void do_disconnect(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
do_print	src/db_dump/db_dump.cpp	/^static int do_print = 1;$/;"	v	file:
do_send_receive	test/mosq_test.py	/^def do_send_receive(sock, send_packet, receive_packet, error_string="send receive error"):$/;"	f
drop_privileges	src/mosquitto.cpp	/^int drop_privileges(struct mosquitto__config *config, bool temporary)$/;"	f
dup	lib/mosquitto_internal.h	/^	bool dup;$/;"	m	struct:mosquitto_message_all
dup	src/db_dump/db_dump.cpp	/^	uint8_t qos, retain, direction, state, dup;$/;"	m	struct:db_client_msg	file:
dup	src/mosquitto_broker_internal.h	/^	bool dup;$/;"	m	struct:mosquitto_client_msg
easy_address	src/websockets.cpp	/^static void easy_address(int sock, struct mosquitto *mosq)$/;"	f	file:
env	test/broker/08-tls-psk-bridge.py	/^env = dict(os.environ)$/;"	v
env	test/broker/08-tls-psk-pub.py	/^env = dict(os.environ)$/;"	v
env	test/lib/01-con-discon-success.py	/^env = dict(os.environ)$/;"	v
env	test/lib/01-keepalive-pingreq.py	/^env = dict(os.environ)$/;"	v
env	test/lib/01-no-clean-session.py	/^env = dict(os.environ)$/;"	v
env	test/lib/01-unpwd-set.py	/^env = dict(os.environ)$/;"	v
env	test/lib/01-will-set.py	/^env = dict(os.environ)$/;"	v
env	test/lib/01-will-unpwd-set.py	/^env = dict(os.environ)$/;"	v
env	test/lib/02-subscribe-qos0.py	/^env = dict(os.environ)$/;"	v
env	test/lib/02-subscribe-qos1.py	/^env = dict(os.environ)$/;"	v
env	test/lib/02-subscribe-qos2.py	/^env = dict(os.environ)$/;"	v
env	test/lib/02-unsubscribe.py	/^env = dict(os.environ)$/;"	v
env	test/lib/03-publish-b2c-qos1.py	/^env = dict(os.environ)$/;"	v
env	test/lib/03-publish-b2c-qos2.py	/^env = dict(os.environ)$/;"	v
env	test/lib/03-publish-c2b-qos1-disconnect.py	/^env = dict(os.environ)$/;"	v
env	test/lib/03-publish-c2b-qos1-timeout.py	/^env = dict(os.environ)$/;"	v
env	test/lib/03-publish-c2b-qos2-disconnect.py	/^env = dict(os.environ)$/;"	v
env	test/lib/03-publish-c2b-qos2-timeout.py	/^env = dict(os.environ)$/;"	v
env	test/lib/03-publish-c2b-qos2.py	/^env = dict(os.environ)$/;"	v
env	test/lib/03-publish-qos0-no-payload.py	/^env = dict(os.environ)$/;"	v
env	test/lib/03-publish-qos0.py	/^env = dict(os.environ)$/;"	v
env	test/lib/04-retain-qos0.py	/^env = dict(os.environ)$/;"	v
env	test/lib/08-ssl-bad-cacert.py	/^env = dict(os.environ)$/;"	v
env	test/lib/08-ssl-connect-cert-auth-enc.py	/^env = dict(os.environ)$/;"	v
env	test/lib/08-ssl-connect-cert-auth.py	/^env = dict(os.environ)$/;"	v
env	test/lib/08-ssl-connect-no-auth.py	/^env = dict(os.environ)$/;"	v
env	test/lib/08-ssl-fake-cacert.py	/^env = dict(os.environ)$/;"	v
env	test/lib/09-util-topic-matching.py	/^env = dict(os.environ)$/;"	v
env	test/lib/09-util-topic-tokenise.py	/^env = dict(os.environ)$/;"	v
env	test/lib/09-util-utf8-validate.py	/^env = dict(os.environ)$/;"	v
eol	client/client_shared.h	/^	bool eol; \/* sub *\/$/;"	m	struct:mosq_config
epollfd	src/mosquitto_broker_internal.h	/^	int epollfd;$/;"	m	struct:mosquitto_db
events	lib/mosquitto_internal.h	/^	uint32_t events;$/;"	m	struct:mosquitto
expand_mult	src/deps/uthash.h	/^   unsigned expand_mult;$/;"	m	struct:UT_hash_bucket
expect_packet	test/mosq_test.py	/^def expect_packet(sock, name, expected):$/;"	f
false	lib/mosquitto.h	38;"	d
false	src/mosquitto_passwd.cpp	36;"	d	file:
fd	src/mosquitto_broker_internal.h	/^	int fd;$/;"	m	struct:mosquitto__listener
fgets_extending	src/conf.cpp	/^static char *fgets_extending(char **buf, int *buflen, FILE *stream)$/;"	f	file:
file_input	client/client_shared.h	/^	char *file_input; \/* pub *\/$/;"	m	struct:mosq_config
filter_out_count	client/client_shared.h	/^	int filter_out_count; \/* sub *\/$/;"	m	struct:mosq_config
filter_outs	client/client_shared.h	/^	char **filter_outs; \/* sub *\/$/;"	m	struct:mosq_config
first_connection	test/lib/c/03-publish-c2b-qos1-disconnect.cpp	/^static int first_connection = 1;$/;"	v	file:
first_connection	test/lib/c/03-publish-c2b-qos2-disconnect.cpp	/^static int first_connection = 1;$/;"	v	file:
first_connection	test/lib/cpp/03-publish-c2b-qos1-disconnect.cpp	/^static int first_connection = 1;$/;"	v	file:
first_connection	test/lib/cpp/03-publish-c2b-qos2-disconnect.cpp	/^static int first_connection = 1;$/;"	v	file:
flag_db_backup	src/mosquitto.cpp	/^bool flag_db_backup = false;$/;"	v
flag_reload	src/mosquitto.cpp	/^bool flag_reload = false;$/;"	v
flag_tree_print	src/mosquitto.cpp	/^bool flag_tree_print = false;$/;"	v
for_free_next	lib/mosquitto_internal.h	/^	struct mosquitto *for_free_next;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto
format	client/client_shared.h	/^	char *format; \/* sub *\/$/;"	m	struct:mosq_config
formatted_print	client/sub_client_output.cpp	/^static void formatted_print(const struct mosq_config *cfg, const struct mosquitto_message *message)$/;"	f	file:
fptr	src/websockets.cpp	/^	FILE *fptr;$/;"	m	struct:libws_http_data	file:
fptr	test/msgsps_sub.cpp	/^FILE *fptr = NULL;$/;"	v
free__acl	src/security_default.cpp	/^static void free__acl(struct mosquitto__acl *acl)$/;"	f	file:
free__db_client	src/db_dump/db_dump.cpp	/^free__db_client(struct db_client *client)$/;"	f	file:
free__db_client_msg	src/db_dump/db_dump.cpp	/^free__db_client_msg(struct db_client_msg *msg)$/;"	f	file:
free__db_msg	src/db_dump/db_dump.cpp	/^free__db_msg(struct db_msg *msg)$/;"	f	file:
free__db_sub	src/db_dump/db_dump.cpp	/^free__db_sub(struct db_sub *sub)$/;"	f	file:
g_bytes_received	src/sys_tree.cpp	/^uint64_t g_bytes_received = 0;$/;"	v
g_bytes_sent	src/sys_tree.cpp	/^uint64_t g_bytes_sent = 0;$/;"	v
g_clients_expired	src/sys_tree.cpp	/^int g_clients_expired = 0;$/;"	v
g_connection_count	src/sys_tree.cpp	/^unsigned int g_connection_count = 0;$/;"	v
g_msgs_dropped	src/sys_tree.cpp	/^unsigned long g_msgs_dropped = 0;$/;"	v
g_msgs_received	src/sys_tree.cpp	/^unsigned long g_msgs_received = 0;$/;"	v
g_msgs_sent	src/sys_tree.cpp	/^unsigned long g_msgs_sent = 0;$/;"	v
g_pub_bytes_received	src/sys_tree.cpp	/^uint64_t g_pub_bytes_received = 0;$/;"	v
g_pub_bytes_sent	src/sys_tree.cpp	/^uint64_t g_pub_bytes_sent = 0;$/;"	v
g_pub_msgs_received	src/sys_tree.cpp	/^unsigned long g_pub_msgs_received = 0;$/;"	v
g_pub_msgs_sent	src/sys_tree.cpp	/^unsigned long g_pub_msgs_sent = 0;$/;"	v
g_socket_connections	src/sys_tree.cpp	/^unsigned int g_socket_connections = 0;$/;"	v
gen_connack	test/mosq_test.py	/^def gen_connack(resv=0, rc=0):$/;"	f
gen_connect	test/mosq_test.py	/^def gen_connect(client_id, clean_session=True, keepalive=60, username=None, password=None, will_topic=None, will_qos=0, will_retain=False, will_payload="", proto_ver=4, connect_reserved=False):$/;"	f
gen_disconnect	test/mosq_test.py	/^def gen_disconnect():$/;"	f
gen_pingreq	test/mosq_test.py	/^def gen_pingreq():$/;"	f
gen_pingresp	test/mosq_test.py	/^def gen_pingresp():$/;"	f
gen_puback	test/mosq_test.py	/^def gen_puback(mid):$/;"	f
gen_pubcomp	test/mosq_test.py	/^def gen_pubcomp(mid):$/;"	f
gen_publish	test/mosq_test.py	/^def gen_publish(topic, qos, payload=None, retain=False, dup=False, mid=0):$/;"	f
gen_pubrec	test/mosq_test.py	/^def gen_pubrec(mid):$/;"	f
gen_pubrel	test/mosq_test.py	/^def gen_pubrel(mid, dup=False):$/;"	f
gen_suback	test/mosq_test.py	/^def gen_suback(mid, qos):$/;"	f
gen_subscribe	test/mosq_test.py	/^def gen_subscribe(mid, topic, qos):$/;"	f
gen_unsuback	test/mosq_test.py	/^def gen_unsuback(mid):$/;"	f
gen_unsubscribe	test/mosq_test.py	/^def gen_unsubscribe(mid, topic):$/;"	f
gen_unsubscribe_invalid_no_topic	test/broker/02-unsubscribe-invalid-no-topic.py	/^def gen_unsubscribe_invalid_no_topic(mid):$/;"	f
get16bits	src/deps/uthash.h	458;"	d
get16bits	src/deps/uthash.h	461;"	d
get16bits	src/deps/uthash.h	465;"	d
get_lib_port	test/mosq_test.py	/^def get_lib_port():$/;"	f
get_password	src/mosquitto_passwd.cpp	/^int get_password(char *password, int len)$/;"	f
get_port	test/mosq_test.py	/^def get_port(count=1):$/;"	f
get_time	client/sub_client_output.cpp	/^static int get_time(struct tm **ti, long *ns)$/;"	f	file:
gets_quiet	src/mosquitto_passwd.cpp	/^int gets_quiet(char *s, int len)$/;"	f
handle__connack	lib/handle_connack.cpp	/^int handle__connack(struct mosquitto *mosq)$/;"	f
handle__connack	src/handle_connack.cpp	/^int handle__connack(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
handle__connect	src/handle_connect.cpp	/^int handle__connect(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
handle__disconnect	src/handle_connect.cpp	/^int handle__disconnect(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
handle__packet	lib/read_handle.cpp	/^int handle__packet(struct mosquitto *mosq)$/;"	f
handle__packet	src/read_handle.cpp	/^int handle__packet(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
handle__pingreq	lib/handle_ping.cpp	/^int handle__pingreq(struct mosquitto *mosq)$/;"	f
handle__pingresp	lib/handle_ping.cpp	/^int handle__pingresp(struct mosquitto *mosq)$/;"	f
handle__pubackcomp	lib/handle_pubackcomp.cpp	/^int handle__pubackcomp(struct mosquitto_db *db, struct mosquitto *mosq, const char *type)$/;"	f
handle__publish	lib/handle_publish.cpp	/^int handle__publish(struct mosquitto *mosq)$/;"	f
handle__publish	src/handle_publish.cpp	/^int handle__publish(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
handle__pubrec	lib/handle_pubrec.cpp	/^int handle__pubrec(struct mosquitto *mosq)$/;"	f
handle__pubrel	lib/handle_pubrel.cpp	/^int handle__pubrel(struct mosquitto_db *db, struct mosquitto *mosq)$/;"	f
handle__suback	lib/handle_suback.cpp	/^int handle__suback(struct mosquitto *mosq)$/;"	f
handle__subscribe	src/handle_subscribe.cpp	/^int handle__subscribe(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
handle__unsuback	lib/handle_unsuback.cpp	/^int handle__unsuback(struct mosquitto *mosq)$/;"	f
handle__unsubscribe	src/handle_unsubscribe.cpp	/^int handle__unsubscribe(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
handle_sighup	src/signals.cpp	/^void handle_sighup(int signal)$/;"	f
handle_sigint	src/mosquitto_passwd.cpp	/^void handle_sigint(int signal)$/;"	f
handle_sigint	src/signals.cpp	/^void handle_sigint(int signal)$/;"	f
handle_signal	examples/mysql_log/mysql_log.cpp	/^void handle_signal(int s)$/;"	f
handle_sigusr1	src/signals.cpp	/^void handle_sigusr1(int signal)$/;"	f
handle_sigusr2	src/signals.cpp	/^void handle_sigusr2(int signal)$/;"	f
hashv	src/deps/uthash.h	/^   unsigned hashv;                   \/* result of hash-fcn(key)        *\/$/;"	m	struct:UT_hash_handle
have_websockets_listener	src/mosquitto_broker_internal.h	/^	bool have_websockets_listener;$/;"	m	struct:mosquitto__config
hh	src/db_dump/db_dump.cpp	/^	UT_hash_handle hh;$/;"	m	struct:msg_store_chunk	file:
hh	src/mosquitto_broker_internal.h	/^	UT_hash_handle hh;$/;"	m	struct:mosquitto__subhier
hh	src/mosquitto_broker_internal.h	/^	UT_hash_handle hh;$/;"	m	struct:mosquitto__unpwd
hh	src/mosquitto_broker_internal.h	/^	UT_hash_handle hh;$/;"	m	struct:mosquitto_msg_store_load
hh_head	src/deps/uthash.h	/^   struct UT_hash_handle *hh_head;$/;"	m	struct:UT_hash_bucket	typeref:struct:UT_hash_bucket::UT_hash_handle
hh_id	lib/mosquitto_internal.h	/^	UT_hash_handle hh_id;$/;"	m	struct:mosquitto
hh_id	src/db_dump/db_dump.cpp	/^	UT_hash_handle hh_id;$/;"	m	struct:client_chunk	file:
hh_next	src/deps/uthash.h	/^   struct UT_hash_handle *hh_next;   \/* next hh in bucket order        *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hh_prev	src/deps/uthash.h	/^   struct UT_hash_handle *hh_prev;   \/* previous hh in bucket order    *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hh_sock	lib/mosquitto_internal.h	/^	UT_hash_handle hh_sock;$/;"	m	struct:mosquitto
hho	src/deps/uthash.h	/^   ptrdiff_t hho; \/* hash handle offset (byte pos of hash handle in element *\/$/;"	m	struct:UT_hash_table
host	client/client_shared.h	/^	char *host;$/;"	m	struct:mosq_config
host	lib/mosquitto_internal.h	/^	char *host;$/;"	m	struct:mosquitto
host	src/mosquitto_broker_internal.h	/^	char *host;$/;"	m	struct:mosquitto__listener
hrc	test/broker/03-publish-b2c-disconnect-qos2.py	/^    hrc = pub.wait()$/;"	v
http__canonical_filename	src/websockets.cpp	/^static char *http__canonical_filename($/;"	f	file:
http_dir	src/mosquitto_broker_internal.h	/^	char *http_dir;$/;"	m	struct:libws_mqtt_hack
http_dir	src/mosquitto_broker_internal.h	/^	char *http_dir;$/;"	m	struct:mosquitto__listener
id	client/client_shared.h	/^	char *id;$/;"	m	struct:mosq_config
id	lib/mosquitto_internal.h	/^	char *id;$/;"	m	struct:mosquitto
id	src/db_dump/db_dump.cpp	/^	char *id;$/;"	m	struct:client_chunk	file:
id_prefix	client/client_shared.h	/^	char *id_prefix;$/;"	m	struct:mosq_config
ideal_chain_maxlen	src/deps/uthash.h	/^   unsigned ideal_chain_maxlen;$/;"	m	struct:UT_hash_table
idle_timeout	src/mosquitto_broker_internal.h	/^	int idle_timeout;$/;"	m	struct:mosquitto__bridge
in_callback	lib/mosquitto_internal.h	/^	bool in_callback;$/;"	m	struct:mosquitto
in_message_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t in_message_mutex;$/;"	m	struct:mosquitto
in_messages	lib/mosquitto_internal.h	/^	struct mosquitto_message_all *in_messages;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_message_all
in_messages_last	lib/mosquitto_internal.h	/^	struct mosquitto_message_all *in_messages_last;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_message_all
in_packet	lib/mosquitto_internal.h	/^	struct mosquitto__packet in_packet;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto__packet
in_queue_len	lib/mosquitto_internal.h	/^	int in_queue_len;$/;"	m	struct:mosquitto
incdir	config.mk	/^incdir?=${prefix}\/include$/;"	m
ineff_expands	src/deps/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
inflight_messages	lib/mosquitto_internal.h	/^	int inflight_messages;$/;"	m	struct:mosquitto
inflight_msgs	lib/mosquitto_internal.h	/^	struct mosquitto_client_msg *inflight_msgs;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_client_msg
init_config	client/client_shared.cpp	/^void init_config(struct mosq_config *cfg)$/;"	f
initial_notification_done	src/mosquitto_broker_internal.h	/^	bool initial_notification_done;$/;"	m	struct:mosquitto__bridge
insecure	client/client_shared.h	/^	bool insecure;$/;"	m	struct:mosq_config
int_db	src/mosquitto.cpp	/^struct mosquitto_db int_db;$/;"	v	typeref:struct:mosquitto_db
is_bridge	lib/mosquitto_internal.h	/^	bool is_bridge;$/;"	m	struct:mosquitto
is_dropping	lib/mosquitto_internal.h	/^	bool is_dropping;$/;"	m	struct:mosquitto
json_print	client/sub_client_output.cpp	/^static void json_print(const struct mosquitto_message *message, const struct tm *ti, bool escaped)$/;"	f	file:
keepalive	client/client_shared.h	/^	int keepalive;$/;"	m	struct:mosq_config
keepalive	lib/mosquitto_internal.h	/^	uint16_t keepalive;$/;"	m	struct:mosquitto
keepalive	src/mosquitto_broker_internal.h	/^	int keepalive;$/;"	m	struct:mosquitto__bridge
keepalive	test/broker/01-connect-anon-denied.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-invalid-id-0-311.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-invalid-id-0.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-invalid-id-missing.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-invalid-id-utf8.py	/^keepalive = 60$/;"	v
keepalive	test/broker/01-connect-invalid-protonum.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-invalid-reserved.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-success.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-uname-invalid-utf8.py	/^keepalive = 60$/;"	v
keepalive	test/broker/01-connect-uname-no-flag.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-uname-no-password-denied.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-uname-password-denied.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-uname-password-success-no-tls.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-uname-password-success.py	/^keepalive = 10$/;"	v
keepalive	test/broker/01-connect-uname-pwd-no-flag.py	/^keepalive = 10$/;"	v
keepalive	test/broker/02-subhier-crash.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-subpub-qos0.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-subpub-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-subpub-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-subscribe-invalid-utf8.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-subscribe-persistence-flipflop.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-subscribe-qos0.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-subscribe-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-subscribe-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-unsubscribe-invalid-no-topic.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-unsubscribe-qos0.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-unsubscribe-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/broker/02-unsubscribe-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-pattern-matching-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-b2c-disconnect-qos1-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-b2c-disconnect-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-b2c-disconnect-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-b2c-timeout-qos1-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-b2c-timeout-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-b2c-timeout-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-c2b-disconnect-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-c2b-timeout-qos2.py	/^keepalive = 600$/;"	v
keepalive	test/broker/03-publish-dollar.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-invalid-utf8.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/broker/03-publish-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/broker/04-retain-qos0-clear.py	/^keepalive = 60$/;"	v
keepalive	test/broker/04-retain-qos0-fresh.py	/^keepalive = 60$/;"	v
keepalive	test/broker/04-retain-qos0-repeated.py	/^keepalive = 60$/;"	v
keepalive	test/broker/04-retain-qos0.py	/^keepalive = 60$/;"	v
keepalive	test/broker/04-retain-qos1-qos0.py	/^keepalive = 60$/;"	v
keepalive	test/broker/04-retain-upgrade-outgoing-qos.py	/^keepalive = 60$/;"	v
keepalive	test/broker/05-clean-session-qos1-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/05-clean-session-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-b2br-disconnect-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-b2br-disconnect-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-b2br-remapping.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-br2b-disconnect-qos1-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-br2b-disconnect-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-br2b-disconnect-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-br2b-remapping.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-fail-persist-resend-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-fail-persist-resend-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-per-listener-settings.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-reconnect-local-out-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/06-bridge-reconnect-local-out.py	/^keepalive = 60$/;"	v
keepalive	test/broker/07-will-invalid-utf8.py	/^keepalive = 60$/;"	v
keepalive	test/broker/07-will-no-flag.py	/^keepalive = 10$/;"	v
keepalive	test/broker/07-will-null-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/07-will-null-topic.py	/^keepalive = 60$/;"	v
keepalive	test/broker/07-will-null.py	/^keepalive = 60$/;"	v
keepalive	test/broker/07-will-qos0-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/07-will-qos0.py	/^keepalive = 60$/;"	v
keepalive	test/broker/08-ssl-bridge-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/08-ssl-bridge.py	/^keepalive = 60$/;"	v
keepalive	test/broker/08-ssl-connect-cert-auth-crl.py	/^keepalive = 10$/;"	v
keepalive	test/broker/08-ssl-connect-cert-auth-expired.py	/^keepalive = 10$/;"	v
keepalive	test/broker/08-ssl-connect-cert-auth-revoked.py	/^keepalive = 10$/;"	v
keepalive	test/broker/08-ssl-connect-cert-auth-without.py	/^keepalive = 10$/;"	v
keepalive	test/broker/08-ssl-connect-cert-auth.py	/^keepalive = 10$/;"	v
keepalive	test/broker/08-ssl-connect-identity.py	/^keepalive = 10$/;"	v
keepalive	test/broker/08-ssl-connect-no-auth-wrong-ca.py	/^keepalive = 10$/;"	v
keepalive	test/broker/08-ssl-connect-no-auth.py	/^keepalive = 10$/;"	v
keepalive	test/broker/08-ssl-connect-no-identity.py	/^keepalive = 10$/;"	v
keepalive	test/broker/08-tls-psk-bridge.py	/^keepalive = 60$/;"	v
keepalive	test/broker/08-tls-psk-pub.py	/^keepalive = 10$/;"	v
keepalive	test/broker/09-plugin-auth-acl-sub.py	/^keepalive = 10$/;"	v
keepalive	test/broker/09-plugin-auth-defer-unpwd-fail.py	/^keepalive = 10$/;"	v
keepalive	test/broker/09-plugin-auth-defer-unpwd-success.py	/^keepalive = 10$/;"	v
keepalive	test/broker/09-plugin-auth-msg-params.py	/^keepalive = 10$/;"	v
keepalive	test/broker/09-plugin-auth-unpwd-fail.py	/^keepalive = 10$/;"	v
keepalive	test/broker/09-plugin-auth-unpwd-success.py	/^keepalive = 10$/;"	v
keepalive	test/broker/09-plugin-auth-v2-unpwd-fail.py	/^keepalive = 10$/;"	v
keepalive	test/broker/09-plugin-auth-v2-unpwd-success.py	/^keepalive = 10$/;"	v
keepalive	test/broker/10-listener-mount-point-helper.py	/^keepalive = 60$/;"	v
keepalive	test/broker/10-listener-mount-point.py	/^keepalive = 60$/;"	v
keepalive	test/broker/11-persistent-subscription.py	/^keepalive = 60$/;"	v
keepalive	test/lib/01-con-discon-success.py	/^keepalive = 60$/;"	v
keepalive	test/lib/01-keepalive-pingreq.py	/^keepalive = 4$/;"	v
keepalive	test/lib/01-no-clean-session.py	/^keepalive = 60$/;"	v
keepalive	test/lib/01-unpwd-set.py	/^keepalive = 60$/;"	v
keepalive	test/lib/01-will-set.py	/^keepalive = 60$/;"	v
keepalive	test/lib/01-will-unpwd-set.py	/^keepalive = 60$/;"	v
keepalive	test/lib/02-subscribe-qos0.py	/^keepalive = 60$/;"	v
keepalive	test/lib/02-subscribe-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/lib/02-subscribe-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/lib/02-unsubscribe.py	/^keepalive = 60$/;"	v
keepalive	test/lib/03-publish-b2c-qos1.py	/^keepalive = 60$/;"	v
keepalive	test/lib/03-publish-b2c-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/lib/03-publish-c2b-qos1-disconnect.py	/^keepalive = 60$/;"	v
keepalive	test/lib/03-publish-c2b-qos1-timeout.py	/^keepalive = 60$/;"	v
keepalive	test/lib/03-publish-c2b-qos2-disconnect.py	/^keepalive = 60$/;"	v
keepalive	test/lib/03-publish-c2b-qos2-timeout.py	/^keepalive = 60$/;"	v
keepalive	test/lib/03-publish-c2b-qos2.py	/^keepalive = 60$/;"	v
keepalive	test/lib/03-publish-qos0-no-payload.py	/^keepalive = 60$/;"	v
keepalive	test/lib/03-publish-qos0.py	/^keepalive = 60$/;"	v
keepalive	test/lib/04-retain-qos0.py	/^keepalive = 60$/;"	v
keepalive	test/lib/08-ssl-connect-cert-auth-enc.py	/^keepalive = 60$/;"	v
keepalive	test/lib/08-ssl-connect-cert-auth.py	/^keepalive = 60$/;"	v
keepalive	test/lib/08-ssl-connect-no-auth.py	/^keepalive = 60$/;"	v
key	src/deps/uthash.h	/^   void *key;                        \/* ptr to enclosing struct's key  *\/$/;"	m	struct:UT_hash_handle
key	src/mosquitto_plugin.h	/^	char *key;$/;"	m	struct:mosquitto_auth_opt
key	src/mosquitto_plugin.h	/^	char *key;$/;"	m	struct:mosquitto_opt
key	test/broker/c/mosquitto_plugin_v2.h	/^	char *key;$/;"	m	struct:mosquitto_auth_opt
keyfile	client/client_shared.h	/^	char *keyfile;$/;"	m	struct:mosq_config
keyfile	lib/mosquitto.h	/^	char *keyfile;$/;"	m	struct:libmosquitto_tls
keyfile	src/mosquitto_broker_internal.h	/^	char *keyfile;$/;"	m	struct:mosquitto__listener
keylen	src/deps/uthash.h	/^   unsigned keylen;                  \/* enclosing struct's key len     *\/$/;"	m	struct:UT_hash_handle
last_db_id	src/mosquitto_broker_internal.h	/^	dbid_t last_db_id;$/;"	m	struct:mosquitto_db
last_inflight_msg	lib/mosquitto_internal.h	/^	struct mosquitto_client_msg *last_inflight_msg;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_client_msg
last_mid	client/pub_client.cpp	/^static int last_mid = -1;$/;"	v	file:
last_mid	lib/mosquitto_internal.h	/^	uint16_t last_mid;$/;"	m	struct:mosquitto
last_mid	src/db_dump/db_dump.cpp	/^	uint16_t last_mid;$/;"	m	struct:db_client	file:
last_mid_sent	client/pub_client.cpp	/^static int last_mid_sent = -1;$/;"	v	file:
last_msg_in	lib/mosquitto_internal.h	/^	time_t last_msg_in;$/;"	m	struct:mosquitto
last_queued_msg	lib/mosquitto_internal.h	/^	struct mosquitto_client_msg *last_queued_msg;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_client_msg
lazy_reconnect	src/mosquitto_broker_internal.h	/^	bool lazy_reconnect;$/;"	m	struct:mosquitto__bridge
length	src/db_dump/db_dump.cpp	/^	uint32_t length;$/;"	m	struct:msg_store_chunk	file:
lib	src/mosquitto_broker_internal.h	/^	void *lib;$/;"	m	struct:mosquitto__auth_plugin
lib_cleanup	lib/cpp/mosquittopp.cpp	/^int lib_cleanup()$/;"	f	namespace:mosqpp
lib_init	lib/cpp/mosquittopp.cpp	/^int lib_init()$/;"	f	namespace:mosqpp
lib_version	lib/cpp/mosquittopp.cpp	/^int lib_version(int *major, int *minor, int *revision)$/;"	f	namespace:mosqpp
libdir	config.mk	/^libdir?=${prefix}\/lib${LIB_SUFFIX}$/;"	m
libmosq_EXPORT	lib/mosquitto.h	26;"	d
libmosq_EXPORT	lib/mosquitto.h	28;"	d
libmosq_EXPORT	lib/mosquitto.h	31;"	d
libmosquitto_auth	lib/mosquitto.h	/^struct libmosquitto_auth {$/;"	s
libmosquitto_tls	lib/mosquitto.h	/^struct libmosquitto_tls {$/;"	s
libmosquitto_will	lib/mosquitto.h	/^struct libmosquitto_will {$/;"	s
libwebsocket	src/mosquitto_broker_internal.h	39;"	d
libwebsocket_callback_on_writable	src/mosquitto_broker_internal.h	28;"	d
libwebsocket_callback_reasons	src/mosquitto_broker_internal.h	38;"	d
libwebsocket_context	src/mosquitto_broker_internal.h	36;"	d
libwebsocket_context_destroy	src/mosquitto_broker_internal.h	31;"	d
libwebsocket_create_context	src/mosquitto_broker_internal.h	30;"	d
libwebsocket_get_socket_fd	src/mosquitto_broker_internal.h	33;"	d
libwebsocket_protocols	src/mosquitto_broker_internal.h	37;"	d
libwebsocket_service	src/mosquitto_broker_internal.h	29;"	d
libwebsocket_write	src/mosquitto_broker_internal.h	32;"	d
libwebsockets_get_protocol	src/mosquitto_broker_internal.h	35;"	d
libwebsockets_return_http_status	src/mosquitto_broker_internal.h	34;"	d
libws_http_data	src/websockets.cpp	/^struct libws_http_data {$/;"	s	file:
libws_mqtt_data	src/mosquitto_broker_internal.h	/^struct libws_mqtt_data {$/;"	s
libws_mqtt_hack	src/mosquitto_broker_internal.h	/^struct libws_mqtt_hack {$/;"	s
line	misc/currentcost/cc128_read.py	/^        line = usb.readline()$/;"	v
listener	lib/mosquitto_internal.h	/^	struct mosquitto__listener *listener;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto__listener
listener_count	src/mosquitto_broker_internal.h	/^	int listener_count;$/;"	m	struct:mosquitto__config
listeners	src/mosquitto_broker_internal.h	/^	struct mosquitto__listener *listeners;$/;"	m	struct:mosquitto__config	typeref:struct:mosquitto__config::mosquitto__listener
ll_for_free	src/mosquitto_broker_internal.h	/^	struct mosquitto *ll_for_free;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::mosquitto
load_file	client/pub_client.cpp	/^int load_file(const char *filename)$/;"	f
load_stdin	client/pub_client.cpp	/^int load_stdin(void)$/;"	f
local_broker	test/broker/06-bridge-reconnect-local-out.py	/^local_broker = mosq_test.start_broker(cmd=local_cmd, filename=os.path.basename(__file__)+'_local1', use_conf=False, port=port2)$/;"	v
local_broker	test/broker/06-bridge-reconnect-local-out.py	/^local_broker = mosq_test.start_broker(cmd=local_cmd, filename=os.path.basename(__file__)+'_local2', port=port2)$/;"	v
local_clientid	src/mosquitto_broker_internal.h	/^	char *local_clientid;$/;"	m	struct:mosquitto__bridge
local_cmd	test/broker/06-bridge-reconnect-local-out.py	/^local_cmd = ['..\/..\/src\/mosquitto', '-c', '06-bridge-reconnect-local-out.conf']$/;"	v
local_password	src/mosquitto_broker_internal.h	/^	char *local_password;$/;"	m	struct:mosquitto__bridge
local_prefix	src/mosquitto_broker_internal.h	/^	char *local_prefix;$/;"	m	struct:mosquitto__bridge_topic
local_topic	src/mosquitto_broker_internal.h	/^	char *local_topic; \/* topic prefixed with local_prefix *\/$/;"	m	struct:mosquitto__bridge_topic
local_username	src/mosquitto_broker_internal.h	/^	char *local_username;$/;"	m	struct:mosquitto__bridge
localedir	config.mk	/^localedir?=${prefix}\/share\/locale$/;"	m
log2_num_buckets	src/deps/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
log__close	src/logging.cpp	/^int log__close(struct mosquitto__config *config)$/;"	f
log__init	src/logging.cpp	/^int log__init(struct mosquitto__config *config)$/;"	f
log__printf	lib/logging_mosq.cpp	/^int log__printf(struct mosquitto *mosq, int priority, const char *fmt, ...)$/;"	f
log__printf	src/logging.cpp	/^int log__printf(struct mosquitto *mosq, int priority, const char *fmt, ...)$/;"	f
log__vprintf	src/logging.cpp	/^int log__vprintf(int priority, const char *fmt, va_list va)$/;"	f
log_callback_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t log_callback_mutex;$/;"	m	struct:mosquitto
log_dest	src/conf.cpp	/^	int log_dest;$/;"	m	struct:config_recurse	file:
log_dest	src/mosquitto_broker_internal.h	/^	int log_dest;$/;"	m	struct:mosquitto__config
log_dest_set	src/conf.cpp	/^	int log_dest_set;$/;"	m	struct:config_recurse	file:
log_destinations	src/logging.cpp	/^static int log_destinations = MQTT3_LOG_STDERR;$/;"	v	file:
log_facility	src/mosquitto_broker_internal.h	/^	int log_facility;$/;"	m	struct:mosquitto__config
log_file	src/mosquitto_broker_internal.h	/^	char *log_file;$/;"	m	struct:mosquitto__config
log_fptr	src/mosquitto_broker_internal.h	/^	FILE *log_fptr;$/;"	m	struct:mosquitto__config
log_priorities	src/logging.cpp	/^static int log_priorities = MOSQ_LOG_ERR | MOSQ_LOG_WARNING | MOSQ_LOG_NOTICE | MOSQ_LOG_INFO;$/;"	v	file:
log_timestamp	src/mosquitto_broker_internal.h	/^	bool log_timestamp;$/;"	m	struct:mosquitto__config
log_type	src/conf.cpp	/^	int log_type;$/;"	m	struct:config_recurse	file:
log_type	src/mosquitto_broker_internal.h	/^	int log_type;$/;"	m	struct:mosquitto__config
log_type_set	src/conf.cpp	/^	int log_type_set;$/;"	m	struct:config_recurse	file:
log_wrap	src/websockets.cpp	/^static void log_wrap(int level, const char *line)$/;"	f	file:
loop	lib/cpp/mosquittopp.cpp	/^int mosquittopp::loop(int timeout, int max_packets)$/;"	f	class:mosqpp::mosquittopp
loop_forever	lib/cpp/mosquittopp.cpp	/^int mosquittopp::loop_forever(int timeout, int max_packets)$/;"	f	class:mosqpp::mosquittopp
loop_handle_reads_writes	src/loop.cpp	/^static void loop_handle_reads_writes(struct mosquitto_db *db, mosq_sock_t sock, uint32_t events)$/;"	f	file:
loop_misc	lib/cpp/mosquittopp.cpp	/^int mosquittopp::loop_misc()$/;"	f	class:mosqpp::mosquittopp
loop_read	lib/cpp/mosquittopp.cpp	/^int mosquittopp::loop_read(int max_packets)$/;"	f	class:mosqpp::mosquittopp
loop_start	lib/cpp/mosquittopp.cpp	/^int mosquittopp::loop_start()$/;"	f	class:mosqpp::mosquittopp
loop_stop	lib/cpp/mosquittopp.cpp	/^int mosquittopp::loop_stop(bool force)$/;"	f	class:mosqpp::mosquittopp
loop_write	lib/cpp/mosquittopp.cpp	/^int mosquittopp::loop_write(int max_packets)$/;"	f	class:mosqpp::mosquittopp
lws_pollargs	src/mosquitto_broker_internal.h	43;"	d
lws_pollfd	src/mosquitto_broker_internal.h	41;"	d
lws_service_fd	src/mosquitto_broker_internal.h	42;"	d
m_mosq	lib/cpp/mosquittopp.h	/^		struct mosquitto *m_mosq;$/;"	m	class:mosqpp::mosquittopp	typeref:struct:mosqpp::mosquittopp::mosquitto
magic	src/persist.h	/^const unsigned char magic[15] = {0x00, 0xB5, 0x00, 'm','o','s','q','u','i','t','t','o',' ','d','b'};$/;"	v
main	client/pub_client.cpp	/^int main(int argc, char *argv[])$/;"	f
main	client/sub_client.cpp	/^int main(int argc, char *argv[])$/;"	f
main	examples/mysql_log/mysql_log.cpp	/^int main(int argc, char *argv[])$/;"	f
main	examples/subscribe_simple/callback.cpp	/^int main(int argc, char *argv[])$/;"	f
main	examples/subscribe_simple/multiple.cpp	/^int main(int argc, char *argv[])$/;"	f
main	examples/subscribe_simple/single.cpp	/^int main(int argc, char *argv[])$/;"	f
main	examples/temperature_conversion/main.cpp	/^int main(int argc, char *argv[])$/;"	f
main	src/db_dump/db_dump.cpp	/^int main(int argc, char *argv[])$/;"	f
main	src/mosquitto.cpp	/^int main(int argc, char *argv[])$/;"	f
main	src/mosquitto_passwd.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/broker/c/08-tls-psk-bridge.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/broker/c/08-tls-psk-pub.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/fake_user.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/01-con-discon-success.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/01-keepalive-pingreq.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/01-no-clean-session.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/01-unpwd-set.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/01-will-set.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/01-will-unpwd-set.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/02-subscribe-qos0.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/02-subscribe-qos1.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/02-subscribe-qos2.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/02-unsubscribe.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/03-publish-b2c-qos1.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/03-publish-b2c-qos2.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/03-publish-c2b-qos1-disconnect.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/03-publish-c2b-qos2-disconnect.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/03-publish-c2b-qos2.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/03-publish-qos0-no-payload.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/03-publish-qos0.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/04-retain-qos0.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/08-ssl-bad-cacert.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/08-ssl-connect-cert-auth-enc.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/08-ssl-connect-cert-auth.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/08-ssl-connect-no-auth.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/08-ssl-fake-cacert.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/09-util-topic-matching.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/09-util-topic-tokenise.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/c/09-util-utf8-validate.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/01-con-discon-success.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/01-keepalive-pingreq.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/01-no-clean-session.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/01-unpwd-set.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/01-will-set.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/01-will-unpwd-set.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/02-subscribe-qos0.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/02-subscribe-qos1.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/02-subscribe-qos2.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/02-unsubscribe.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/03-publish-b2c-qos1.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/03-publish-b2c-qos2.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/03-publish-c2b-qos1-disconnect.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/03-publish-c2b-qos2-disconnect.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/03-publish-c2b-qos2.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/03-publish-qos0-no-payload.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/03-publish-qos0.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/04-retain-qos0.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/08-ssl-bad-cacert.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/08-ssl-connect-cert-auth-enc.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/08-ssl-connect-cert-auth.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/08-ssl-connect-no-auth.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/08-ssl-fake-cacert.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/09-util-topic-matching.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/09-util-topic-tokenise.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/lib/cpp/09-util-utf8-validate.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/msgsps_pub.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/msgsps_sub.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/packet-gen.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/qos.cpp	/^int main(int argc, char *argv[])$/;"	f
malloc_usable_size	lib/memory_mosq.cpp	27;"	d	file:
mandir	config.mk	/^mandir?=${prefix}\/share\/man$/;"	m
max_connections	src/mosquitto_broker_internal.h	/^	int max_connections;$/;"	m	struct:mosquitto__listener
max_inflight	client/client_shared.h	/^	unsigned int max_inflight;$/;"	m	struct:mosq_config
max_inflight	src/database.cpp	/^static int max_inflight = 20;$/;"	v	file:
max_inflight_bytes	src/conf.cpp	/^	unsigned long max_inflight_bytes;$/;"	m	struct:config_recurse	file:
max_inflight_bytes	src/database.cpp	/^static unsigned long max_inflight_bytes = 0;$/;"	v	file:
max_inflight_messages	lib/mosquitto_internal.h	/^	int max_inflight_messages;$/;"	m	struct:mosquitto
max_inflight_messages	src/conf.cpp	/^	int max_inflight_messages;$/;"	m	struct:config_recurse	file:
max_inflight_messages_set	lib/cpp/mosquittopp.cpp	/^int mosquittopp::max_inflight_messages_set(unsigned int max_inflight_messages)$/;"	f	class:mosqpp::mosquittopp
max_memcount	lib/memory_mosq.cpp	/^static unsigned long max_memcount = 0;$/;"	v	file:
max_msg_count	lib/helpers.cpp	/^	int max_msg_count;$/;"	m	struct:userdata__simple	file:
max_queued	src/database.cpp	/^static int max_queued = 100;$/;"	v	file:
max_queued_bytes	src/conf.cpp	/^	unsigned long max_queued_bytes;$/;"	m	struct:config_recurse	file:
max_queued_bytes	src/database.cpp	/^static unsigned long max_queued_bytes = 0;$/;"	v	file:
max_queued_messages	src/conf.cpp	/^	int max_queued_messages;$/;"	m	struct:config_recurse	file:
max_running	test/broker/ptest.py	/^max_running = 10$/;"	v
max_running	test/lib/ptest.py	/^max_running = 10$/;"	v
mem_limit	lib/memory_mosq.cpp	/^static size_t mem_limit = 0;$/;"	v	file:
memcount	lib/memory_mosq.cpp	/^static unsigned long memcount = 0;$/;"	v	file:
memory__set_limit	lib/memory_mosq.cpp	/^void memory__set_limit(size_t lim)$/;"	f
message	client/client_shared.h	/^	char *message; \/* pub *\/$/;"	m	struct:mosq_config
message	client/pub_client.cpp	/^static char *message = NULL;$/;"	v	file:
message__cleanup	lib/messages_mosq.cpp	/^void message__cleanup(struct mosquitto_message_all **message)$/;"	f
message__cleanup_all	lib/messages_mosq.cpp	/^void message__cleanup_all(struct mosquitto *mosq)$/;"	f
message__delete	lib/messages_mosq.cpp	/^int message__delete(struct mosquitto *mosq, uint16_t mid, enum mosquitto_msg_direction dir)$/;"	f
message__out_update	lib/messages_mosq.cpp	/^int message__out_update(struct mosquitto *mosq, uint16_t mid, enum mosquitto_msg_state state)$/;"	f
message__queue	lib/messages_mosq.cpp	/^int message__queue(struct mosquitto *mosq, struct mosquitto_message_all *message, enum mosquitto_msg_direction dir)$/;"	f
message__reconnect_reset	lib/messages_mosq.cpp	/^void message__reconnect_reset(struct mosquitto *mosq)$/;"	f
message__remove	lib/messages_mosq.cpp	/^int message__remove(struct mosquitto *mosq, uint16_t mid, enum mosquitto_msg_direction dir, struct mosquitto_message_all **message)$/;"	f
message__retry_check	lib/messages_mosq.cpp	/^void message__retry_check(struct mosquitto *mosq)$/;"	f
message__retry_check_actual	lib/messages_mosq.cpp	/^void message__retry_check_actual(struct mosquitto *mosq, struct mosquitto_message_all *messages, pthread_mutex_t *mutex)$/;"	f
message_callback	examples/mysql_log/mysql_log.cpp	/^void message_callback(struct mosquitto *mosq, void *obj, const struct mosquitto_message *message)$/;"	f
message_count	lib/helpers.cpp	/^	int message_count;$/;"	m	struct:userdata__simple	file:
message_count	test/msgsps_pub.cpp	/^static int message_count = 0;$/;"	v	file:
message_count	test/msgsps_sub.cpp	/^static int message_count = 0;$/;"	v	file:
message_retry_set	lib/cpp/mosquittopp.cpp	/^void mosquittopp::message_retry_set(unsigned int message_retry)$/;"	f	class:mosqpp::mosquittopp
message_size	src/db_dump/db_dump.cpp	/^	long message_size;$/;"	m	struct:client_chunk	file:
message_size_limit	src/mosquitto_broker_internal.h	/^	uint32_t message_size_limit;$/;"	m	struct:mosquitto__config
messages	lib/helpers.cpp	/^	struct mosquitto_message *messages;$/;"	m	struct:userdata__simple	typeref:struct:userdata__simple::mosquitto_message	file:
messages	src/db_dump/db_dump.cpp	/^	int messages;$/;"	m	struct:client_chunk	file:
messages_received	test/qos.cpp	/^struct msg_list *messages_received = NULL;$/;"	v	typeref:struct:msg_list
messages_sent	test/qos.cpp	/^struct msg_list *messages_sent = NULL;$/;"	v	typeref:struct:msg_list
mid	lib/mosquitto.h	/^	int mid;$/;"	m	struct:mosquitto_message
mid	lib/mosquitto_internal.h	/^	uint16_t mid;$/;"	m	struct:mosquitto__packet
mid	src/db_dump/db_dump.cpp	/^	uint16_t mid;$/;"	m	struct:db_client_msg	file:
mid	src/db_dump/db_dump.cpp	/^	uint16_t source_mid, mid;$/;"	m	struct:db_msg	file:
mid	src/mosquitto_broker_internal.h	/^	uint16_t mid;$/;"	m	struct:mosquitto_client_msg
mid	src/mosquitto_broker_internal.h	/^	uint16_t mid;$/;"	m	struct:mosquitto_msg_store
mid	test/broker/02-subhier-crash.py	/^mid = 1$/;"	v
mid	test/broker/02-subhier-crash.py	/^mid = 2$/;"	v
mid	test/broker/02-subhier-crash.py	/^mid = 3$/;"	v
mid	test/broker/02-subpub-qos0.py	/^mid = 53$/;"	v
mid	test/broker/02-subpub-qos1.py	/^mid = 1$/;"	v
mid	test/broker/02-subpub-qos1.py	/^mid = 300$/;"	v
mid	test/broker/02-subpub-qos1.py	/^mid = 530$/;"	v
mid	test/broker/02-subpub-qos2.py	/^mid = 1$/;"	v
mid	test/broker/02-subpub-qos2.py	/^mid = 301$/;"	v
mid	test/broker/02-subpub-qos2.py	/^mid = 530$/;"	v
mid	test/broker/02-subscribe-invalid-utf8.py	/^mid = 53$/;"	v
mid	test/broker/02-subscribe-persistence-flipflop.py	/^mid=1$/;"	v
mid	test/broker/02-subscribe-qos0.py	/^mid = 53$/;"	v
mid	test/broker/02-subscribe-qos1.py	/^mid = 79$/;"	v
mid	test/broker/02-subscribe-qos2.py	/^mid = 3$/;"	v
mid	test/broker/02-unsubscribe-invalid-no-topic.py	/^mid = 3$/;"	v
mid	test/broker/02-unsubscribe-qos0.py	/^mid = 53$/;"	v
mid	test/broker/02-unsubscribe-qos1.py	/^mid = 79$/;"	v
mid	test/broker/02-unsubscribe-qos2.py	/^mid = 3$/;"	v
mid	test/broker/03-publish-b2c-disconnect-qos1-helper.py	/^mid = 128$/;"	v
mid	test/broker/03-publish-b2c-disconnect-qos1.py	/^mid = 1$/;"	v
mid	test/broker/03-publish-b2c-disconnect-qos1.py	/^mid = 3265$/;"	v
mid	test/broker/03-publish-b2c-disconnect-qos1.py	/^mid = 3266$/;"	v
mid	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^mid = 312$/;"	v
mid	test/broker/03-publish-b2c-disconnect-qos2.py	/^mid = 1$/;"	v
mid	test/broker/03-publish-b2c-disconnect-qos2.py	/^mid = 3265$/;"	v
mid	test/broker/03-publish-b2c-disconnect-qos2.py	/^mid = 3266$/;"	v
mid	test/broker/03-publish-b2c-timeout-qos1-helper.py	/^mid = 128$/;"	v
mid	test/broker/03-publish-b2c-timeout-qos1.py	/^mid = 1$/;"	v
mid	test/broker/03-publish-b2c-timeout-qos1.py	/^mid = 3265$/;"	v
mid	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^mid = 312$/;"	v
mid	test/broker/03-publish-b2c-timeout-qos2.py	/^mid = 1$/;"	v
mid	test/broker/03-publish-b2c-timeout-qos2.py	/^mid = 3265$/;"	v
mid	test/broker/03-publish-c2b-disconnect-qos2.py	/^mid = 1$/;"	v
mid	test/broker/03-publish-c2b-disconnect-qos2.py	/^mid = 3265$/;"	v
mid	test/broker/03-publish-c2b-timeout-qos2.py	/^mid = 1926$/;"	v
mid	test/broker/03-publish-dollar.py	/^mid = 19$/;"	v
mid	test/broker/03-publish-invalid-utf8.py	/^mid = 53$/;"	v
mid	test/broker/03-publish-qos1.py	/^mid = 19$/;"	v
mid	test/broker/03-publish-qos2.py	/^mid = 312$/;"	v
mid	test/broker/04-retain-qos0-fresh.py	/^mid = 16$/;"	v
mid	test/broker/04-retain-qos0-repeated.py	/^mid = 16$/;"	v
mid	test/broker/04-retain-qos0.py	/^mid = 16$/;"	v
mid	test/broker/04-retain-qos1-qos0.py	/^mid = 18$/;"	v
mid	test/broker/04-retain-qos1-qos0.py	/^mid = 6$/;"	v
mid	test/broker/04-retain-upgrade-outgoing-qos.py	/^mid = 16$/;"	v
mid	test/broker/05-clean-session-qos1-helper.py	/^mid = 128$/;"	v
mid	test/broker/05-clean-session-qos1.py	/^mid = 1$/;"	v
mid	test/broker/05-clean-session-qos1.py	/^mid = 109$/;"	v
mid	test/broker/06-bridge-b2br-disconnect-qos1.py	/^mid = 1$/;"	v
mid	test/broker/06-bridge-b2br-disconnect-qos1.py	/^mid = 2$/;"	v
mid	test/broker/06-bridge-b2br-disconnect-qos1.py	/^mid = 20$/;"	v
mid	test/broker/06-bridge-b2br-disconnect-qos1.py	/^mid = 3$/;"	v
mid	test/broker/06-bridge-b2br-disconnect-qos2.py	/^mid = 1$/;"	v
mid	test/broker/06-bridge-b2br-disconnect-qos2.py	/^mid = 2$/;"	v
mid	test/broker/06-bridge-b2br-disconnect-qos2.py	/^mid = 3$/;"	v
mid	test/broker/06-bridge-b2br-disconnect-qos2.py	/^mid = 5$/;"	v
mid	test/broker/06-bridge-br2b-disconnect-qos1-helper.py	/^mid = 128$/;"	v
mid	test/broker/06-bridge-br2b-disconnect-qos1.py	/^mid = 1$/;"	v
mid	test/broker/06-bridge-br2b-disconnect-qos1.py	/^mid = 2$/;"	v
mid	test/broker/06-bridge-br2b-disconnect-qos1.py	/^mid = 3$/;"	v
mid	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^mid = 312$/;"	v
mid	test/broker/06-bridge-br2b-disconnect-qos2.py	/^mid = 1$/;"	v
mid	test/broker/06-bridge-br2b-disconnect-qos2.py	/^mid = 2$/;"	v
mid	test/broker/06-bridge-br2b-disconnect-qos2.py	/^mid = 3$/;"	v
mid	test/broker/06-bridge-br2b-disconnect-qos2.py	/^mid = 4$/;"	v
mid	test/broker/06-bridge-fail-persist-resend-qos1.py	/^mid = 180$/;"	v
mid	test/broker/06-bridge-fail-persist-resend-qos2.py	/^mid = 180$/;"	v
mid	test/broker/06-bridge-reconnect-local-out.py	/^mid = 180$/;"	v
mid	test/broker/07-will-invalid-utf8.py	/^mid = 53$/;"	v
mid	test/broker/07-will-null.py	/^mid = 53$/;"	v
mid	test/broker/07-will-qos0.py	/^mid = 53$/;"	v
mid	test/broker/08-ssl-bridge.py	/^mid = 1$/;"	v
mid	test/broker/08-tls-psk-bridge.py	/^mid = 1$/;"	v
mid	test/broker/08-tls-psk-pub.py	/^mid = 1$/;"	v
mid	test/broker/09-plugin-auth-acl-sub.py	/^mid = 53$/;"	v
mid	test/broker/09-plugin-auth-context-params.py	/^mid = 1$/;"	v
mid	test/broker/09-plugin-auth-context-params.py	/^mid = 2$/;"	v
mid	test/broker/09-plugin-auth-context-params.py	/^mid = 3$/;"	v
mid	test/broker/09-plugin-auth-msg-params.py	/^mid = 1$/;"	v
mid	test/broker/09-plugin-auth-msg-params.py	/^mid = 2$/;"	v
mid	test/broker/09-plugin-auth-msg-params.py	/^mid = 3$/;"	v
mid	test/broker/10-listener-mount-point.py	/^mid = 1$/;"	v
mid	test/broker/11-persistent-subscription.py	/^mid = 1$/;"	v
mid	test/broker/11-persistent-subscription.py	/^mid = 300$/;"	v
mid	test/broker/11-persistent-subscription.py	/^mid = 530$/;"	v
mid	test/lib/02-subscribe-qos0.py	/^mid = 1$/;"	v
mid	test/lib/02-subscribe-qos1.py	/^mid = 1$/;"	v
mid	test/lib/02-subscribe-qos2.py	/^mid = 1$/;"	v
mid	test/lib/02-unsubscribe.py	/^mid = 1$/;"	v
mid	test/lib/03-publish-b2c-qos1.py	/^mid = 123$/;"	v
mid	test/lib/03-publish-b2c-qos2.py	/^mid = 13423$/;"	v
mid	test/lib/03-publish-c2b-qos1-disconnect.py	/^mid = 1$/;"	v
mid	test/lib/03-publish-c2b-qos1-timeout.py	/^mid = 1$/;"	v
mid	test/lib/03-publish-c2b-qos2-disconnect.py	/^mid = 1$/;"	v
mid	test/lib/03-publish-c2b-qos2-timeout.py	/^mid = 1$/;"	v
mid	test/lib/03-publish-c2b-qos2.py	/^mid = 1$/;"	v
mid	test/lib/04-retain-qos0.py	/^mid = 16$/;"	v
mid	test/qos.cpp	/^	uint16_t mid;$/;"	m	struct:sub	file:
mid_fail	test/broker/09-plugin-auth-acl-sub.py	/^mid_fail = 54$/;"	v
mid_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t mid_mutex;$/;"	m	struct:mosquitto
mid_sent	client/pub_client.cpp	/^static int mid_sent = 0;$/;"	v	file:
mid_sub	test/broker/04-retain-qos0-clear.py	/^mid_sub = 592$/;"	v
mid_unknown	test/broker/06-bridge-fail-persist-resend-qos1.py	/^mid_unknown = 2000$/;"	v
mid_unknown	test/broker/06-bridge-fail-persist-resend-qos2.py	/^mid_unknown = 2000$/;"	v
mid_unsub	test/broker/04-retain-qos0-clear.py	/^mid_unsub = 593$/;"	v
minport	test/broker/ptest.py	/^minport = 1888$/;"	v
minport	test/lib/ptest.py	/^minport = 1888$/;"	v
mode	client/pub_client.cpp	/^static int mode = MSGMODE_NONE;$/;"	v	file:
mosq	client/sub_client.cpp	/^struct mosquitto *mosq = NULL;$/;"	v	typeref:struct:mosquitto
mosq	misc/currentcost/cc128_read.py	/^mosq = mosquitto.Mosquitto()$/;"	v
mosq	src/mosquitto_broker_internal.h	/^	struct mosquitto *mosq;$/;"	m	struct:libws_mqtt_data	typeref:struct:libws_mqtt_data::mosquitto
mosq_config	client/client_shared.h	/^struct mosq_config {$/;"	s
mosq_cs_connect_async	lib/mosquitto_internal.h	/^	mosq_cs_connect_async = 3,$/;"	e	enum:mosquitto_client_state
mosq_cs_connect_pending	lib/mosquitto_internal.h	/^	mosq_cs_connect_pending = 4,$/;"	e	enum:mosquitto_client_state
mosq_cs_connect_srv	lib/mosquitto_internal.h	/^	mosq_cs_connect_srv = 5,$/;"	e	enum:mosquitto_client_state
mosq_cs_connected	lib/mosquitto_internal.h	/^	mosq_cs_connected = 1,$/;"	e	enum:mosquitto_client_state
mosq_cs_connecting	lib/mosquitto_internal.h	/^	mosq_cs_connecting = 16,$/;"	e	enum:mosquitto_client_state
mosq_cs_disconnect_ws	lib/mosquitto_internal.h	/^	mosq_cs_disconnect_ws = 6,$/;"	e	enum:mosquitto_client_state
mosq_cs_disconnected	lib/mosquitto_internal.h	/^	mosq_cs_disconnected = 7,$/;"	e	enum:mosquitto_client_state
mosq_cs_disconnecting	lib/mosquitto_internal.h	/^	mosq_cs_disconnecting = 2,$/;"	e	enum:mosquitto_client_state
mosq_cs_duplicate	lib/mosquitto_internal.h	/^	mosq_cs_duplicate = 17, \/* client that has been taken over by another with the same id *\/$/;"	e	enum:mosquitto_client_state
mosq_cs_expiring	lib/mosquitto_internal.h	/^	mosq_cs_expiring = 15,$/;"	e	enum:mosquitto_client_state
mosq_cs_new	lib/mosquitto_internal.h	/^	mosq_cs_new = 0,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_auth_ok	lib/mosquitto_internal.h	/^	mosq_cs_socks5_auth_ok = 12,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_new	lib/mosquitto_internal.h	/^	mosq_cs_socks5_new = 8,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_reply	lib/mosquitto_internal.h	/^	mosq_cs_socks5_reply = 11,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_request	lib/mosquitto_internal.h	/^	mosq_cs_socks5_request = 10,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_send_userpass	lib/mosquitto_internal.h	/^	mosq_cs_socks5_send_userpass = 14,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_start	lib/mosquitto_internal.h	/^	mosq_cs_socks5_start = 9,$/;"	e	enum:mosquitto_client_state
mosq_cs_socks5_userpass_reply	lib/mosquitto_internal.h	/^	mosq_cs_socks5_userpass_reply = 13,$/;"	e	enum:mosquitto_client_state
mosq_err_t	lib/mosquitto.h	/^enum mosq_err_t {$/;"	g
mosq_err_t	test/broker/c/auth_plugin_v2.cpp	/^enum mosq_err_t {$/;"	g	file:
mosq_md_in	lib/mosquitto_internal.h	/^	mosq_md_in = 0,$/;"	e	enum:mosquitto_msg_direction
mosq_md_out	lib/mosquitto_internal.h	/^	mosq_md_out = 1$/;"	e	enum:mosquitto_msg_direction
mosq_ms_invalid	lib/mosquitto_internal.h	/^	mosq_ms_invalid = 0,$/;"	e	enum:mosquitto_msg_state
mosq_ms_publish_qos0	lib/mosquitto_internal.h	/^	mosq_ms_publish_qos0 = 1,$/;"	e	enum:mosquitto_msg_state
mosq_ms_publish_qos1	lib/mosquitto_internal.h	/^	mosq_ms_publish_qos1 = 2,$/;"	e	enum:mosquitto_msg_state
mosq_ms_publish_qos2	lib/mosquitto_internal.h	/^	mosq_ms_publish_qos2 = 4,$/;"	e	enum:mosquitto_msg_state
mosq_ms_queued	lib/mosquitto_internal.h	/^	mosq_ms_queued = 11$/;"	e	enum:mosquitto_msg_state
mosq_ms_resend_pubcomp	lib/mosquitto_internal.h	/^	mosq_ms_resend_pubcomp = 8,$/;"	e	enum:mosquitto_msg_state
mosq_ms_resend_pubrel	lib/mosquitto_internal.h	/^	mosq_ms_resend_pubrel = 6,$/;"	e	enum:mosquitto_msg_state
mosq_ms_send_pubrec	lib/mosquitto_internal.h	/^	mosq_ms_send_pubrec = 10,$/;"	e	enum:mosquitto_msg_state
mosq_ms_wait_for_puback	lib/mosquitto_internal.h	/^	mosq_ms_wait_for_puback = 3,$/;"	e	enum:mosquitto_msg_state
mosq_ms_wait_for_pubcomp	lib/mosquitto_internal.h	/^	mosq_ms_wait_for_pubcomp = 9,$/;"	e	enum:mosquitto_msg_state
mosq_ms_wait_for_pubrec	lib/mosquitto_internal.h	/^	mosq_ms_wait_for_pubrec = 5,$/;"	e	enum:mosquitto_msg_state
mosq_ms_wait_for_pubrel	lib/mosquitto_internal.h	/^	mosq_ms_wait_for_pubrel = 7,$/;"	e	enum:mosquitto_msg_state
mosq_opt_t	lib/mosquitto.h	/^enum mosq_opt_t {$/;"	g
mosq_p_invalid	lib/mosquitto_internal.h	/^	mosq_p_invalid = 0,$/;"	e	enum:mosquitto__protocol
mosq_p_mqtt31	lib/mosquitto_internal.h	/^	mosq_p_mqtt31 = 1,$/;"	e	enum:mosquitto__protocol
mosq_p_mqtt311	lib/mosquitto_internal.h	/^	mosq_p_mqtt311 = 2,$/;"	e	enum:mosquitto__protocol
mosq_p_mqtts	lib/mosquitto_internal.h	/^	mosq_p_mqtts = 3$/;"	e	enum:mosquitto__protocol
mosq_sock_t	lib/mosquitto_internal.h	/^typedef SOCKET mosq_sock_t;$/;"	t
mosq_sock_t	lib/mosquitto_internal.h	/^typedef int mosq_sock_t;$/;"	t
mosq_t_invalid	lib/mosquitto_internal.h	/^	mosq_t_invalid = 0,$/;"	e	enum:mosquitto__transport
mosq_t_sctp	lib/mosquitto_internal.h	/^	mosq_t_sctp = 3$/;"	e	enum:mosquitto__transport
mosq_t_tcp	lib/mosquitto_internal.h	/^	mosq_t_tcp = 1,$/;"	e	enum:mosquitto__transport
mosq_t_ws	lib/mosquitto_internal.h	/^	mosq_t_ws = 2,$/;"	e	enum:mosquitto__transport
mosq_ts_external	lib/mosquitto_internal.h	/^	mosq_ts_external	\/* Threads started by external code *\/$/;"	e	enum:mosquitto__threaded_state
mosq_ts_none	lib/mosquitto_internal.h	/^	mosq_ts_none,		\/* No threads in use *\/$/;"	e	enum:mosquitto__threaded_state
mosq_ts_self	lib/mosquitto_internal.h	/^	mosq_ts_self,		\/* Threads started by libmosquitto *\/$/;"	e	enum:mosquitto__threaded_state
mosq_websockets_init	src/websockets.cpp	/^struct libwebsocket_context *mosq_websockets_init(struct mosquitto__listener *listener, int log_level)$/;"	f
mosq_ws_protocols	src/websockets.cpp	/^enum mosq_ws_protocols {$/;"	g	file:
mosqpp	lib/cpp/mosquittopp.cpp	/^namespace mosqpp {$/;"	n	file:
mosqpp	lib/cpp/mosquittopp.h	/^namespace mosqpp {$/;"	n
mosqpp_EXPORT	lib/cpp/mosquittopp.h	22;"	d
mosqpp_EXPORT	lib/cpp/mosquittopp.h	24;"	d
mosqpp_EXPORT	lib/cpp/mosquittopp.h	27;"	d
mosquitto	lib/mosquitto_internal.h	/^struct mosquitto {$/;"	s
mosquitto__acl	src/mosquitto_broker_internal.h	/^struct mosquitto__acl{$/;"	s
mosquitto__acl_user	src/mosquitto_broker_internal.h	/^struct mosquitto__acl_user{$/;"	s
mosquitto__auth_plugin	src/mosquitto_broker_internal.h	/^struct mosquitto__auth_plugin{$/;"	s
mosquitto__auth_plugin_config	src/mosquitto_broker_internal.h	/^struct mosquitto__auth_plugin_config$/;"	s
mosquitto__bridge	src/mosquitto_broker_internal.h	/^struct mosquitto__bridge{$/;"	s
mosquitto__bridge_direction	src/mosquitto_broker_internal.h	/^enum mosquitto__bridge_direction{$/;"	g
mosquitto__bridge_topic	src/mosquitto_broker_internal.h	/^struct mosquitto__bridge_topic{$/;"	s
mosquitto__calloc	lib/memory_mosq.cpp	/^void *mosquitto__calloc(size_t nmemb, size_t size)$/;"	f
mosquitto__check_keepalive	lib/util_mosq.cpp	/^void mosquitto__check_keepalive(struct mosquitto_db *db, struct mosquitto *mosq)$/;"	f
mosquitto__cmp_hostname_wildcard	lib/tls_mosq.cpp	/^int mosquitto__cmp_hostname_wildcard(char *certname, const char *hostname)$/;"	f
mosquitto__config	src/mosquitto_broker_internal.h	/^struct mosquitto__config {$/;"	s
mosquitto__connect_init	lib/connect.cpp	/^static int mosquitto__connect_init(struct mosquitto *mosq, const char *host, int port, int keepalive, const char *bind_address)$/;"	f	file:
mosquitto__daemonise	src/mosquitto.cpp	/^void mosquitto__daemonise(void)$/;"	f
mosquitto__destroy	lib/mosquitto.cpp	/^void mosquitto__destroy(struct mosquitto *mosq)$/;"	f
mosquitto__fopen	lib/util_mosq.cpp	/^FILE *mosquitto__fopen(const char *path, const char *mode, bool restrict_read)$/;"	f
mosquitto__free	lib/memory_mosq.cpp	/^void mosquitto__free(void *mem)$/;"	f
mosquitto__free	src/db_dump/db_dump.cpp	33;"	d	file:
mosquitto__get_db	src/mosquitto.cpp	/^struct mosquitto_db *mosquitto__get_db(void)$/;"	f
mosquitto__hex2bin	lib/util_mosq.cpp	/^int mosquitto__hex2bin(const char *hex, unsigned char *bin, int bin_max_len)$/;"	f
mosquitto__listener	src/mosquitto_broker_internal.h	/^struct mosquitto__listener {$/;"	s
mosquitto__loop_rc_handle	lib/loop.cpp	/^static int mosquitto__loop_rc_handle(struct mosquitto *mosq, int rc)$/;"	f	file:
mosquitto__malloc	lib/memory_mosq.cpp	/^void *mosquitto__malloc(size_t size)$/;"	f
mosquitto__malloc	src/db_dump/db_dump.cpp	32;"	d	file:
mosquitto__max_memory_used	lib/memory_mosq.cpp	/^unsigned long mosquitto__max_memory_used(void)$/;"	f
mosquitto__memcmp_const	src/security_default.cpp	/^static int mosquitto__memcmp_const(const void *a, const void *b, size_t len)$/;"	f	file:
mosquitto__memory_used	lib/memory_mosq.cpp	/^unsigned long mosquitto__memory_used(void)$/;"	f
mosquitto__mid_generate	lib/util_mosq.cpp	/^uint16_t mosquitto__mid_generate(struct mosquitto *mosq)$/;"	f
mosquitto__packet	lib/mosquitto_internal.h	/^struct mosquitto__packet{$/;"	s
mosquitto__parse_socks_url	client/client_shared.cpp	/^static int mosquitto__parse_socks_url(struct mosq_config *cfg, char *url)$/;"	f	file:
mosquitto__payload_uhpa	src/mosquitto_broker_internal.h	/^} mosquitto__payload_uhpa;$/;"	t	typeref:union:__anon1
mosquitto__protocol	lib/mosquitto_internal.h	/^enum mosquitto__protocol {$/;"	g
mosquitto__realloc	lib/memory_mosq.cpp	/^void *mosquitto__realloc(void *ptr, size_t size)$/;"	f
mosquitto__reconnect	lib/connect.cpp	/^static int mosquitto__reconnect(struct mosquitto *mosq, bool blocking)$/;"	f	file:
mosquitto__security_options	src/mosquitto_broker_internal.h	/^struct mosquitto__security_options {$/;"	s
mosquitto__server_certificate_verify	lib/tls_mosq.cpp	/^int mosquitto__server_certificate_verify(int preverify_ok, X509_STORE_CTX *ctx)$/;"	f
mosquitto__strdup	lib/memory_mosq.cpp	/^char *mosquitto__strdup(const char *s)$/;"	f
mosquitto__subhier	src/mosquitto_broker_internal.h	/^struct mosquitto__subhier {$/;"	s
mosquitto__subleaf	src/mosquitto_broker_internal.h	/^struct mosquitto__subleaf {$/;"	s
mosquitto__thread_main	lib/thread_mosq.cpp	/^void *mosquitto__thread_main(void *obj)$/;"	f
mosquitto__threaded_state	lib/mosquitto_internal.h	/^enum mosquitto__threaded_state {$/;"	g
mosquitto__tls_server_ctx	src/net.cpp	/^static int mosquitto__tls_server_ctx(struct mosquitto__listener *listener)$/;"	f	file:
mosquitto__topic_element_uhpa	src/mosquitto_broker_internal.h	/^} mosquitto__topic_element_uhpa;$/;"	t	typeref:union:__anon2
mosquitto__transport	lib/mosquitto_internal.h	/^enum mosquitto__transport {$/;"	g
mosquitto__unpwd	src/mosquitto_broker_internal.h	/^struct mosquitto__unpwd{$/;"	s
mosquitto__urldecode	client/client_shared.cpp	/^static int mosquitto__urldecode(char *str)$/;"	f	file:
mosquitto__verify_certificate_hostname	lib/tls_mosq.cpp	/^int mosquitto__verify_certificate_hostname(X509 *cert, const char *hostname)$/;"	f
mosquitto_acl_check	src/security.cpp	/^int mosquitto_acl_check(struct mosquitto_db *db, struct mosquitto *context, const char *topic, long payloadlen, void* payload, int qos, bool retain, int access)$/;"	f
mosquitto_acl_check_default	src/security_default.cpp	/^int mosquitto_acl_check_default(struct mosquitto_db *db, struct mosquitto *context, const char *topic, int access)$/;"	f
mosquitto_acl_msg	src/mosquitto_plugin.h	/^struct mosquitto_acl_msg {$/;"	s
mosquitto_auth_acl_check	src/plugin_defer.cpp	/^int mosquitto_auth_acl_check(void *user_data, int access, const struct mosquitto *client, struct mosquitto_acl_msg *msg)$/;"	f
mosquitto_auth_acl_check	test/broker/c/auth_plugin.cpp	/^int mosquitto_auth_acl_check(void *user_data, int access, const struct mosquitto *client, const struct mosquitto_acl_msg *msg)$/;"	f
mosquitto_auth_acl_check	test/broker/c/auth_plugin_acl.cpp	/^int mosquitto_auth_acl_check(void *user_data, int access, const struct mosquitto *client, const struct mosquitto_acl_msg *msg)$/;"	f
mosquitto_auth_acl_check	test/broker/c/auth_plugin_context_params.cpp	/^int mosquitto_auth_acl_check(void *user_data, int access, const struct mosquitto *client, const struct mosquitto_acl_msg *msg)$/;"	f
mosquitto_auth_acl_check	test/broker/c/auth_plugin_msg_params.cpp	/^int mosquitto_auth_acl_check(void *user_data, int access, const struct mosquitto *client, const struct mosquitto_acl_msg *msg)$/;"	f
mosquitto_auth_acl_check	test/broker/c/auth_plugin_pwd.cpp	/^int mosquitto_auth_acl_check(void *user_data, int access, const struct mosquitto *client, const struct mosquitto_acl_msg *msg)$/;"	f
mosquitto_auth_acl_check	test/broker/c/auth_plugin_v2.cpp	/^int mosquitto_auth_acl_check(void *user_data, const char *clientid, const char *username, const char *topic, int access)$/;"	f
mosquitto_auth_opt	src/mosquitto_plugin.h	/^struct mosquitto_auth_opt {$/;"	s
mosquitto_auth_opt	test/broker/c/mosquitto_plugin_v2.h	/^struct mosquitto_auth_opt {$/;"	s
mosquitto_auth_plugin_cleanup	src/plugin_defer.cpp	/^int mosquitto_auth_plugin_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_cleanup	test/broker/c/auth_plugin.cpp	/^int mosquitto_auth_plugin_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_cleanup	test/broker/c/auth_plugin_acl.cpp	/^int mosquitto_auth_plugin_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_cleanup	test/broker/c/auth_plugin_context_params.cpp	/^int mosquitto_auth_plugin_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_cleanup	test/broker/c/auth_plugin_msg_params.cpp	/^int mosquitto_auth_plugin_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_cleanup	test/broker/c/auth_plugin_pwd.cpp	/^int mosquitto_auth_plugin_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_cleanup	test/broker/c/auth_plugin_v2.cpp	/^int mosquitto_auth_plugin_cleanup(void *user_data, struct mosquitto_auth_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_init	src/plugin_defer.cpp	/^int mosquitto_auth_plugin_init(void **user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_init	test/broker/c/auth_plugin.cpp	/^int mosquitto_auth_plugin_init(void **user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_init	test/broker/c/auth_plugin_acl.cpp	/^int mosquitto_auth_plugin_init(void **user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_init	test/broker/c/auth_plugin_context_params.cpp	/^int mosquitto_auth_plugin_init(void **user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_init	test/broker/c/auth_plugin_msg_params.cpp	/^int mosquitto_auth_plugin_init(void **user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_init	test/broker/c/auth_plugin_pwd.cpp	/^int mosquitto_auth_plugin_init(void **user_data, struct mosquitto_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_init	test/broker/c/auth_plugin_v2.cpp	/^int mosquitto_auth_plugin_init(void **user_data, struct mosquitto_auth_opt *auth_opts, int auth_opt_count)$/;"	f
mosquitto_auth_plugin_version	src/plugin_defer.cpp	/^int mosquitto_auth_plugin_version(void)$/;"	f
mosquitto_auth_plugin_version	test/broker/c/auth_plugin.cpp	/^int mosquitto_auth_plugin_version(void)$/;"	f
mosquitto_auth_plugin_version	test/broker/c/auth_plugin_acl.cpp	/^int mosquitto_auth_plugin_version(void)$/;"	f
mosquitto_auth_plugin_version	test/broker/c/auth_plugin_context_params.cpp	/^int mosquitto_auth_plugin_version(void)$/;"	f
mosquitto_auth_plugin_version	test/broker/c/auth_plugin_msg_params.cpp	/^int mosquitto_auth_plugin_version(void)$/;"	f
mosquitto_auth_plugin_version	test/broker/c/auth_plugin_pwd.cpp	/^int mosquitto_auth_plugin_version(void)$/;"	f
mosquitto_auth_plugin_version	test/broker/c/auth_plugin_v2.cpp	/^int mosquitto_auth_plugin_version(void)$/;"	f
mosquitto_auth_psk_key_get	src/plugin_defer.cpp	/^int mosquitto_auth_psk_key_get(void *user_data, const struct mosquitto *client, const char *hint, const char *identity, char *key, int max_key_len)$/;"	f
mosquitto_auth_psk_key_get	test/broker/c/auth_plugin.cpp	/^int mosquitto_auth_psk_key_get(void *user_data, const struct mosquitto *client, const char *hint, const char *identity, char *key, int max_key_len)$/;"	f
mosquitto_auth_psk_key_get	test/broker/c/auth_plugin_acl.cpp	/^int mosquitto_auth_psk_key_get(void *user_data, const struct mosquitto *client, const char *hint, const char *identity, char *key, int max_key_len)$/;"	f
mosquitto_auth_psk_key_get	test/broker/c/auth_plugin_context_params.cpp	/^int mosquitto_auth_psk_key_get(void *user_data, const struct mosquitto *client, const char *hint, const char *identity, char *key, int max_key_len)$/;"	f
mosquitto_auth_psk_key_get	test/broker/c/auth_plugin_msg_params.cpp	/^int mosquitto_auth_psk_key_get(void *user_data, const struct mosquitto *client, const char *hint, const char *identity, char *key, int max_key_len)$/;"	f
mosquitto_auth_psk_key_get	test/broker/c/auth_plugin_pwd.cpp	/^int mosquitto_auth_psk_key_get(void *user_data, const struct mosquitto *client, const char *hint, const char *identity, char *key, int max_key_len)$/;"	f
mosquitto_auth_psk_key_get	test/broker/c/auth_plugin_v2.cpp	/^int mosquitto_auth_psk_key_get(void *user_data, const char *hint, const char *identity, char *key, int max_key_len)$/;"	f
mosquitto_auth_security_cleanup	src/plugin_defer.cpp	/^int mosquitto_auth_security_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_cleanup	test/broker/c/auth_plugin.cpp	/^int mosquitto_auth_security_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_cleanup	test/broker/c/auth_plugin_acl.cpp	/^int mosquitto_auth_security_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_cleanup	test/broker/c/auth_plugin_context_params.cpp	/^int mosquitto_auth_security_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_cleanup	test/broker/c/auth_plugin_msg_params.cpp	/^int mosquitto_auth_security_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_cleanup	test/broker/c/auth_plugin_pwd.cpp	/^int mosquitto_auth_security_cleanup(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_cleanup	test/broker/c/auth_plugin_v2.cpp	/^int mosquitto_auth_security_cleanup(void *user_data, struct mosquitto_auth_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_init	src/plugin_defer.cpp	/^int mosquitto_auth_security_init(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_init	test/broker/c/auth_plugin.cpp	/^int mosquitto_auth_security_init(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_init	test/broker/c/auth_plugin_acl.cpp	/^int mosquitto_auth_security_init(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_init	test/broker/c/auth_plugin_context_params.cpp	/^int mosquitto_auth_security_init(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_init	test/broker/c/auth_plugin_msg_params.cpp	/^int mosquitto_auth_security_init(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_init	test/broker/c/auth_plugin_pwd.cpp	/^int mosquitto_auth_security_init(void *user_data, struct mosquitto_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_security_init	test/broker/c/auth_plugin_v2.cpp	/^int mosquitto_auth_security_init(void *user_data, struct mosquitto_auth_opt *auth_opts, int auth_opt_count, bool reload)$/;"	f
mosquitto_auth_unpwd_check	src/plugin_defer.cpp	/^int mosquitto_auth_unpwd_check(void *user_data, const struct mosquitto *client, const char *username, const char *password)$/;"	f
mosquitto_auth_unpwd_check	test/broker/c/auth_plugin.cpp	/^int mosquitto_auth_unpwd_check(void *user_data, const struct mosquitto *client, const char *username, const char *password)$/;"	f
mosquitto_auth_unpwd_check	test/broker/c/auth_plugin_acl.cpp	/^int mosquitto_auth_unpwd_check(void *user_data, const struct mosquitto *client, const char *username, const char *password)$/;"	f
mosquitto_auth_unpwd_check	test/broker/c/auth_plugin_context_params.cpp	/^int mosquitto_auth_unpwd_check(void *user_data, const struct mosquitto *client, const char *username, const char *password)$/;"	f
mosquitto_auth_unpwd_check	test/broker/c/auth_plugin_msg_params.cpp	/^int mosquitto_auth_unpwd_check(void *user_data, const struct mosquitto *client, const char *username, const char *password)$/;"	f
mosquitto_auth_unpwd_check	test/broker/c/auth_plugin_pwd.cpp	/^int mosquitto_auth_unpwd_check(void *user_data, const struct mosquitto *client, const char *username, const char *password)$/;"	f
mosquitto_auth_unpwd_check	test/broker/c/auth_plugin_v2.cpp	/^int mosquitto_auth_unpwd_check(void *user_data, const char *username, const char *password)$/;"	f
mosquitto_bridge_start_type	src/mosquitto_broker_internal.h	/^enum mosquitto_bridge_start_type{$/;"	g
mosquitto_client_address	src/plugin.cpp	/^const char *mosquitto_client_address(const struct mosquitto *client)$/;"	f
mosquitto_client_certificate	src/plugin.cpp	/^void *mosquitto_client_certificate(const struct mosquitto *client)$/;"	f
mosquitto_client_clean_session	src/plugin.cpp	/^bool mosquitto_client_clean_session(const struct mosquitto *client)$/;"	f
mosquitto_client_id	src/plugin.cpp	/^const char *mosquitto_client_id(const struct mosquitto *client)$/;"	f
mosquitto_client_keepalive	src/plugin.cpp	/^int mosquitto_client_keepalive(const struct mosquitto *client)$/;"	f
mosquitto_client_msg	src/mosquitto_broker_internal.h	/^struct mosquitto_client_msg{$/;"	s
mosquitto_client_protocol	src/plugin.cpp	/^int mosquitto_client_protocol(const struct mosquitto *client)$/;"	f
mosquitto_client_state	lib/mosquitto_internal.h	/^enum mosquitto_client_state {$/;"	g
mosquitto_client_sub_count	src/plugin.cpp	/^int mosquitto_client_sub_count(const struct mosquitto *client)$/;"	f
mosquitto_client_username	src/plugin.cpp	/^const char *mosquitto_client_username(const struct mosquitto *context)$/;"	f
mosquitto_connack_string	lib/mosquitto.cpp	/^const char *mosquitto_connack_string(int connack_code)$/;"	f
mosquitto_connect	lib/connect.cpp	/^int mosquitto_connect(struct mosquitto *mosq, const char *host, int port, int keepalive)$/;"	f
mosquitto_connect_async	lib/connect.cpp	/^int mosquitto_connect_async(struct mosquitto *mosq, const char *host, int port, int keepalive)$/;"	f
mosquitto_connect_bind	lib/connect.cpp	/^int mosquitto_connect_bind(struct mosquitto *mosq, const char *host, int port, int keepalive, const char *bind_address)$/;"	f
mosquitto_connect_bind_async	lib/connect.cpp	/^int mosquitto_connect_bind_async(struct mosquitto *mosq, const char *host, int port, int keepalive, const char *bind_address)$/;"	f
mosquitto_connect_callback_set	lib/callbacks.cpp	/^void mosquitto_connect_callback_set(struct mosquitto *mosq, void (*on_connect)(struct mosquitto *, void *, int))$/;"	f
mosquitto_connect_srv	lib/srv_mosq.cpp	/^int mosquitto_connect_srv(struct mosquitto *mosq, const char *host, int keepalive, const char *bind_address)$/;"	f
mosquitto_connect_with_flags_callback_set	lib/callbacks.cpp	/^void mosquitto_connect_with_flags_callback_set(struct mosquitto *mosq, void (*on_connect)(struct mosquitto *, void *, int, int))$/;"	f
mosquitto_db	src/mosquitto_broker_internal.h	/^struct mosquitto_db{$/;"	s
mosquitto_destroy	lib/mosquitto.cpp	/^void mosquitto_destroy(struct mosquitto *mosq)$/;"	f
mosquitto_disconnect	lib/connect.cpp	/^int mosquitto_disconnect(struct mosquitto *mosq)$/;"	f
mosquitto_disconnect_callback_set	lib/callbacks.cpp	/^void mosquitto_disconnect_callback_set(struct mosquitto *mosq, void (*on_disconnect)(struct mosquitto *, void *, int))$/;"	f
mosquitto_lib_cleanup	lib/mosquitto.cpp	/^int mosquitto_lib_cleanup(void)$/;"	f
mosquitto_lib_init	lib/mosquitto.cpp	/^int mosquitto_lib_init(void)$/;"	f
mosquitto_lib_version	lib/mosquitto.cpp	/^int mosquitto_lib_version(int *major, int *minor, int *revision)$/;"	f
mosquitto_log_callback_set	lib/callbacks.cpp	/^void mosquitto_log_callback_set(struct mosquitto *mosq, void (*on_log)(struct mosquitto *, void *, int, const char *))$/;"	f
mosquitto_log_printf	src/logging.cpp	/^void mosquitto_log_printf(int level, const char *fmt, ...)$/;"	f
mosquitto_log_vprintf	src/logging.cpp	/^int mosquitto_log_vprintf(int level, const char *fmt, va_list va)$/;"	f
mosquitto_loop	lib/loop.cpp	/^int mosquitto_loop(struct mosquitto *mosq, int timeout, int max_packets)$/;"	f
mosquitto_loop_forever	lib/loop.cpp	/^int mosquitto_loop_forever(struct mosquitto *mosq, int timeout, int max_packets)$/;"	f
mosquitto_loop_misc	lib/loop.cpp	/^int mosquitto_loop_misc(struct mosquitto *mosq)$/;"	f
mosquitto_loop_read	lib/loop.cpp	/^int mosquitto_loop_read(struct mosquitto *mosq, int max_packets)$/;"	f
mosquitto_loop_start	lib/thread_mosq.cpp	/^int mosquitto_loop_start(struct mosquitto *mosq)$/;"	f
mosquitto_loop_stop	lib/thread_mosq.cpp	/^int mosquitto_loop_stop(struct mosquitto *mosq, bool force)$/;"	f
mosquitto_loop_write	lib/loop.cpp	/^int mosquitto_loop_write(struct mosquitto *mosq, int max_packets)$/;"	f
mosquitto_main_loop	src/loop.cpp	/^int mosquitto_main_loop(struct mosquitto_db *db, mosq_sock_t *listensock, int listensock_count, int listener_max)$/;"	f
mosquitto_max_inflight_messages_set	lib/messages_mosq.cpp	/^int mosquitto_max_inflight_messages_set(struct mosquitto *mosq, unsigned int max_inflight_messages)$/;"	f
mosquitto_message	lib/mosquitto.h	/^struct mosquitto_message{$/;"	s
mosquitto_message_all	lib/mosquitto_internal.h	/^struct mosquitto_message_all{$/;"	s
mosquitto_message_callback_set	lib/callbacks.cpp	/^void mosquitto_message_callback_set(struct mosquitto *mosq, void (*on_message)(struct mosquitto *, void *, const struct mosquitto_message *))$/;"	f
mosquitto_message_copy	lib/messages_mosq.cpp	/^int mosquitto_message_copy(struct mosquitto_message *dst, const struct mosquitto_message *src)$/;"	f
mosquitto_message_free	lib/messages_mosq.cpp	/^void mosquitto_message_free(struct mosquitto_message **message)$/;"	f
mosquitto_message_free_contents	lib/messages_mosq.cpp	/^void mosquitto_message_free_contents(struct mosquitto_message *message)$/;"	f
mosquitto_message_retry_set	lib/messages_mosq.cpp	/^void mosquitto_message_retry_set(struct mosquitto *mosq, unsigned int message_retry)$/;"	f
mosquitto_msg_direction	lib/mosquitto_internal.h	/^enum mosquitto_msg_direction {$/;"	g
mosquitto_msg_state	lib/mosquitto_internal.h	/^enum mosquitto_msg_state {$/;"	g
mosquitto_msg_store	src/mosquitto_broker_internal.h	/^struct mosquitto_msg_store{$/;"	s
mosquitto_msg_store_load	src/mosquitto_broker_internal.h	/^struct mosquitto_msg_store_load{$/;"	s
mosquitto_new	lib/mosquitto.cpp	/^struct mosquitto *mosquitto_new(const char *id, bool clean_session, void *userdata)$/;"	f
mosquitto_opt	src/mosquitto_plugin.h	/^struct mosquitto_opt {$/;"	s
mosquitto_opts_set	lib/options.cpp	/^int mosquitto_opts_set(struct mosquitto *mosq, enum mosq_opt_t option, void *value)$/;"	f
mosquitto_protocol	src/mosquitto_broker.h	/^enum mosquitto_protocol {$/;"	g
mosquitto_psk_key_get	src/security.cpp	/^int mosquitto_psk_key_get(struct mosquitto_db *db, struct mosquitto *context, const char *hint, const char *identity, char *key, int max_key_len)$/;"	f
mosquitto_psk_key_get_default	src/security_default.cpp	/^int mosquitto_psk_key_get_default(struct mosquitto_db *db, struct mosquitto *context, const char *hint, const char *identity, char *key, int max_key_len)$/;"	f
mosquitto_pub_topic_check	lib/util_mosq.cpp	/^int mosquitto_pub_topic_check(const char *str)$/;"	f
mosquitto_pub_topic_check2	lib/util_mosq.cpp	/^int mosquitto_pub_topic_check2(const char *str, size_t len)$/;"	f
mosquitto_publish	lib/actions.cpp	/^int mosquitto_publish(struct mosquitto *mosq, int *mid, const char *topic, int payloadlen, const void *payload, int qos, bool retain)$/;"	f
mosquitto_publish_callback_set	lib/callbacks.cpp	/^void mosquitto_publish_callback_set(struct mosquitto *mosq, void (*on_publish)(struct mosquitto *, void *, int))$/;"	f
mosquitto_reconnect	lib/connect.cpp	/^int mosquitto_reconnect(struct mosquitto *mosq)$/;"	f
mosquitto_reconnect_async	lib/connect.cpp	/^int mosquitto_reconnect_async(struct mosquitto *mosq)$/;"	f
mosquitto_reconnect_delay_set	lib/options.cpp	/^int mosquitto_reconnect_delay_set(struct mosquitto *mosq, unsigned int reconnect_delay, unsigned int reconnect_delay_max, bool reconnect_exponential_backoff)$/;"	f
mosquitto_reinitialise	lib/mosquitto.cpp	/^int mosquitto_reinitialise(struct mosquitto *mosq, const char *id, bool clean_session, void *userdata)$/;"	f
mosquitto_security_apply	src/security.cpp	/^int mosquitto_security_apply(struct mosquitto_db *db)$/;"	f
mosquitto_security_apply_default	src/security_default.cpp	/^int mosquitto_security_apply_default(struct mosquitto_db *db)$/;"	f
mosquitto_security_cleanup	src/security.cpp	/^int mosquitto_security_cleanup(struct mosquitto_db *db, bool reload)$/;"	f
mosquitto_security_cleanup_default	src/security_default.cpp	/^int mosquitto_security_cleanup_default(struct mosquitto_db *db, bool reload)$/;"	f
mosquitto_security_init	src/security.cpp	/^int mosquitto_security_init(struct mosquitto_db *db, bool reload)$/;"	f
mosquitto_security_init_default	src/security_default.cpp	/^int mosquitto_security_init_default(struct mosquitto_db *db, bool reload)$/;"	f
mosquitto_security_module_cleanup	src/security.cpp	/^int mosquitto_security_module_cleanup(struct mosquitto_db *db)$/;"	f
mosquitto_security_module_init	src/security.cpp	/^int mosquitto_security_module_init(struct mosquitto_db *db)$/;"	f
mosquitto_socket	lib/mosquitto.cpp	/^int mosquitto_socket(struct mosquitto *mosq)$/;"	f
mosquitto_socks5_set	lib/socks_mosq.cpp	/^int mosquitto_socks5_set(struct mosquitto *mosq, const char *host, int port, const char *username, const char *password)$/;"	f
mosquitto_strerror	lib/mosquitto.cpp	/^const char *mosquitto_strerror(int mosq_errno)$/;"	f
mosquitto_sub_topic_check	lib/util_mosq.cpp	/^int mosquitto_sub_topic_check(const char *str)$/;"	f
mosquitto_sub_topic_check2	lib/util_mosq.cpp	/^int mosquitto_sub_topic_check2(const char *str, size_t len)$/;"	f
mosquitto_sub_topic_tokenise	lib/mosquitto.cpp	/^int mosquitto_sub_topic_tokenise(const char *subtopic, char ***topics, int *count)$/;"	f
mosquitto_sub_topic_tokens_free	lib/mosquitto.cpp	/^int mosquitto_sub_topic_tokens_free(char ***topics, int count)$/;"	f
mosquitto_subscribe	lib/actions.cpp	/^int mosquitto_subscribe(struct mosquitto *mosq, int *mid, const char *sub, int qos)$/;"	f
mosquitto_subscribe_callback	lib/helpers.cpp	/^libmosq_EXPORT int mosquitto_subscribe_callback($/;"	f
mosquitto_subscribe_callback_set	lib/callbacks.cpp	/^void mosquitto_subscribe_callback_set(struct mosquitto *mosq, void (*on_subscribe)(struct mosquitto *, void *, int, int, const int *))$/;"	f
mosquitto_subscribe_simple	lib/helpers.cpp	/^libmosq_EXPORT int mosquitto_subscribe_simple($/;"	f
mosquitto_threaded_set	lib/thread_mosq.cpp	/^int mosquitto_threaded_set(struct mosquitto *mosq, bool threaded)$/;"	f
mosquitto_time	lib/time_mosq.cpp	/^time_t mosquitto_time(void)$/;"	f
mosquitto_tls_insecure_set	lib/options.cpp	/^int mosquitto_tls_insecure_set(struct mosquitto *mosq, bool value)$/;"	f
mosquitto_tls_opts_set	lib/options.cpp	/^int mosquitto_tls_opts_set(struct mosquitto *mosq, int cert_reqs, const char *tls_version, const char *ciphers)$/;"	f
mosquitto_tls_psk_set	lib/options.cpp	/^int mosquitto_tls_psk_set(struct mosquitto *mosq, const char *psk, const char *identity, const char *ciphers)$/;"	f
mosquitto_tls_set	lib/options.cpp	/^int mosquitto_tls_set(struct mosquitto *mosq, const char *cafile, const char *capath, const char *certfile, const char *keyfile, int (*pw_callback)(char *buf, int size, int rwflag, void *userdata))$/;"	f
mosquitto_topic_matches_sub	lib/util_mosq.cpp	/^int mosquitto_topic_matches_sub(const char *sub, const char *topic, bool *result)$/;"	f
mosquitto_topic_matches_sub2	lib/util_mosq.cpp	/^int mosquitto_topic_matches_sub2(const char *sub, size_t sublen, const char *topic, size_t topiclen, bool *result)$/;"	f
mosquitto_unpwd_check	src/security.cpp	/^int mosquitto_unpwd_check(struct mosquitto_db *db, struct mosquitto *context, const char *username, const char *password)$/;"	f
mosquitto_unpwd_check_default	src/security_default.cpp	/^int mosquitto_unpwd_check_default(struct mosquitto_db *db, struct mosquitto *context, const char *username, const char *password)$/;"	f
mosquitto_unsubscribe	lib/actions.cpp	/^int mosquitto_unsubscribe(struct mosquitto *mosq, int *mid, const char *sub)$/;"	f
mosquitto_unsubscribe_callback_set	lib/callbacks.cpp	/^void mosquitto_unsubscribe_callback_set(struct mosquitto *mosq, void (*on_unsubscribe)(struct mosquitto *, void *, int))$/;"	f
mosquitto_user_data_set	lib/options.cpp	/^void mosquitto_user_data_set(struct mosquitto *mosq, void *userdata)$/;"	f
mosquitto_username_pw_set	lib/options.cpp	/^int mosquitto_username_pw_set(struct mosquitto *mosq, const char *username, const char *password)$/;"	f
mosquitto_validate_utf8	lib/utf8_mosq.cpp	/^int mosquitto_validate_utf8(const char *str, int len)$/;"	f
mosquitto_want_write	lib/mosquitto.cpp	/^bool mosquitto_want_write(struct mosquitto *mosq)$/;"	f
mosquitto_will_clear	lib/options.cpp	/^int mosquitto_will_clear(struct mosquitto *mosq)$/;"	f
mosquitto_will_set	lib/options.cpp	/^int mosquitto_will_set(struct mosquitto *mosq, const char *topic, int payloadlen, const void *payload, int qos, bool retain)$/;"	f
mosquittopp	lib/cpp/mosquittopp.cpp	/^mosquittopp::mosquittopp(const char *id, bool clean_session)$/;"	f	class:mosqpp::mosquittopp
mosquittopp	lib/cpp/mosquittopp.h	/^class mosqpp_EXPORT mosquittopp {$/;"	c	namespace:mosqpp
mosquittopp_test	test/lib/cpp/01-con-discon-success.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/01-con-discon-success.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/01-keepalive-pingreq.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/01-keepalive-pingreq.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/01-no-clean-session.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/01-no-clean-session.cpp	/^mosquittopp_test::mosquittopp_test(const char *id, bool clean_session) : mosqpp::mosquittopp(id, clean_session)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/01-unpwd-set.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/01-unpwd-set.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/01-will-set.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/01-will-set.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/01-will-unpwd-set.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/01-will-unpwd-set.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/02-subscribe-qos0.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/02-subscribe-qos0.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/02-subscribe-qos1.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/02-subscribe-qos1.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/02-subscribe-qos2.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/02-subscribe-qos2.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/02-unsubscribe.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/02-unsubscribe.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/03-publish-b2c-qos1.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/03-publish-b2c-qos1.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/03-publish-b2c-qos2.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/03-publish-b2c-qos2.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/03-publish-c2b-qos1-disconnect.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/03-publish-c2b-qos1-disconnect.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/03-publish-c2b-qos2-disconnect.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/03-publish-c2b-qos2-disconnect.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/03-publish-c2b-qos2.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/03-publish-c2b-qos2.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/03-publish-qos0-no-payload.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/03-publish-qos0-no-payload.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/03-publish-qos0.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/03-publish-qos0.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/04-retain-qos0.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/04-retain-qos0.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/08-ssl-bad-cacert.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/08-ssl-bad-cacert.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/08-ssl-connect-cert-auth-enc.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/08-ssl-connect-cert-auth-enc.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/08-ssl-connect-cert-auth.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/08-ssl-connect-cert-auth.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/08-ssl-connect-no-auth.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/08-ssl-connect-no-auth.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mosquittopp_test	test/lib/cpp/08-ssl-fake-cacert.cpp	/^class mosquittopp_test : public mosqpp::mosquittopp$/;"	c	file:
mosquittopp_test	test/lib/cpp/08-ssl-fake-cacert.cpp	/^mosquittopp_test::mosquittopp_test(const char *id) : mosqpp::mosquittopp(id)$/;"	f	class:mosquittopp_test
mount_point	src/mosquitto_broker_internal.h	/^	char *mount_point;$/;"	m	struct:mosquitto__listener
mp_mqtt	src/mosquitto_broker.h	/^	mp_mqtt,$/;"	e	enum:mosquitto_protocol
mp_mqttsn	src/mosquitto_broker.h	/^	mp_mqttsn,$/;"	e	enum:mosquitto_protocol
mp_websockets	src/mosquitto_broker.h	/^	mp_websockets$/;"	e	enum:mosquitto_protocol
mqtt_host	examples/mysql_log/mysql_log.cpp	23;"	d	file:
mqtt_port	examples/mysql_log/mysql_log.cpp	24;"	d	file:
mqtt_tempconv	examples/temperature_conversion/temperature_conversion.cpp	/^mqtt_tempconv::mqtt_tempconv(const char *id, const char *host, int port) : mosquittopp(id)$/;"	f	class:mqtt_tempconv
mqtt_tempconv	examples/temperature_conversion/temperature_conversion.h	/^class mqtt_tempconv : public mosqpp::mosquittopp$/;"	c
msg	lib/mosquitto_internal.h	/^	struct mosquitto_message msg;$/;"	m	struct:mosquitto_message_all	typeref:struct:mosquitto_message_all::mosquitto_message
msg	test/qos.cpp	/^	struct mosquitto_message msg;$/;"	m	struct:msg_list	typeref:struct:msg_list::mosquitto_message	file:
msg_bytes	lib/mosquitto_internal.h	/^	unsigned long msg_bytes;$/;"	m	struct:mosquitto
msg_bytes12	lib/mosquitto_internal.h	/^	unsigned long msg_bytes12;$/;"	m	struct:mosquitto
msg_count	client/client_shared.h	/^	int msg_count; \/* sub *\/$/;"	m	struct:mosq_config
msg_count	client/sub_client.cpp	/^int msg_count = 0;$/;"	v
msg_count	lib/mosquitto_internal.h	/^	int msg_count;$/;"	m	struct:mosquitto
msg_count12	lib/mosquitto_internal.h	/^	int msg_count12;$/;"	m	struct:mosquitto
msg_list	test/qos.cpp	/^struct msg_list{$/;"	s	file:
msg_store	src/mosquitto_broker_internal.h	/^	struct mosquitto_msg_store *msg_store;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::mosquitto_msg_store
msg_store_bytes	src/mosquitto_broker_internal.h	/^	unsigned long msg_store_bytes;$/;"	m	struct:mosquitto_db
msg_store_chunk	src/db_dump/db_dump.cpp	/^struct msg_store_chunk$/;"	s	file:
msg_store_count	src/mosquitto_broker_internal.h	/^	int msg_store_count;$/;"	m	struct:mosquitto_db
msg_store_load	src/mosquitto_broker_internal.h	/^	struct mosquitto_msg_store_load *msg_store_load;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::mosquitto_msg_store_load
msglen	client/client_shared.h	/^	long msglen; \/* pub *\/$/;"	m	struct:mosq_config
msglen	client/pub_client.cpp	/^static long msglen = 0;$/;"	v	file:
msgs_by_id	src/db_dump/db_dump.cpp	/^struct msg_store_chunk *msgs_by_id = NULL;$/;"	v	typeref:struct:msg_store_chunk
msgs_medium10	test/broker/03-publish-qos1-queued-bytes.py	/^    msgs_medium10 = [("test\/publish\/queueing\/%d" % x,$/;"	v
msgs_short10	test/broker/03-publish-qos1-queued-bytes.py	/^    msgs_short10 = [("test\/publish\/queueing\/%d" % x,$/;"	v
msgtime_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t msgtime_mutex;$/;"	m	struct:mosquitto
my_connect_callback	client/pub_client.cpp	/^void my_connect_callback(struct mosquitto *mosq, void *obj, int result)$/;"	f
my_connect_callback	client/sub_client.cpp	/^void my_connect_callback(struct mosquitto *mosq, void *obj, int result, int flags)$/;"	f
my_connect_callback	test/fake_user.cpp	/^void my_connect_callback(struct mosquitto *mosq, void *obj, int result)$/;"	f
my_connect_callback	test/msgsps_pub.cpp	/^void my_connect_callback(struct mosquitto *mosq, void *obj, int rc)$/;"	f
my_connect_callback	test/msgsps_sub.cpp	/^void my_connect_callback(struct mosquitto *mosq, void *obj, int rc)$/;"	f
my_disconnect_callback	client/pub_client.cpp	/^void my_disconnect_callback(struct mosquitto *mosq, void *obj, int rc)$/;"	f
my_disconnect_callback	test/msgsps_pub.cpp	/^void my_disconnect_callback(struct mosquitto *mosq, void *obj, int result)$/;"	f
my_disconnect_callback	test/msgsps_sub.cpp	/^void my_disconnect_callback(struct mosquitto *mosq, void *obj, int result)$/;"	f
my_log_callback	client/pub_client.cpp	/^void my_log_callback(struct mosquitto *mosq, void *obj, int level, const char *str)$/;"	f
my_log_callback	client/sub_client.cpp	/^void my_log_callback(struct mosquitto *mosq, void *obj, int level, const char *str)$/;"	f
my_message_callback	client/sub_client.cpp	/^void my_message_callback(struct mosquitto *mosq, void *obj, const struct mosquitto_message *message)$/;"	f
my_message_callback	test/msgsps_sub.cpp	/^void my_message_callback(struct mosquitto *mosq, void *obj, const struct mosquitto_message *msg)$/;"	f
my_publish_callback	client/pub_client.cpp	/^void my_publish_callback(struct mosquitto *mosq, void *obj, int mid)$/;"	f
my_publish_callback	test/msgsps_pub.cpp	/^void my_publish_callback(struct mosquitto *mosq, void *obj, int mid)$/;"	f
my_signal_handler	client/sub_client.cpp	/^void my_signal_handler(int signum)$/;"	f
my_subscribe_callback	client/sub_client.cpp	/^void my_subscribe_callback(struct mosquitto *mosq, void *obj, int mid, int qos_count, const int *granted_qos)$/;"	f
name	src/mosquitto_broker_internal.h	/^	char *name;$/;"	m	struct:mosquitto__bridge
name	www/plugins/docbookmanpage/docbookmanpage.py	/^    name = "docbookmanpage"$/;"	v	class:CompileDocbookManpage
net__broker_cleanup	src/net.cpp	/^void net__broker_cleanup(void)$/;"	f
net__broker_init	src/net.cpp	/^void net__broker_init(void)$/;"	f
net__cleanup	lib/net_mosq.cpp	/^void net__cleanup(void)$/;"	f
net__init	lib/net_mosq.cpp	/^int net__init(void)$/;"	f
net__init_ssl_ctx	lib/net_mosq.cpp	/^static int net__init_ssl_ctx(struct mosquitto *mosq)$/;"	f	file:
net__print_error	src/net.cpp	/^static void net__print_error(int log, const char *format_str)$/;"	f	file:
net__print_ssl_error	lib/net_mosq.cpp	/^void net__print_ssl_error(struct mosquitto *mosq)$/;"	f
net__read	lib/net_mosq.cpp	/^ssize_t net__read(struct mosquitto *mosq, void *buf, size_t count)$/;"	f
net__socket_accept	src/net.cpp	/^int net__socket_accept(struct mosquitto_db *db, mosq_sock_t listensock)$/;"	f
net__socket_close	lib/net_mosq.cpp	/^int net__socket_close(struct mosquitto_db *db, struct mosquitto *mosq)$/;"	f
net__socket_connect	lib/net_mosq.cpp	/^int net__socket_connect(struct mosquitto *mosq, const char *host, uint16_t port, const char *bind_address, bool blocking)$/;"	f
net__socket_connect_step3	lib/net_mosq.cpp	/^int net__socket_connect_step3(struct mosquitto *mosq, const char *host, uint16_t port, const char *bind_address, bool blocking)$/;"	f
net__socket_connect_tls	lib/net_mosq.cpp	/^int net__socket_connect_tls(struct mosquitto *mosq)$/;"	f
net__socket_get_address	src/net.cpp	/^int net__socket_get_address(mosq_sock_t sock, char *buf, int len)$/;"	f
net__socket_listen	src/net.cpp	/^int net__socket_listen(struct mosquitto__listener *listener)$/;"	f
net__socket_nonblock	lib/net_mosq.cpp	/^int net__socket_nonblock(mosq_sock_t *sock)$/;"	f
net__socketpair	lib/net_mosq.cpp	/^int net__socketpair(mosq_sock_t *pairR, mosq_sock_t *pairW)$/;"	f
net__try_connect	lib/net_mosq.cpp	/^int net__try_connect(struct mosquitto *mosq, const char *host, uint16_t port, mosq_sock_t *sock, const char *bind_address, bool blocking)$/;"	f
net__try_connect_step1	lib/net_mosq.cpp	/^int net__try_connect_step1(struct mosquitto *mosq, const char *host)$/;"	f
net__try_connect_step2	lib/net_mosq.cpp	/^int net__try_connect_step2(struct mosquitto *mosq, uint16_t port, mosq_sock_t *sock)$/;"	f
net__write	lib/net_mosq.cpp	/^ssize_t net__write(struct mosquitto *mosq, void *buf, size_t count)$/;"	f
next	lib/mosquitto_internal.h	/^	struct mosquitto__packet *next;$/;"	m	struct:mosquitto__packet	typeref:struct:mosquitto__packet::mosquitto__packet
next	lib/mosquitto_internal.h	/^	struct mosquitto_message_all *next;$/;"	m	struct:mosquitto_message_all	typeref:struct:mosquitto_message_all::mosquitto_message_all
next	src/deps/uthash.h	/^   void *next;                       \/* next element in app order      *\/$/;"	m	struct:UT_hash_handle
next	src/mosquitto_broker_internal.h	/^	struct mosquitto__acl *next;$/;"	m	struct:mosquitto__acl	typeref:struct:mosquitto__acl::mosquitto__acl
next	src/mosquitto_broker_internal.h	/^	struct mosquitto__acl_user *next;$/;"	m	struct:mosquitto__acl_user	typeref:struct:mosquitto__acl_user::mosquitto__acl_user
next	src/mosquitto_broker_internal.h	/^	struct mosquitto__subleaf *next;$/;"	m	struct:mosquitto__subleaf	typeref:struct:mosquitto__subleaf::mosquitto__subleaf
next	src/mosquitto_broker_internal.h	/^	struct mosquitto_client_msg *next;$/;"	m	struct:mosquitto_client_msg	typeref:struct:mosquitto_client_msg::mosquitto_client_msg
next	src/mosquitto_broker_internal.h	/^	struct mosquitto_msg_store *next;$/;"	m	struct:mosquitto_msg_store	typeref:struct:mosquitto_msg_store::mosquitto_msg_store
next	src/subs.cpp	/^	struct sub__token *next;$/;"	m	struct:sub__token	typeref:struct:sub__token::sub__token	file:
next	test/qos.cpp	/^	struct msg_list *next;$/;"	m	struct:msg_list	typeref:struct:msg_list::msg_list	file:
next_msg_out	lib/mosquitto_internal.h	/^	time_t next_msg_out;$/;"	m	struct:mosquitto
next_test	test/broker/ptest.py	/^def next_test(tests, ports):$/;"	f
next_test	test/lib/ptest.py	/^def next_test(tests, ports):$/;"	f
no_retain	client/client_shared.h	/^	bool no_retain; \/* sub *\/$/;"	m	struct:mosq_config
noexpand	src/deps/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
nonideal_items	src/deps/uthash.h	/^   unsigned nonideal_items;$/;"	m	struct:UT_hash_table
notification_topic	src/mosquitto_broker_internal.h	/^	char *notification_topic;$/;"	m	struct:mosquitto__bridge
notifications	src/mosquitto_broker_internal.h	/^	bool notifications;$/;"	m	struct:mosquitto__bridge
notifications_local_only	src/mosquitto_broker_internal.h	/^	bool notifications_local_only;$/;"	m	struct:mosquitto__bridge
num_buckets	src/deps/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
num_items	src/deps/uthash.h	/^   unsigned num_items;$/;"	m	struct:UT_hash_table
old_id	lib/mosquitto_internal.h	/^	char *old_id; \/* for when a duplicate client connects, but we still want to$/;"	m	struct:mosquitto
on_change_background	misc/currentcost/gnome-panel/CurrentCostMQTT.py	/^    def on_change_background(self, applet, type, color, pixmap):$/;"	m	class:CurrentCostMQTT
on_connect	examples/temperature_conversion/temperature_conversion.cpp	/^void mqtt_tempconv::on_connect(int rc)$/;"	f	class:mqtt_tempconv
on_connect	lib/cpp/mosquittopp.h	/^		virtual void on_connect(int \/*rc*\/) {return;}$/;"	f	class:mosqpp::mosquittopp
on_connect	lib/helpers.cpp	/^static void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f	file:
on_connect	lib/mosquitto_internal.h	/^	void (*on_connect)(struct mosquitto *, void *userdata, int rc);$/;"	m	struct:mosquitto
on_connect	test/broker/c/08-tls-psk-bridge.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/broker/c/08-tls-psk-pub.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/01-con-discon-success.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/01-keepalive-pingreq.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/02-subscribe-qos0.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/02-subscribe-qos1.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/02-subscribe-qos2.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/02-unsubscribe.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/03-publish-b2c-qos1.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/03-publish-b2c-qos2.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/03-publish-c2b-qos1-disconnect.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/03-publish-c2b-qos2-disconnect.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/03-publish-c2b-qos2.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/03-publish-qos0-no-payload.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/03-publish-qos0.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/04-retain-qos0.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/08-ssl-connect-cert-auth-enc.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/08-ssl-connect-cert-auth.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/08-ssl-connect-no-auth.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/c/08-ssl-fake-cacert.cpp	/^void on_connect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_connect	test/lib/cpp/01-con-discon-success.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/01-keepalive-pingreq.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/02-subscribe-qos0.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/02-subscribe-qos1.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/02-subscribe-qos2.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/02-unsubscribe.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/03-publish-b2c-qos1.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/03-publish-b2c-qos2.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/03-publish-c2b-qos1-disconnect.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/03-publish-c2b-qos2-disconnect.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/03-publish-c2b-qos2.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/03-publish-qos0-no-payload.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/03-publish-qos0.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/04-retain-qos0.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/08-ssl-connect-cert-auth-enc.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/08-ssl-connect-cert-auth.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/08-ssl-connect-no-auth.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect	test/lib/cpp/08-ssl-fake-cacert.cpp	/^void mosquittopp_test::on_connect(int rc)$/;"	f	class:mosquittopp_test
on_connect_with_flags	lib/cpp/mosquittopp.h	/^		virtual void on_connect_with_flags(int \/*rc*\/, int \/*flags*\/) {return;}$/;"	f	class:mosqpp::mosquittopp
on_connect_with_flags	lib/mosquitto_internal.h	/^	void (*on_connect_with_flags)(struct mosquitto *, void *userdata, int rc, int flags);$/;"	m	struct:mosquitto
on_connect_with_flags_wrapper	lib/cpp/mosquittopp.cpp	/^static void on_connect_with_flags_wrapper(struct mosquitto *mosq, void *userdata, int rc, int flags)$/;"	f	namespace:mosqpp
on_connect_wrapper	lib/cpp/mosquittopp.cpp	/^static void on_connect_wrapper(struct mosquitto *mosq, void *userdata, int rc)$/;"	f	namespace:mosqpp
on_disconnect	lib/cpp/mosquittopp.h	/^		virtual void on_disconnect(int \/*rc*\/) {return;}$/;"	f	class:mosqpp::mosquittopp
on_disconnect	lib/mosquitto_internal.h	/^	void (*on_disconnect)(struct mosquitto *, void *userdata, int rc);$/;"	m	struct:mosquitto
on_disconnect	test/broker/c/08-tls-psk-bridge.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/broker/c/08-tls-psk-pub.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/c/01-con-discon-success.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/c/02-subscribe-qos0.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/c/02-subscribe-qos1.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/c/02-subscribe-qos2.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/c/02-unsubscribe.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/c/03-publish-c2b-qos1-disconnect.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/c/03-publish-c2b-qos2-disconnect.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/c/03-publish-c2b-qos2.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/c/08-ssl-connect-cert-auth-enc.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/c/08-ssl-connect-cert-auth.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/c/08-ssl-connect-no-auth.cpp	/^void on_disconnect(struct mosquitto *mosq, void *obj, int rc)$/;"	f
on_disconnect	test/lib/cpp/01-con-discon-success.cpp	/^void mosquittopp_test::on_disconnect(int rc)$/;"	f	class:mosquittopp_test
on_disconnect	test/lib/cpp/02-subscribe-qos0.cpp	/^void mosquittopp_test::on_disconnect(int rc)$/;"	f	class:mosquittopp_test
on_disconnect	test/lib/cpp/02-subscribe-qos1.cpp	/^void mosquittopp_test::on_disconnect(int rc)$/;"	f	class:mosquittopp_test
on_disconnect	test/lib/cpp/02-subscribe-qos2.cpp	/^void mosquittopp_test::on_disconnect(int rc)$/;"	f	class:mosquittopp_test
on_disconnect	test/lib/cpp/02-unsubscribe.cpp	/^void mosquittopp_test::on_disconnect(int rc)$/;"	f	class:mosquittopp_test
on_disconnect	test/lib/cpp/03-publish-c2b-qos1-disconnect.cpp	/^void mosquittopp_test::on_disconnect(int rc)$/;"	f	class:mosquittopp_test
on_disconnect	test/lib/cpp/03-publish-c2b-qos2-disconnect.cpp	/^void mosquittopp_test::on_disconnect(int rc)$/;"	f	class:mosquittopp_test
on_disconnect	test/lib/cpp/03-publish-c2b-qos2.cpp	/^void mosquittopp_test::on_disconnect(int rc)$/;"	f	class:mosquittopp_test
on_disconnect	test/lib/cpp/08-ssl-connect-cert-auth-enc.cpp	/^void mosquittopp_test::on_disconnect(int rc)$/;"	f	class:mosquittopp_test
on_disconnect	test/lib/cpp/08-ssl-connect-cert-auth.cpp	/^void mosquittopp_test::on_disconnect(int rc)$/;"	f	class:mosquittopp_test
on_disconnect	test/lib/cpp/08-ssl-connect-no-auth.cpp	/^void mosquittopp_test::on_disconnect(int rc)$/;"	f	class:mosquittopp_test
on_disconnect	test/qos.cpp	/^void on_disconnect(void *obj)$/;"	f
on_disconnect_wrapper	lib/cpp/mosquittopp.cpp	/^static void on_disconnect_wrapper(struct mosquitto *mosq, void *userdata, int rc)$/;"	f	namespace:mosqpp
on_error	lib/cpp/mosquittopp.h	/^		virtual void on_error() {return;}$/;"	f	class:mosqpp::mosquittopp
on_log	lib/cpp/mosquittopp.h	/^		virtual void on_log(int \/*level*\/, const char * \/*str*\/) {return;}$/;"	f	class:mosqpp::mosquittopp
on_log	lib/mosquitto_internal.h	/^	void (*on_log)(struct mosquitto *, void *userdata, int level, const char *str);$/;"	m	struct:mosquitto
on_log	test/broker/c/08-tls-psk-bridge.cpp	/^void on_log(struct mosquitto *mosq, void *obj, int level, const char *str)$/;"	f
on_log_wrapper	lib/cpp/mosquittopp.cpp	/^static void on_log_wrapper(struct mosquitto *mosq, void *userdata, int level, const char *str)$/;"	f	namespace:mosqpp
on_message	examples/subscribe_simple/callback.cpp	/^int on_message(struct mosquitto *mosq, void *userdata, const struct mosquitto_message *msg)$/;"	f
on_message	examples/temperature_conversion/temperature_conversion.cpp	/^void mqtt_tempconv::on_message(const struct mosquitto_message *message)$/;"	f	class:mqtt_tempconv
on_message	lib/cpp/mosquittopp.h	/^		virtual void on_message(const struct mosquitto_message * \/*message*\/) {return;}$/;"	f	class:mosqpp::mosquittopp
on_message	lib/mosquitto_internal.h	/^	void (*on_message)(struct mosquitto *, void *userdata, const struct mosquitto_message *message);$/;"	m	struct:mosquitto
on_message	misc/currentcost/gnome-panel/CurrentCostMQTT.py	/^    def on_message(self, mosq, obj, msg):$/;"	m	class:CurrentCostMQTT
on_message	test/lib/c/03-publish-b2c-qos1.cpp	/^void on_message(struct mosquitto *mosq, void *obj, const struct mosquitto_message *msg)$/;"	f
on_message	test/lib/c/03-publish-b2c-qos2.cpp	/^void on_message(struct mosquitto *mosq, void *obj, const struct mosquitto_message *msg)$/;"	f
on_message	test/lib/cpp/03-publish-b2c-qos1.cpp	/^void mosquittopp_test::on_message(const struct mosquitto_message *msg)$/;"	f	class:mosquittopp_test
on_message	test/lib/cpp/03-publish-b2c-qos2.cpp	/^void mosquittopp_test::on_message(const struct mosquitto_message *msg)$/;"	f	class:mosquittopp_test
on_message	test/qos.cpp	/^void on_message(void *obj, const struct mosquitto_message *msg)$/;"	f
on_message_callback	lib/helpers.cpp	/^static void on_message_callback(struct mosquitto *mosq, void *obj, const struct mosquitto_message *message)$/;"	f	file:
on_message_simple	lib/helpers.cpp	/^static int on_message_simple(struct mosquitto *mosq, void *obj, const struct mosquitto_message *message)$/;"	f	file:
on_message_wrapper	lib/cpp/mosquittopp.cpp	/^static void on_message_wrapper(struct mosquitto *mosq, void *userdata, const struct mosquitto_message *message)$/;"	f	namespace:mosqpp
on_publish	lib/cpp/mosquittopp.h	/^		virtual void on_publish(int \/*mid*\/) {return;}$/;"	f	class:mosqpp::mosquittopp
on_publish	lib/mosquitto_internal.h	/^	void (*on_publish)(struct mosquitto *, void *userdata, int mid);$/;"	m	struct:mosquitto
on_publish	test/broker/c/08-tls-psk-bridge.cpp	/^void on_publish(struct mosquitto *mosq, void *obj, int mid)$/;"	f
on_publish	test/broker/c/08-tls-psk-pub.cpp	/^void on_publish(struct mosquitto *mosq, void *obj, int mid)$/;"	f
on_publish	test/lib/c/03-publish-c2b-qos1-disconnect.cpp	/^void on_publish(struct mosquitto *mosq, void *obj, int mid)$/;"	f
on_publish	test/lib/c/03-publish-c2b-qos2-disconnect.cpp	/^void on_publish(struct mosquitto *mosq, void *obj, int mid)$/;"	f
on_publish	test/lib/c/03-publish-c2b-qos2.cpp	/^void on_publish(struct mosquitto *mosq, void *obj, int mid)$/;"	f
on_publish	test/lib/c/03-publish-qos0-no-payload.cpp	/^void on_publish(struct mosquitto *mosq, void *obj, int mid)$/;"	f
on_publish	test/lib/c/03-publish-qos0.cpp	/^void on_publish(struct mosquitto *mosq, void *obj, int mid)$/;"	f
on_publish	test/lib/cpp/03-publish-c2b-qos1-disconnect.cpp	/^void mosquittopp_test::on_publish(int mid)$/;"	f	class:mosquittopp_test
on_publish	test/lib/cpp/03-publish-c2b-qos2-disconnect.cpp	/^void mosquittopp_test::on_publish(int mid)$/;"	f	class:mosquittopp_test
on_publish	test/lib/cpp/03-publish-c2b-qos2.cpp	/^void mosquittopp_test::on_publish(int mid)$/;"	f	class:mosquittopp_test
on_publish	test/lib/cpp/03-publish-qos0-no-payload.cpp	/^void mosquittopp_test::on_publish(int mid)$/;"	f	class:mosquittopp_test
on_publish	test/lib/cpp/03-publish-qos0.cpp	/^void mosquittopp_test::on_publish(int mid)$/;"	f	class:mosquittopp_test
on_publish	test/qos.cpp	/^void on_publish(void *obj, uint16_t mid)$/;"	f
on_publish_wrapper	lib/cpp/mosquittopp.cpp	/^static void on_publish_wrapper(struct mosquitto *mosq, void *userdata, int mid)$/;"	f	namespace:mosqpp
on_subscribe	examples/temperature_conversion/temperature_conversion.cpp	/^void mqtt_tempconv::on_subscribe(int mid, int qos_count, const int *granted_qos)$/;"	f	class:mqtt_tempconv
on_subscribe	lib/cpp/mosquittopp.h	/^		virtual void on_subscribe(int \/*mid*\/, int \/*qos_count*\/, const int * \/*granted_qos*\/) {return;}$/;"	f	class:mosqpp::mosquittopp
on_subscribe	lib/mosquitto_internal.h	/^	void (*on_subscribe)(struct mosquitto *, void *userdata, int mid, int qos_count, const int *granted_qos);$/;"	m	struct:mosquitto
on_subscribe	test/lib/c/02-subscribe-qos0.cpp	/^void on_subscribe(struct mosquitto *mosq, void *obj, int mid, int qos_count, const int *granted_qos)$/;"	f
on_subscribe	test/lib/c/02-subscribe-qos1.cpp	/^void on_subscribe(struct mosquitto *mosq, void *obj, int mid, int qos_count, const int *granted_qos)$/;"	f
on_subscribe	test/lib/c/02-subscribe-qos2.cpp	/^void on_subscribe(struct mosquitto *mosq, void *obj, int mid, int qos_count, const int *granted_qos)$/;"	f
on_subscribe	test/lib/cpp/02-subscribe-qos0.cpp	/^void mosquittopp_test::on_subscribe(int mid, int qos_count, const int *granted_qos)$/;"	f	class:mosquittopp_test
on_subscribe	test/lib/cpp/02-subscribe-qos1.cpp	/^void mosquittopp_test::on_subscribe(int mid, int qos_count, const int *granted_qos)$/;"	f	class:mosquittopp_test
on_subscribe	test/lib/cpp/02-subscribe-qos2.cpp	/^void mosquittopp_test::on_subscribe(int mid, int qos_count, const int *granted_qos)$/;"	f	class:mosquittopp_test
on_subscribe	test/qos.cpp	/^void on_subscribe(void *obj, uint16_t mid, int qos_count, const uint8_t *granted_qos)$/;"	f
on_subscribe_wrapper	lib/cpp/mosquittopp.cpp	/^static void on_subscribe_wrapper(struct mosquitto *mosq, void *userdata, int mid, int qos_count, const int *granted_qos)$/;"	f	namespace:mosqpp
on_unsubscribe	lib/cpp/mosquittopp.h	/^		virtual void on_unsubscribe(int \/*mid*\/) {return;}$/;"	f	class:mosqpp::mosquittopp
on_unsubscribe	lib/mosquitto_internal.h	/^	void (*on_unsubscribe)(struct mosquitto *, void *userdata, int mid);$/;"	m	struct:mosquitto
on_unsubscribe	test/lib/c/02-unsubscribe.cpp	/^void on_unsubscribe(struct mosquitto *mosq, void *obj, int mid)$/;"	f
on_unsubscribe	test/lib/cpp/02-unsubscribe.cpp	/^void mosquittopp_test::on_unsubscribe(int mid)$/;"	f	class:mosquittopp_test
on_unsubscribe_wrapper	lib/cpp/mosquittopp.cpp	/^static void on_unsubscribe_wrapper(struct mosquitto *mosq, void *userdata, int mid)$/;"	f	namespace:mosqpp
option_count	src/mosquitto_broker_internal.h	/^	int option_count;$/;"	m	struct:mosquitto__auth_plugin_config
options	src/mosquitto_broker_internal.h	/^	struct mosquitto_opt *options;$/;"	m	struct:mosquitto__auth_plugin_config	typeref:struct:mosquitto__auth_plugin_config::mosquitto_opt
opts_set	lib/cpp/mosquittopp.cpp	/^int mosquittopp::opts_set(enum mosq_opt_t option, void *value)$/;"	f	class:mosqpp::mosquittopp
out_message_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t out_message_mutex;$/;"	m	struct:mosquitto
out_messages	lib/mosquitto_internal.h	/^	struct mosquitto_message_all *out_messages;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_message_all
out_messages_last	lib/mosquitto_internal.h	/^	struct mosquitto_message_all *out_messages_last;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_message_all
out_packet	lib/mosquitto_internal.h	/^	struct mosquitto__packet *out_packet;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto__packet
out_packet_last	lib/mosquitto_internal.h	/^	struct mosquitto__packet *out_packet_last;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto__packet
out_packet_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t out_packet_mutex;$/;"	m	struct:mosquitto
out_queue_len	lib/mosquitto_internal.h	/^	int out_queue_len;$/;"	m	struct:mosquitto
output_new_password	src/mosquitto_passwd.cpp	/^int output_new_password(FILE *fptr, const char *username, const char *password)$/;"	f
pack_remaining_length	test/mosq_test.py	/^def pack_remaining_length(remaining_length):$/;"	f
packet__alloc	lib/packet_mosq.cpp	/^int packet__alloc(struct mosquitto__packet *packet)$/;"	f
packet__cleanup	lib/packet_mosq.cpp	/^void packet__cleanup(struct mosquitto__packet *packet)$/;"	f
packet__queue	lib/packet_mosq.cpp	/^int packet__queue(struct mosquitto *mosq, struct mosquitto__packet *packet)$/;"	f
packet__read	lib/packet_mosq.cpp	/^int packet__read(struct mosquitto_db *db, struct mosquitto *mosq)$/;"	f
packet__read_byte	lib/packet_mosq.cpp	/^int packet__read_byte(struct mosquitto__packet *packet, uint8_t *byte)$/;"	f
packet__read_bytes	lib/packet_mosq.cpp	/^int packet__read_bytes(struct mosquitto__packet *packet, void *bytes, uint32_t count)$/;"	f
packet__read_string	lib/packet_mosq.cpp	/^int packet__read_string(struct mosquitto__packet *packet, char **str, int *length)$/;"	f
packet__read_uint16	lib/packet_mosq.cpp	/^int packet__read_uint16(struct mosquitto__packet *packet, uint16_t *word)$/;"	f
packet__write	lib/packet_mosq.cpp	/^int packet__write(struct mosquitto *mosq)$/;"	f
packet__write_byte	lib/packet_mosq.cpp	/^void packet__write_byte(struct mosquitto__packet *packet, uint8_t byte)$/;"	f
packet__write_bytes	lib/packet_mosq.cpp	/^void packet__write_bytes(struct mosquitto__packet *packet, const void *bytes, uint32_t count)$/;"	f
packet__write_string	lib/packet_mosq.cpp	/^void packet__write_string(struct mosquitto__packet *packet, const char *str, uint16_t length)$/;"	f
packet__write_uint16	lib/packet_mosq.cpp	/^void packet__write_uint16(struct mosquitto__packet *packet, uint16_t word)$/;"	f
packet_length	lib/mosquitto_internal.h	/^	uint32_t packet_length;$/;"	m	struct:mosquitto__packet
packet_matches	test/mosq_test.py	/^def packet_matches(name, recvd, expected):$/;"	f
parent	src/mosquitto_broker_internal.h	/^	struct mosquitto__subhier *parent;$/;"	m	struct:mosquitto__subhier	typeref:struct:mosquitto__subhier::mosquitto__subhier
password	client/client_shared.h	/^	char *password;$/;"	m	struct:mosq_config
password	client/pub_client.cpp	/^static char *password = NULL;$/;"	v	file:
password	lib/mosquitto.h	/^	char *password;$/;"	m	struct:libmosquitto_auth
password	lib/mosquitto_internal.h	/^	char *password;$/;"	m	struct:mosquitto
password	src/mosquitto_broker_internal.h	/^	char *password;$/;"	m	struct:mosquitto__unpwd
password_callback	test/lib/c/08-ssl-connect-cert-auth-enc.cpp	/^static int password_callback(char* buf, int size, int rwflag, void* userdata)$/;"	f	file:
password_callback	test/lib/cpp/08-ssl-connect-cert-auth-enc.cpp	/^static int password_callback(char* buf, int size, int rwflag, void* userdata)$/;"	f	file:
password_file	src/mosquitto_broker_internal.h	/^	char *password_file;$/;"	m	struct:mosquitto__security_options
password_len	src/mosquitto_broker_internal.h	/^	unsigned int password_len;$/;"	m	struct:mosquitto__unpwd
path	src/mosquitto_broker_internal.h	/^	char *path;$/;"	m	struct:mosquitto__auth_plugin_config
pattern_test	test/broker/03-pattern-matching.py	/^def pattern_test(sub_topic, pub_topic):$/;"	f
payload	lib/mosquitto.h	/^	void *payload;$/;"	m	struct:libmosquitto_will
payload	lib/mosquitto.h	/^	void *payload;$/;"	m	struct:mosquitto_message
payload	lib/mosquitto_internal.h	/^	uint8_t *payload;$/;"	m	struct:mosquitto__packet
payload	src/db_dump/db_dump.cpp	/^	uint8_t *payload;$/;"	m	struct:db_msg	file:
payload	src/mosquitto_broker_internal.h	/^	mosquitto__payload_uhpa payload;$/;"	m	struct:mosquitto_msg_store
payload	src/mosquitto_plugin.h	/^	const void *payload;$/;"	m	struct:mosquitto_acl_msg
payloadlen	lib/mosquitto.h	/^	int payloadlen;$/;"	m	struct:libmosquitto_will
payloadlen	lib/mosquitto.h	/^	int payloadlen;$/;"	m	struct:mosquitto_message
payloadlen	src/db_dump/db_dump.cpp	/^	uint32_t payloadlen;$/;"	m	struct:db_msg	file:
payloadlen	src/mosquitto_broker_internal.h	/^	uint32_t payloadlen;$/;"	m	struct:mosquitto_msg_store
payloadlen	src/mosquitto_plugin.h	/^	long payloadlen;$/;"	m	struct:mosquitto_acl_msg
per_listener_settings	src/mosquitto_broker_internal.h	/^	bool per_listener_settings;$/;"	m	struct:mosquitto__config
persist__backup	src/persist.cpp	/^int persist__backup(struct mosquitto_db *db, bool shutdown)$/;"	f
persist__client_chunk_restore	src/persist.cpp	/^static int persist__client_chunk_restore(struct mosquitto_db *db, FILE *db_fptr)$/;"	f	file:
persist__client_messages_write	src/persist.cpp	/^static int persist__client_messages_write(struct mosquitto_db *db, FILE *db_fptr, struct mosquitto *context, struct mosquitto_client_msg *queue)$/;"	f	file:
persist__client_msg_chunk_restore	src/persist.cpp	/^static int persist__client_msg_chunk_restore(struct mosquitto_db *db, FILE *db_fptr)$/;"	f	file:
persist__client_msg_restore	src/persist.cpp	/^static int persist__client_msg_restore(struct mosquitto_db *db, const char *client_id, uint16_t mid, uint8_t qos, uint8_t retain, uint8_t direction, uint8_t state, uint8_t dup, uint64_t store_id)$/;"	f	file:
persist__client_write	src/persist.cpp	/^static int persist__client_write(struct mosquitto_db *db, FILE *db_fptr)$/;"	f	file:
persist__find_or_add_context	src/persist.cpp	/^static struct mosquitto *persist__find_or_add_context(struct mosquitto_db *db, const char *client_id, uint16_t last_mid)$/;"	f	file:
persist__message_store_write	src/persist.cpp	/^static int persist__message_store_write(struct mosquitto_db *db, FILE *db_fptr)$/;"	f	file:
persist__msg_store_chunk_restore	src/persist.cpp	/^static int persist__msg_store_chunk_restore(struct mosquitto_db *db, FILE *db_fptr)$/;"	f	file:
persist__restore	src/persist.cpp	/^int persist__restore(struct mosquitto_db *db)$/;"	f
persist__restore_sub	src/persist.cpp	/^static int persist__restore_sub(struct mosquitto_db *db, const char *client_id, const char *sub, int qos)$/;"	f	file:
persist__retain_chunk_restore	src/persist.cpp	/^static int persist__retain_chunk_restore(struct mosquitto_db *db, FILE *db_fptr)$/;"	f	file:
persist__sub_chunk_restore	src/persist.cpp	/^static int persist__sub_chunk_restore(struct mosquitto_db *db, FILE *db_fptr)$/;"	f	file:
persist__subs_retain_write	src/persist.cpp	/^static int persist__subs_retain_write(struct mosquitto_db *db, FILE *db_fptr, struct mosquitto__subhier *node, const char *topic, int level)$/;"	f	file:
persist__subs_retain_write_all	src/persist.cpp	/^static int persist__subs_retain_write_all(struct mosquitto_db *db, FILE *db_fptr)$/;"	f	file:
persistence	src/mosquitto_broker_internal.h	/^	bool persistence;$/;"	m	struct:mosquitto__config
persistence_changes	src/mosquitto_broker_internal.h	/^	int persistence_changes;$/;"	m	struct:mosquitto_db
persistence_file	src/mosquitto_broker_internal.h	/^	char *persistence_file;$/;"	m	struct:mosquitto__config
persistence_filepath	src/mosquitto_broker_internal.h	/^	char *persistence_filepath;$/;"	m	struct:mosquitto__config
persistence_location	src/mosquitto_broker_internal.h	/^	char *persistence_location;$/;"	m	struct:mosquitto__config
persistent_client_expiration	src/mosquitto_broker_internal.h	/^	time_t persistent_client_expiration;$/;"	m	struct:mosquitto__config
pid_file	src/mosquitto_broker_internal.h	/^	char *pid_file;$/;"	m	struct:mosquitto__config
ping_t	lib/mosquitto_internal.h	/^	time_t ping_t;$/;"	m	struct:mosquitto
pingreq_packet	test/lib/01-keepalive-pingreq.py	/^pingreq_packet = mosq_test.gen_pingreq()$/;"	v
pingresp_packet	test/lib/01-keepalive-pingreq.py	/^pingresp_packet = mosq_test.gen_pingresp()$/;"	v
plugin	src/mosquitto_broker_internal.h	/^	struct mosquitto__auth_plugin plugin;$/;"	m	struct:mosquitto__auth_plugin_config	typeref:struct:mosquitto__auth_plugin_config::mosquitto__auth_plugin
plugin_cleanup_v2	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_cleanup_v2 plugin_cleanup_v2;$/;"	m	struct:mosquitto__auth_plugin
plugin_cleanup_v3	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_cleanup_v3 plugin_cleanup_v3;$/;"	m	struct:mosquitto__auth_plugin
plugin_init_v2	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_init_v2 plugin_init_v2;$/;"	m	struct:mosquitto__auth_plugin
plugin_init_v3	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_init_v3 plugin_init_v3;$/;"	m	struct:mosquitto__auth_plugin
plugin_version	src/mosquitto_broker_internal.h	/^	int (*plugin_version)(void);$/;"	m	struct:mosquitto__auth_plugin
pollfd_index	lib/mosquitto_internal.h	/^	int pollfd_index;$/;"	m	struct:mosquitto
port	client/client_shared.h	/^	int port;$/;"	m	struct:mosq_config
port	lib/mosquitto_internal.h	/^	int port;$/;"	m	struct:mosquitto
port	src/mosquitto_broker_internal.h	/^	int port;$/;"	m	struct:bridge_address
port	src/mosquitto_broker_internal.h	/^	uint16_t port;$/;"	m	struct:mosquitto__listener
port	test/broker/01-connect-anon-denied.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-invalid-id-0-311.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-invalid-id-0.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-invalid-id-missing.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-invalid-id-utf8.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-invalid-protonum.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-invalid-reserved.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-success.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-uname-invalid-utf8.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-uname-no-flag.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-uname-no-password-denied.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-uname-password-denied.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-uname-password-success-no-tls.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-uname-password-success.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/01-connect-uname-pwd-no-flag.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-subhier-crash.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-subpub-qos0.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-subpub-qos1.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-subpub-qos2.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-subscribe-invalid-utf8.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-subscribe-persistence-flipflop.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-subscribe-qos0.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-subscribe-qos1.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-subscribe-qos2.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-unsubscribe-invalid-no-topic.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-unsubscribe-qos0.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-unsubscribe-qos1.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/02-unsubscribe-qos2.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/03-pattern-matching-helper.py	/^port = int(sys.argv[2])$/;"	v
port	test/broker/03-publish-b2c-disconnect-qos1-helper.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/03-publish-b2c-disconnect-qos1.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/03-publish-b2c-disconnect-qos2.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/03-publish-c2b-disconnect-qos2.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/03-publish-dollar.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/03-publish-invalid-utf8.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/03-publish-qos1-queued-bytes.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/03-publish-qos1.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/03-publish-qos2.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/04-retain-qos0-clear.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/04-retain-qos0-fresh.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/04-retain-qos0-repeated.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/04-retain-qos0.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/04-retain-qos1-qos0.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/04-retain-upgrade-outgoing-qos.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/05-clean-session-qos1-helper.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/05-clean-session-qos1.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/06-bridge-b2br-remapping.py	/^        port=port2,$/;"	v
port	test/broker/06-bridge-br2b-disconnect-qos1-helper.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/06-bridge-br2b-remapping.py	/^        port=port2,$/;"	v
port	test/broker/06-bridge-per-listener-settings.py	/^        port=port2,$/;"	v
port	test/broker/06-bridge-reconnect-local-out-helper.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/07-will-invalid-utf8.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/07-will-no-flag.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/07-will-null-helper.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/07-will-null-topic.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/07-will-null.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/07-will-qos0-helper.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/07-will-qos0.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/08-ssl-bridge-helper.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/09-plugin-auth-acl-sub.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/09-plugin-auth-context-params.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/09-plugin-auth-defer-unpwd-fail.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/09-plugin-auth-defer-unpwd-success.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/09-plugin-auth-msg-params.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/09-plugin-auth-unpwd-fail.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/09-plugin-auth-unpwd-success.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/09-plugin-auth-v2-unpwd-fail.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/09-plugin-auth-v2-unpwd-success.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/10-listener-mount-point-helper.py	/^port = mosq_test.get_port()$/;"	v
port	test/broker/11-persistent-subscription.py	/^port = mosq_test.get_port()$/;"	v
port	test/lib/01-con-discon-success.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/01-keepalive-pingreq.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/01-no-clean-session.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/01-unpwd-set.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/01-will-set.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/01-will-unpwd-set.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/02-subscribe-qos0.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/02-subscribe-qos1.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/02-subscribe-qos2.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/02-unsubscribe.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/03-publish-b2c-qos1.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/03-publish-b2c-qos2.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/03-publish-c2b-qos1-disconnect.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/03-publish-c2b-qos1-timeout.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/03-publish-c2b-qos2-disconnect.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/03-publish-c2b-qos2-timeout.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/03-publish-c2b-qos2.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/03-publish-qos0-no-payload.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/03-publish-qos0.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/04-retain-qos0.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/08-ssl-connect-cert-auth-enc.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/08-ssl-connect-cert-auth.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/08-ssl-connect-no-auth.py	/^port = mosq_test.get_lib_port()$/;"	v
port	test/lib/08-ssl-fake-cacert.py	/^port = mosq_test.get_lib_port()$/;"	v
ports	test/broker/ptest.py	/^ports = list(range(minport, minport+max_running+1))$/;"	v
ports	test/lib/ptest.py	/^ports = list(range(minport, minport+max_running+1))$/;"	v
pos	lib/mosquitto_internal.h	/^	uint32_t pos;$/;"	m	struct:mosquitto__packet
pp	test/broker/08-tls-psk-bridge.py	/^    pp = ''$/;"	v
pp	test/broker/08-tls-psk-pub.py	/^    pp = ''$/;"	v
pp	test/lib/01-con-discon-success.py	/^    pp = ''$/;"	v
pp	test/lib/01-con-discon-success.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/01-keepalive-pingreq.py	/^    pp = ''$/;"	v
pp	test/lib/01-keepalive-pingreq.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/01-no-clean-session.py	/^    pp = ''$/;"	v
pp	test/lib/01-no-clean-session.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/01-unpwd-set.py	/^    pp = ''$/;"	v
pp	test/lib/01-unpwd-set.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/01-will-set.py	/^    pp = ''$/;"	v
pp	test/lib/01-will-set.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/01-will-unpwd-set.py	/^    pp = ''$/;"	v
pp	test/lib/01-will-unpwd-set.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/02-subscribe-qos0.py	/^    pp = ''$/;"	v
pp	test/lib/02-subscribe-qos0.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/02-subscribe-qos1.py	/^    pp = ''$/;"	v
pp	test/lib/02-subscribe-qos1.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/02-subscribe-qos2.py	/^    pp = ''$/;"	v
pp	test/lib/02-subscribe-qos2.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/02-unsubscribe.py	/^    pp = ''$/;"	v
pp	test/lib/02-unsubscribe.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/03-publish-b2c-qos1.py	/^    pp = ''$/;"	v
pp	test/lib/03-publish-b2c-qos1.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/03-publish-b2c-qos2.py	/^    pp = ''$/;"	v
pp	test/lib/03-publish-b2c-qos2.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/03-publish-c2b-qos1-disconnect.py	/^    pp = ''$/;"	v
pp	test/lib/03-publish-c2b-qos1-disconnect.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/03-publish-c2b-qos1-timeout.py	/^    pp = ''$/;"	v
pp	test/lib/03-publish-c2b-qos1-timeout.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/03-publish-c2b-qos2-disconnect.py	/^    pp = ''$/;"	v
pp	test/lib/03-publish-c2b-qos2-disconnect.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/03-publish-c2b-qos2-timeout.py	/^    pp = ''$/;"	v
pp	test/lib/03-publish-c2b-qos2-timeout.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/03-publish-c2b-qos2.py	/^    pp = ''$/;"	v
pp	test/lib/03-publish-c2b-qos2.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/03-publish-qos0-no-payload.py	/^    pp = ''$/;"	v
pp	test/lib/03-publish-qos0-no-payload.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/03-publish-qos0.py	/^    pp = ''$/;"	v
pp	test/lib/03-publish-qos0.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/04-retain-qos0.py	/^    pp = ''$/;"	v
pp	test/lib/04-retain-qos0.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/08-ssl-bad-cacert.py	/^    pp = ''$/;"	v
pp	test/lib/08-ssl-bad-cacert.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/08-ssl-connect-cert-auth-enc.py	/^    pp = ''$/;"	v
pp	test/lib/08-ssl-connect-cert-auth-enc.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/08-ssl-connect-cert-auth.py	/^    pp = ''$/;"	v
pp	test/lib/08-ssl-connect-cert-auth.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/08-ssl-connect-no-auth.py	/^    pp = ''$/;"	v
pp	test/lib/08-ssl-connect-no-auth.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/08-ssl-fake-cacert.py	/^    pp = ''$/;"	v
pp	test/lib/08-ssl-fake-cacert.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/09-util-topic-matching.py	/^    pp = ''$/;"	v
pp	test/lib/09-util-topic-matching.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/09-util-topic-tokenise.py	/^    pp = ''$/;"	v
pp	test/lib/09-util-topic-tokenise.py	/^    pp = env['PYTHONPATH']$/;"	v
pp	test/lib/09-util-utf8-validate.py	/^    pp = ''$/;"	v
pp	test/lib/09-util-utf8-validate.py	/^    pp = env['PYTHONPATH']$/;"	v
prefix	config.mk	/^prefix?=\/usr\/local$/;"	m
prev	src/deps/uthash.h	/^   void *prev;                       \/* prev element in app order      *\/$/;"	m	struct:UT_hash_handle
prev	src/mosquitto_broker_internal.h	/^	struct mosquitto__subleaf *prev;$/;"	m	struct:mosquitto__subleaf	typeref:struct:mosquitto__subleaf::mosquitto__subleaf
prev	src/mosquitto_broker_internal.h	/^	struct mosquitto_msg_store *prev;$/;"	m	struct:mosquitto_msg_store	typeref:struct:mosquitto_msg_store::mosquitto_msg_store
primary_retry	src/mosquitto_broker_internal.h	/^	time_t primary_retry;$/;"	m	struct:mosquitto__bridge
primary_retry_sock	src/mosquitto_broker_internal.h	/^	mosq_sock_t primary_retry_sock;$/;"	m	struct:mosquitto__bridge
print_db_client	src/db_dump/db_dump.cpp	/^print_db_client(struct db_client *client, int length)$/;"	f	file:
print_db_client_msg	src/db_dump/db_dump.cpp	/^print_db_client_msg(struct db_client_msg *msg, int length)$/;"	f	file:
print_db_msg	src/db_dump/db_dump.cpp	/^print_db_msg(struct db_msg *msg, int length)$/;"	f	file:
print_db_sub	src/db_dump/db_dump.cpp	/^print_db_sub(struct db_sub *sub, int length)$/;"	f	file:
print_error	test/lib/c/09-util-topic-tokenise.cpp	/^void print_error(const char *topic, char **topics, int topic_count)$/;"	f
print_error	test/lib/cpp/09-util-topic-tokenise.cpp	/^void print_error(const char *topic, char **topics, int topic_count)$/;"	f
print_message	client/sub_client_output.cpp	/^void print_message(struct mosq_config *cfg, const struct mosquitto_message *message)$/;"	f
print_usage	client/pub_client.cpp	/^void print_usage(void)$/;"	f
print_usage	client/sub_client.cpp	/^void print_usage(void)$/;"	f
print_usage	src/conf.cpp	/^static void print_usage(void)$/;"	f	file:
print_usage	src/mosquitto_passwd.cpp	/^void print_usage(void)$/;"	f
protocol	lib/mosquitto_internal.h	/^	enum mosquitto__protocol protocol;$/;"	m	struct:mosquitto	typeref:enum:mosquitto::mosquitto__protocol
protocol	src/mosquitto_broker_internal.h	/^	enum mosquitto_protocol protocol;$/;"	m	struct:mosquitto__listener	typeref:enum:mosquitto__listener::mosquitto_protocol
protocol_version	client/client_shared.h	/^	int protocol_version;$/;"	m	struct:mosq_config
protocol_version	src/mosquitto_broker_internal.h	/^	enum mosquitto__protocol protocol_version;$/;"	m	struct:mosquitto__bridge	typeref:enum:mosquitto__bridge::mosquitto__protocol
protocols	src/websockets.cpp	/^static struct libwebsocket_protocols protocols[] = {$/;"	v	typeref:struct:libwebsocket_protocols	file:
psk	client/client_shared.h	/^	char *psk;$/;"	m	struct:mosq_config
psk__file_parse	src/security_default.cpp	/^static int psk__file_parse(struct mosquitto_db *db, struct mosquitto__unpwd **psk_id, const char *psk_file)$/;"	f	file:
psk_client_callback	lib/net_mosq.cpp	/^static unsigned int psk_client_callback(SSL *ssl, const char *hint,$/;"	f	file:
psk_file	src/mosquitto_broker_internal.h	/^	char *psk_file;$/;"	m	struct:mosquitto__security_options
psk_hint	src/mosquitto_broker_internal.h	/^	char *psk_hint;$/;"	m	struct:mosquitto__listener
psk_id	src/mosquitto_broker_internal.h	/^	struct mosquitto__unpwd *psk_id;$/;"	m	struct:mosquitto__listener	typeref:struct:mosquitto__listener::mosquitto__unpwd
psk_id	src/mosquitto_broker_internal.h	/^	struct mosquitto__unpwd *psk_id;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::mosquitto__unpwd
psk_identity	client/client_shared.h	/^	char *psk_identity;$/;"	m	struct:mosq_config
psk_key_get_v2	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_psk_key_get_v2 psk_key_get_v2;$/;"	m	struct:mosquitto__auth_plugin
psk_key_get_v3	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_psk_key_get_v3 psk_key_get_v3;$/;"	m	struct:mosquitto__auth_plugin
psk_server_callback	src/net.cpp	/^static unsigned int psk_server_callback(SSL *ssl, const char *identity, unsigned char *psk, unsigned int max_psk_len)$/;"	f	file:
pthread_cancel	lib/dummypthread.h	6;"	d
pthread_create	lib/dummypthread.h	4;"	d
pthread_join	lib/dummypthread.h	5;"	d
pthread_mutex_destroy	lib/dummypthread.h	9;"	d
pthread_mutex_init	lib/dummypthread.h	8;"	d
pthread_mutex_lock	lib/dummypthread.h	10;"	d
pthread_mutex_unlock	lib/dummypthread.h	11;"	d
ptr	src/mosquitto_broker_internal.h	/^	char *ptr;$/;"	m	union:__anon2
ptr	src/mosquitto_broker_internal.h	/^	void *ptr;$/;"	m	union:__anon1
pub	test/broker/03-publish-b2c-disconnect-qos1.py	/^    pub = subprocess.Popen(['.\/03-publish-b2c-disconnect-qos1-helper.py', str(port)], stdout=subprocess.PIPE, stderr=subprocess.PIPE)$/;"	v
pub	test/broker/03-publish-b2c-disconnect-qos2.py	/^    pub = subprocess.Popen(['.\/03-publish-b2c-disconnect-qos2-helper.py', str(port)], stdout=subprocess.PIPE, stderr=subprocess.PIPE)$/;"	v
pub	test/broker/03-publish-b2c-timeout-qos1.py	/^    pub = subprocess.Popen(['.\/03-publish-b2c-timeout-qos1-helper.py'], stdout=subprocess.PIPE, stderr=subprocess.PIPE))$/;"	v
pub	test/broker/03-publish-b2c-timeout-qos2.py	/^    pub = subprocess.Popen(['.\/03-publish-b2c-timeout-qos2-helper.py'], stdout=subprocess.PIPE, stderr=subprocess.PIPE))$/;"	v
pub	test/broker/05-clean-session-qos1.py	/^    pub = subprocess.Popen(['.\/05-clean-session-qos1-helper.py', str(port)], stdout=subprocess.PIPE, stderr=subprocess.PIPE)$/;"	v
pub	test/broker/06-bridge-reconnect-local-out.py	/^pub = None$/;"	v
pub	test/broker/08-tls-psk-bridge.py	/^    pub = subprocess.Popen(['.\/c\/08-tls-psk-bridge.test', str(port3)], env=env, stdout=subprocess.PIPE, stderr=subprocess.PIPE)$/;"	v
pub	test/broker/08-tls-psk-bridge.py	/^pub = None$/;"	v
pub	test/broker/08-tls-psk-pub.py	/^    pub = subprocess.Popen(['.\/c\/08-tls-psk-pub.test', str(port1)], env=env, stdout=subprocess.PIPE, stderr=subprocess.PIPE)$/;"	v
pub_mode	client/client_shared.h	/^	int pub_mode; \/* pub *\/$/;"	m	struct:mosq_config
pub_sock	test/broker/02-subscribe-persistence-flipflop.py	/^    pub_sock = mosq_test.do_client_connect(connect_packet_pub, connack_packet_pub, port=port)$/;"	v
puback2_packet	test/broker/03-publish-b2c-disconnect-qos1.py	/^puback2_packet = mosq_test.gen_puback(mid)$/;"	v
puback2_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^puback2_packet = mosq_test.gen_puback(mid)$/;"	v
puback2_packet	test/broker/06-bridge-b2br-disconnect-qos1.py	/^puback2_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/02-subpub-qos1.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/02-subscribe-persistence-flipflop.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/03-publish-b2c-disconnect-qos1-helper.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/03-publish-b2c-disconnect-qos1.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/03-publish-b2c-timeout-qos1-helper.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/03-publish-b2c-timeout-qos1.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/03-publish-dollar.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/03-publish-invalid-utf8.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/03-publish-qos1.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/04-retain-qos1-qos0.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/05-clean-session-qos1-helper.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/05-clean-session-qos1.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/06-bridge-b2br-disconnect-qos1.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/06-bridge-br2b-disconnect-qos1-helper.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/06-bridge-br2b-disconnect-qos1.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/06-bridge-fail-persist-resend-qos1.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/06-bridge-fail-persist-resend-qos2.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/06-bridge-reconnect-local-out-helper.py	/^puback_packet = mosq_test.gen_puback(mid=1)$/;"	v
puback_packet	test/broker/09-plugin-auth-context-params.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/09-plugin-auth-msg-params.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/broker/11-persistent-subscription.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/lib/03-publish-b2c-qos1.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/lib/03-publish-c2b-qos1-disconnect.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet	test/lib/03-publish-c2b-qos1-timeout.py	/^puback_packet = mosq_test.gen_puback(mid)$/;"	v
puback_packet_unknown	test/broker/06-bridge-fail-persist-resend-qos1.py	/^puback_packet_unknown = mosq_test.gen_puback(mid_unknown)$/;"	v
pubcomp_packet	test/broker/02-subpub-qos2.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/broker/03-publish-b2c-timeout-qos2.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/broker/03-publish-c2b-disconnect-qos2.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/broker/03-publish-c2b-timeout-qos2.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/broker/03-publish-qos2.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/lib/03-publish-b2c-qos2.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/lib/03-publish-c2b-qos2-disconnect.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/lib/03-publish-c2b-qos2-timeout.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet	test/lib/03-publish-c2b-qos2.py	/^pubcomp_packet = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet2	test/broker/02-subpub-qos2.py	/^pubcomp_packet2 = mosq_test.gen_pubcomp(mid)$/;"	v
pubcomp_packet_unknown2	test/broker/06-bridge-fail-persist-resend-qos2.py	/^pubcomp_packet_unknown2 = mosq_test.gen_pubcomp(mid_unknown+2)$/;"	v
pubcomp_packet_unknown3	test/broker/06-bridge-fail-persist-resend-qos2.py	/^pubcomp_packet_unknown3 = mosq_test.gen_pubcomp(mid_unknown+3)$/;"	v
publish	lib/cpp/mosquittopp.cpp	/^int mosquittopp::publish(int *mid, const char *topic, int payloadlen, const void *payload, int qos, bool retain)$/;"	f	class:mosqpp::mosquittopp
publish0_packet	test/broker/04-retain-qos1-qos0.py	/^publish0_packet = mosq_test.gen_publish("retain\/qos1\/test", qos=0, payload="retained message", retain=True)$/;"	v
publish2_packet	test/broker/03-publish-b2c-disconnect-qos1.py	/^publish2_packet = mosq_test.gen_publish("qos1\/outgoing", qos=1, mid=mid, payload="outgoing-message")$/;"	v
publish2_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^publish2_packet = mosq_test.gen_publish("qos1\/outgoing", qos=1, mid=mid, payload="outgoing-message")$/;"	v
publish2_packet	test/broker/06-bridge-b2br-disconnect-qos1.py	/^publish2_packet = mosq_test.gen_publish("bridge\/disconnect\/test", qos=1, mid=mid, payload="disconnect-message")$/;"	v
publish_dropped	test/broker/03-publish-qos1-queued-bytes.py	/^    def publish_dropped(self, client, userdata, message):$/;"	m	class:BrokerMonitor
publish_dup_packet	test/broker/03-publish-b2c-disconnect-qos1.py	/^publish_dup_packet = mosq_test.gen_publish("qos1\/disconnect\/test", qos=1, mid=mid, payload="disconnect-message", dup=True)$/;"	v
publish_dup_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^publish_dup_packet = mosq_test.gen_publish("qos2\/disconnect\/test", qos=2, mid=mid, payload="disconnect-message", dup=True)$/;"	v
publish_dup_packet	test/broker/03-publish-b2c-timeout-qos1.py	/^publish_dup_packet = mosq_test.gen_publish("qos1\/timeout\/test", qos=1, mid=mid, payload="timeout-message", dup=True)$/;"	v
publish_dup_packet	test/broker/03-publish-b2c-timeout-qos2.py	/^publish_dup_packet = mosq_test.gen_publish("qos2\/timeout\/test", qos=2, mid=mid, payload="timeout-message", dup=True)$/;"	v
publish_dup_packet	test/broker/03-publish-c2b-disconnect-qos2.py	/^publish_dup_packet = mosq_test.gen_publish("qos2\/disconnect\/test", qos=2, mid=mid, payload="disconnect-message", dup=True)$/;"	v
publish_dup_packet	test/broker/06-bridge-b2br-disconnect-qos1.py	/^publish_dup_packet = mosq_test.gen_publish("bridge\/disconnect\/test", qos=1, mid=mid, payload="disconnect-message", dup=True)$/;"	v
publish_dup_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^publish_dup_packet = mosq_test.gen_publish("bridge\/disconnect\/test", qos=2, mid=mid, payload="disconnect-message", dup=True)$/;"	v
publish_dup_packet	test/broker/06-bridge-br2b-disconnect-qos1.py	/^publish_dup_packet = mosq_test.gen_publish("bridge\/disconnect\/test", qos=1, mid=mid, payload="disconnect-message", dup=True)$/;"	v
publish_dup_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^publish_dup_packet = mosq_test.gen_publish("bridge\/disconnect\/test", qos=2, mid=mid, payload="disconnect-message", dup=True)$/;"	v
publish_dup_packet	test/lib/03-publish-c2b-qos2-disconnect.py	/^publish_dup_packet = mosq_test.gen_publish("pub\/qos2\/test", qos=2, mid=mid, payload="message", dup=True)$/;"	v
publish_dup_packet	test/lib/03-publish-c2b-qos2-timeout.py	/^publish_dup_packet = mosq_test.gen_publish("pub\/qos2\/test", qos=2, mid=mid, payload="message", dup=True)$/;"	v
publish_dup_packet	test/lib/03-publish-c2b-qos2.py	/^publish_dup_packet = mosq_test.gen_publish("pub\/qos2\/test", qos=2, mid=mid, payload="message", dup=True)$/;"	v
publish_fresh_packet	test/broker/04-retain-qos0-fresh.py	/^publish_fresh_packet = mosq_test.gen_publish("retain\/qos0\/test", qos=0, payload="retained message")$/;"	v
publish_packet	test/broker/02-subpub-qos0.py	/^publish_packet = mosq_test.gen_publish("subpub\/qos0", qos=0, payload="message")$/;"	v
publish_packet	test/broker/02-subpub-qos1.py	/^publish_packet = mosq_test.gen_publish("subpub\/qos1", qos=1, mid=mid, payload="message")$/;"	v
publish_packet	test/broker/02-subpub-qos2.py	/^publish_packet = mosq_test.gen_publish("subpub\/qos2", qos=2, mid=mid, payload="message")$/;"	v
publish_packet	test/broker/02-subscribe-persistence-flipflop.py	/^publish_packet = mosq_test.gen_publish("flipflop\/test", qos=1, mid=mid, payload="message")$/;"	v
publish_packet	test/broker/03-pattern-matching-helper.py	/^publish_packet = mosq_test.gen_publish(sys.argv[1], qos=0, retain=True, payload="message")$/;"	v
publish_packet	test/broker/03-publish-b2c-disconnect-qos1-helper.py	/^publish_packet = mosq_test.gen_publish("qos1\/disconnect\/test", qos=1, mid=mid, payload="disconnect-message")$/;"	v
publish_packet	test/broker/03-publish-b2c-disconnect-qos1.py	/^publish_packet = mosq_test.gen_publish("qos1\/disconnect\/test", qos=1, mid=mid, payload="disconnect-message")$/;"	v
publish_packet	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^publish_packet = mosq_test.gen_publish("qos2\/disconnect\/test", qos=2, mid=mid, payload="disconnect-message")$/;"	v
publish_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^publish_packet = mosq_test.gen_publish("qos2\/disconnect\/test", qos=2, mid=mid, payload="disconnect-message")$/;"	v
publish_packet	test/broker/03-publish-b2c-timeout-qos1-helper.py	/^publish_packet = mosq_test.gen_publish("qos1\/timeout\/test", qos=1, mid=mid, payload="timeout-message")$/;"	v
publish_packet	test/broker/03-publish-b2c-timeout-qos1.py	/^publish_packet = mosq_test.gen_publish("qos1\/timeout\/test", qos=1, mid=mid, payload="timeout-message")$/;"	v
publish_packet	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^publish_packet = mosq_test.gen_publish("qos2\/timeout\/test", qos=2, mid=mid, payload="timeout-message")$/;"	v
publish_packet	test/broker/03-publish-b2c-timeout-qos2.py	/^publish_packet = mosq_test.gen_publish("qos2\/timeout\/test", qos=2, mid=mid, payload="timeout-message")$/;"	v
publish_packet	test/broker/03-publish-c2b-disconnect-qos2.py	/^publish_packet = mosq_test.gen_publish("qos2\/disconnect\/test", qos=2, mid=mid, payload="disconnect-message")$/;"	v
publish_packet	test/broker/03-publish-c2b-timeout-qos2.py	/^publish_packet = mosq_test.gen_publish("pub\/qos2\/test", qos=2, mid=mid, payload="timeout-message")$/;"	v
publish_packet	test/broker/03-publish-dollar.py	/^publish_packet = mosq_test.gen_publish("$test\/test", qos=1, mid=mid, payload="message")$/;"	v
publish_packet	test/broker/03-publish-invalid-utf8.py	/^publish_packet = mosq_test.gen_publish("invalid\/utf8", 1, mid=mid)$/;"	v
publish_packet	test/broker/03-publish-invalid-utf8.py	/^publish_packet = struct.pack("B"*len(b), *b)$/;"	v
publish_packet	test/broker/03-publish-qos1.py	/^publish_packet = mosq_test.gen_publish("pub\/qos1\/test", qos=1, mid=mid, payload="message")$/;"	v
publish_packet	test/broker/03-publish-qos2.py	/^publish_packet = mosq_test.gen_publish("pub\/qos2\/test", qos=2, mid=mid, payload="message")$/;"	v
publish_packet	test/broker/04-retain-qos0-clear.py	/^publish_packet = mosq_test.gen_publish("retain\/clear\/test", qos=0, payload="retained message", retain=True)$/;"	v
publish_packet	test/broker/04-retain-qos0-fresh.py	/^publish_packet = mosq_test.gen_publish("retain\/qos0\/test", qos=0, payload="retained message", retain=True)$/;"	v
publish_packet	test/broker/04-retain-qos0-repeated.py	/^publish_packet = mosq_test.gen_publish("retain\/qos0\/test", qos=0, payload="retained message", retain=True)$/;"	v
publish_packet	test/broker/04-retain-qos0.py	/^publish_packet = mosq_test.gen_publish("retain\/qos0\/test", qos=0, payload="retained message", retain=True)$/;"	v
publish_packet	test/broker/04-retain-qos1-qos0.py	/^publish_packet = mosq_test.gen_publish("retain\/qos1\/test", qos=1, mid=mid, payload="retained message", retain=True)$/;"	v
publish_packet	test/broker/04-retain-upgrade-outgoing-qos.py	/^publish_packet = mosq_test.gen_publish("retain\/qos0\/test", qos=0, payload="retained message", retain=True)$/;"	v
publish_packet	test/broker/05-clean-session-qos1-helper.py	/^publish_packet = mosq_test.gen_publish("qos1\/clean_session\/test", qos=1, mid=mid, payload="clean-session-message")$/;"	v
publish_packet	test/broker/05-clean-session-qos1.py	/^publish_packet = mosq_test.gen_publish("qos1\/clean_session\/test", qos=1, mid=mid, payload="clean-session-message")$/;"	v
publish_packet	test/broker/06-bridge-b2br-disconnect-qos1.py	/^publish_packet = mosq_test.gen_publish("bridge\/disconnect\/test", qos=1, mid=mid, payload="disconnect-message")$/;"	v
publish_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^publish_packet = mosq_test.gen_publish("bridge\/disconnect\/test", qos=2, mid=mid, payload="disconnect-message")$/;"	v
publish_packet	test/broker/06-bridge-br2b-disconnect-qos1-helper.py	/^publish_packet = mosq_test.gen_publish("bridge\/disconnect\/test", qos=1, mid=mid, payload="disconnect-message")$/;"	v
publish_packet	test/broker/06-bridge-br2b-disconnect-qos1.py	/^publish_packet = mosq_test.gen_publish("bridge\/disconnect\/test", qos=1, mid=mid, payload="disconnect-message")$/;"	v
publish_packet	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^publish_packet = mosq_test.gen_publish("bridge\/disconnect\/test", qos=2, mid=mid, payload="disconnect-message")$/;"	v
publish_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^publish_packet = mosq_test.gen_publish("bridge\/disconnect\/test", qos=2, mid=mid, payload="disconnect-message")$/;"	v
publish_packet	test/broker/06-bridge-fail-persist-resend-qos1.py	/^publish_packet = mosq_test.gen_publish("bridge\/unknown\/qos1", qos=1, payload="bridge-message", mid=mid)$/;"	v
publish_packet	test/broker/06-bridge-fail-persist-resend-qos2.py	/^publish_packet = mosq_test.gen_publish("bridge\/unknown\/qos2", qos=1, payload="bridge-message", mid=mid)$/;"	v
publish_packet	test/broker/06-bridge-reconnect-local-out-helper.py	/^publish_packet = mosq_test.gen_publish("bridge\/reconnect", qos=1, mid=1, payload="bridge-reconnect-message")$/;"	v
publish_packet	test/broker/06-bridge-reconnect-local-out.py	/^publish_packet = mosq_test.gen_publish("bridge\/reconnect", qos=0, payload="bridge-reconnect-message")$/;"	v
publish_packet	test/broker/07-will-null.py	/^publish_packet = mosq_test.gen_publish("will\/null\/test", qos=0)$/;"	v
publish_packet	test/broker/07-will-qos0.py	/^publish_packet = mosq_test.gen_publish("will\/qos0\/test", qos=0, payload="will-message")$/;"	v
publish_packet	test/broker/08-ssl-bridge-helper.py	/^publish_packet = mosq_test.gen_publish("bridge\/ssl\/test", qos=0, payload="message")$/;"	v
publish_packet	test/broker/08-ssl-bridge.py	/^publish_packet = mosq_test.gen_publish("bridge\/ssl\/test", qos=0, payload="message")$/;"	v
publish_packet	test/broker/08-tls-psk-bridge.py	/^publish_packet = mosq_test.gen_publish(topic="psk\/test", payload="message", qos=0)$/;"	v
publish_packet	test/broker/08-tls-psk-pub.py	/^publish_packet = mosq_test.gen_publish(topic="psk\/test", payload="message", qos=0)$/;"	v
publish_packet	test/broker/09-plugin-auth-context-params.py	/^publish_packet = mosq_test.gen_publish(topic="param\/topic", qos=1, payload="payload contents", retain=1, mid=mid)$/;"	v
publish_packet	test/broker/09-plugin-auth-msg-params.py	/^publish_packet = mosq_test.gen_publish(topic="param\/topic", qos=1, payload="payload contents", retain=1, mid=mid)$/;"	v
publish_packet	test/broker/10-listener-mount-point-helper.py	/^publish_packet = mosq_test.gen_publish("test", qos=0, payload="mount point")$/;"	v
publish_packet	test/broker/10-listener-mount-point.py	/^publish_packet = mosq_test.gen_publish("mount\/test", qos=0, payload="mount point")$/;"	v
publish_packet	test/broker/11-persistent-subscription.py	/^publish_packet = mosq_test.gen_publish("subpub\/qos1", qos=1, mid=mid, payload="message")$/;"	v
publish_packet	test/lib/03-publish-b2c-qos1.py	/^publish_packet = mosq_test.gen_publish("pub\/qos1\/receive", qos=1, mid=mid, payload="message")$/;"	v
publish_packet	test/lib/03-publish-b2c-qos2.py	/^publish_packet = mosq_test.gen_publish("pub\/qos2\/receive", qos=2, mid=mid, payload="message")$/;"	v
publish_packet	test/lib/03-publish-c2b-qos1-disconnect.py	/^publish_packet = mosq_test.gen_publish("pub\/qos1\/test", qos=1, mid=mid, payload="message")$/;"	v
publish_packet	test/lib/03-publish-c2b-qos1-timeout.py	/^publish_packet = mosq_test.gen_publish("pub\/qos1\/test", qos=1, mid=mid, payload="message")$/;"	v
publish_packet	test/lib/03-publish-c2b-qos2-disconnect.py	/^publish_packet = mosq_test.gen_publish("pub\/qos2\/test", qos=2, mid=mid, payload="message")$/;"	v
publish_packet	test/lib/03-publish-c2b-qos2-timeout.py	/^publish_packet = mosq_test.gen_publish("pub\/qos2\/test", qos=2, mid=mid, payload="message")$/;"	v
publish_packet	test/lib/03-publish-c2b-qos2.py	/^publish_packet = mosq_test.gen_publish("pub\/qos2\/test", qos=2, mid=mid, payload="message")$/;"	v
publish_packet	test/lib/03-publish-qos0-no-payload.py	/^publish_packet = mosq_test.gen_publish("pub\/qos0\/no-payload\/test", qos=0)$/;"	v
publish_packet	test/lib/03-publish-qos0.py	/^publish_packet = mosq_test.gen_publish("pub\/qos0\/test", qos=0, payload="message")$/;"	v
publish_packet	test/lib/04-retain-qos0.py	/^publish_packet = mosq_test.gen_publish("retain\/qos0\/test", qos=0, payload="retained message", retain=True)$/;"	v
publish_packet2	test/broker/02-subpub-qos1.py	/^publish_packet2 = mosq_test.gen_publish("subpub\/qos1", qos=1, mid=mid, payload="message")$/;"	v
publish_packet2	test/broker/02-subpub-qos2.py	/^publish_packet2 = mosq_test.gen_publish("subpub\/qos2", qos=2, mid=mid, payload="message")$/;"	v
publish_packet2	test/broker/04-retain-upgrade-outgoing-qos.py	/^publish_packet2 = mosq_test.gen_publish("retain\/qos0\/test", mid=1, qos=1, payload="retained message", retain=True)$/;"	v
publish_packet2	test/broker/11-persistent-subscription.py	/^publish_packet2 = mosq_test.gen_publish("subpub\/qos1", qos=1, mid=mid, payload="message")$/;"	v
publish_packet_dup	test/lib/03-publish-c2b-qos1-disconnect.py	/^publish_packet_dup = mosq_test.gen_publish("pub\/qos1\/test", qos=1, mid=mid, payload="message", dup=True)$/;"	v
publish_packet_dup	test/lib/03-publish-c2b-qos1-timeout.py	/^publish_packet_dup = mosq_test.gen_publish("pub\/qos1\/test", qos=1, mid=mid, payload="message", dup=True)$/;"	v
publish_packet_recv	test/broker/09-plugin-auth-context-params.py	/^publish_packet_recv = mosq_test.gen_publish(topic="param\/topic", qos=1, payload="payload contents", retain=0, mid=mid)$/;"	v
publish_packet_recv	test/broker/09-plugin-auth-msg-params.py	/^publish_packet_recv = mosq_test.gen_publish(topic="param\/topic", qos=1, payload="payload contents", retain=0, mid=mid)$/;"	v
pubrec_packet	test/broker/02-subpub-qos2.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/broker/03-publish-b2c-timeout-qos2.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/broker/03-publish-c2b-disconnect-qos2.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/broker/03-publish-c2b-timeout-qos2.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/broker/03-publish-qos2.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/lib/03-publish-b2c-qos2.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/lib/03-publish-c2b-qos2-disconnect.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/lib/03-publish-c2b-qos2-timeout.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet	test/lib/03-publish-c2b-qos2.py	/^pubrec_packet = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet2	test/broker/02-subpub-qos2.py	/^pubrec_packet2 = mosq_test.gen_pubrec(mid)$/;"	v
pubrec_packet_unknown1	test/broker/06-bridge-fail-persist-resend-qos2.py	/^pubrec_packet_unknown1 = mosq_test.gen_pubrec(mid_unknown+1)$/;"	v
pubrel_dup_packet	test/broker/03-publish-c2b-disconnect-qos2.py	/^pubrel_dup_packet = mosq_test.gen_pubrel(mid, dup=True)$/;"	v
pubrel_packet	test/broker/02-subpub-qos2.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/broker/03-publish-b2c-timeout-qos2.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/broker/03-publish-c2b-disconnect-qos2.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/broker/03-publish-c2b-timeout-qos2.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/broker/03-publish-qos2.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/lib/03-publish-b2c-qos2.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/lib/03-publish-c2b-qos2-disconnect.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/lib/03-publish-c2b-qos2-timeout.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet	test/lib/03-publish-c2b-qos2.py	/^pubrel_packet = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet2	test/broker/02-subpub-qos2.py	/^pubrel_packet2 = mosq_test.gen_pubrel(mid)$/;"	v
pubrel_packet_unknown1	test/broker/06-bridge-fail-persist-resend-qos2.py	/^pubrel_packet_unknown1 = mosq_test.gen_pubrel(mid_unknown+1)$/;"	v
pubrel_packet_unknown2	test/broker/06-bridge-fail-persist-resend-qos2.py	/^pubrel_packet_unknown2 = mosq_test.gen_pubrel(mid_unknown+2)$/;"	v
pw__digest	src/security_default.cpp	/^int pw__digest(const char *password, const unsigned char *salt, unsigned int salt_len, unsigned char *hash, unsigned int *hash_len)$/;"	f
pw_callback	lib/mosquitto.h	/^	int (*pw_callback)(char *buf, int size, int rwflag, void *userdata);$/;"	m	struct:libmosquitto_tls
pwfile__parse	src/security_default.cpp	/^static int pwfile__parse(const char *file, struct mosquitto__unpwd **root)$/;"	f	file:
qos	client/client_shared.h	/^	int qos;$/;"	m	struct:mosq_config
qos	client/pub_client.cpp	/^static int qos = 0;$/;"	v	file:
qos	lib/helpers.cpp	/^	int qos;$/;"	m	struct:userdata__callback	file:
qos	lib/mosquitto.h	/^	int qos;$/;"	m	struct:libmosquitto_will
qos	lib/mosquitto.h	/^	int qos;$/;"	m	struct:mosquitto_message
qos	src/db_dump/db_dump.cpp	/^	uint8_t qos, retain, direction, state, dup;$/;"	m	struct:db_client_msg	file:
qos	src/db_dump/db_dump.cpp	/^	uint8_t qos, retain;$/;"	m	struct:db_msg	file:
qos	src/db_dump/db_dump.cpp	/^	uint8_t qos;$/;"	m	struct:db_sub	file:
qos	src/mosquitto_broker_internal.h	/^	int qos;$/;"	m	struct:mosquitto__bridge_topic
qos	src/mosquitto_broker_internal.h	/^	int qos;$/;"	m	struct:mosquitto__subleaf
qos	src/mosquitto_broker_internal.h	/^	uint8_t qos;$/;"	m	struct:mosquitto_client_msg
qos	src/mosquitto_broker_internal.h	/^	uint8_t qos;$/;"	m	struct:mosquitto_msg_store
qos	src/mosquitto_plugin.h	/^	int qos;$/;"	m	struct:mosquitto_acl_msg
qos	test/qos.cpp	/^	int qos;$/;"	m	struct:sub	file:
queue_qos0_messages	src/mosquitto_broker_internal.h	/^	bool queue_qos0_messages;$/;"	m	struct:mosquitto__config
queued_msgs	lib/mosquitto_internal.h	/^	struct mosquitto_client_msg *queued_msgs;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_client_msg
quiet	client/client_shared.h	/^	bool quiet;$/;"	m	struct:mosq_config
quiet	client/pub_client.cpp	/^static bool quiet = false;$/;"	v	file:
rand_publish	test/qos.cpp	/^void rand_publish(struct mosquitto *mosq, const char *topic, int qos)$/;"	f
rc	lib/helpers.cpp	/^	int rc;$/;"	m	struct:userdata__callback	file:
rc	test/broker/01-connect-anon-denied.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-invalid-id-0-311.py	/^    rc = 0$/;"	v
rc	test/broker/01-connect-invalid-id-0-311.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-invalid-id-0.py	/^    rc = 0$/;"	v
rc	test/broker/01-connect-invalid-id-0.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-invalid-id-missing.py	/^    rc = 0$/;"	v
rc	test/broker/01-connect-invalid-id-missing.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-invalid-id-utf8.py	/^    rc = 0$/;"	v
rc	test/broker/01-connect-invalid-id-utf8.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-invalid-protonum.py	/^    rc = 0$/;"	v
rc	test/broker/01-connect-invalid-protonum.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-invalid-reserved.py	/^    rc = 0$/;"	v
rc	test/broker/01-connect-invalid-reserved.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-success.py	/^    rc = 0$/;"	v
rc	test/broker/01-connect-success.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-uname-invalid-utf8.py	/^    rc = 0$/;"	v
rc	test/broker/01-connect-uname-invalid-utf8.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-uname-no-flag.py	/^    rc = 0$/;"	v
rc	test/broker/01-connect-uname-no-flag.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-uname-no-password-denied.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-uname-password-denied.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-uname-password-success-no-tls.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-uname-password-success.py	/^rc = 1$/;"	v
rc	test/broker/01-connect-uname-pwd-no-flag.py	/^    rc = 0$/;"	v
rc	test/broker/01-connect-uname-pwd-no-flag.py	/^rc = 1$/;"	v
rc	test/broker/02-subhier-crash.py	/^    rc = 0$/;"	v
rc	test/broker/02-subhier-crash.py	/^rc = 1$/;"	v
rc	test/broker/02-subpub-qos0.py	/^    rc = 0$/;"	v
rc	test/broker/02-subpub-qos0.py	/^rc = 1$/;"	v
rc	test/broker/02-subpub-qos1.py	/^        rc = 0$/;"	v
rc	test/broker/02-subpub-qos1.py	/^rc = 1$/;"	v
rc	test/broker/02-subpub-qos2.py	/^        rc = 0$/;"	v
rc	test/broker/02-subpub-qos2.py	/^rc = 1$/;"	v
rc	test/broker/02-subscribe-invalid-utf8.py	/^    rc = 0$/;"	v
rc	test/broker/02-subscribe-invalid-utf8.py	/^rc = 1$/;"	v
rc	test/broker/02-subscribe-persistence-flipflop.py	/^        rc = 0$/;"	v
rc	test/broker/02-subscribe-persistence-flipflop.py	/^rc = 1$/;"	v
rc	test/broker/02-subscribe-qos0.py	/^    rc = 0$/;"	v
rc	test/broker/02-subscribe-qos0.py	/^rc = 1$/;"	v
rc	test/broker/02-subscribe-qos1.py	/^    rc = 0$/;"	v
rc	test/broker/02-subscribe-qos1.py	/^rc = 1$/;"	v
rc	test/broker/02-subscribe-qos2.py	/^    rc = 0$/;"	v
rc	test/broker/02-subscribe-qos2.py	/^rc = 1$/;"	v
rc	test/broker/02-unsubscribe-invalid-no-topic.py	/^    rc = 0$/;"	v
rc	test/broker/02-unsubscribe-invalid-no-topic.py	/^rc = 1$/;"	v
rc	test/broker/02-unsubscribe-qos0.py	/^    rc = 0$/;"	v
rc	test/broker/02-unsubscribe-qos0.py	/^rc = 1$/;"	v
rc	test/broker/02-unsubscribe-qos1.py	/^    rc = 0$/;"	v
rc	test/broker/02-unsubscribe-qos1.py	/^rc = 1$/;"	v
rc	test/broker/02-unsubscribe-qos2.py	/^    rc = 0$/;"	v
rc	test/broker/02-unsubscribe-qos2.py	/^rc = 1$/;"	v
rc	test/broker/03-pattern-matching-helper.py	/^rc = 0$/;"	v
rc	test/broker/03-pattern-matching-helper.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-b2c-disconnect-qos1-helper.py	/^rc = 0$/;"	v
rc	test/broker/03-publish-b2c-disconnect-qos1-helper.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-b2c-disconnect-qos1.py	/^            rc = 0$/;"	v
rc	test/broker/03-publish-b2c-disconnect-qos1.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^rc = 0$/;"	v
rc	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-b2c-disconnect-qos2.py	/^                rc = 0$/;"	v
rc	test/broker/03-publish-b2c-disconnect-qos2.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-b2c-timeout-qos1-helper.py	/^rc = 0$/;"	v
rc	test/broker/03-publish-b2c-timeout-qos1-helper.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-b2c-timeout-qos1.py	/^            rc = 0$/;"	v
rc	test/broker/03-publish-b2c-timeout-qos1.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^rc = 0$/;"	v
rc	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-b2c-timeout-qos2.py	/^                rc = 0$/;"	v
rc	test/broker/03-publish-b2c-timeout-qos2.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-c2b-disconnect-qos2.py	/^        rc = 0$/;"	v
rc	test/broker/03-publish-c2b-disconnect-qos2.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-c2b-timeout-qos2.py	/^        rc = 0$/;"	v
rc	test/broker/03-publish-c2b-timeout-qos2.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-dollar.py	/^    rc = 0$/;"	v
rc	test/broker/03-publish-dollar.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-invalid-utf8.py	/^    rc = 0$/;"	v
rc	test/broker/03-publish-invalid-utf8.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-qos1-queued-bytes.py	/^    rc = 0$/;"	v
rc	test/broker/03-publish-qos1-queued-bytes.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-qos1.py	/^    rc = 0$/;"	v
rc	test/broker/03-publish-qos1.py	/^rc = 1$/;"	v
rc	test/broker/03-publish-qos2.py	/^    rc = 0$/;"	v
rc	test/broker/03-publish-qos2.py	/^rc = 1$/;"	v
rc	test/broker/04-retain-qos0-clear.py	/^            rc = 0$/;"	v
rc	test/broker/04-retain-qos0-clear.py	/^rc = 1$/;"	v
rc	test/broker/04-retain-qos0-fresh.py	/^    rc = 0$/;"	v
rc	test/broker/04-retain-qos0-fresh.py	/^rc = 1$/;"	v
rc	test/broker/04-retain-qos0-repeated.py	/^            rc = 0$/;"	v
rc	test/broker/04-retain-qos0-repeated.py	/^rc = 1$/;"	v
rc	test/broker/04-retain-qos0.py	/^        rc = 0$/;"	v
rc	test/broker/04-retain-qos0.py	/^rc = 1$/;"	v
rc	test/broker/04-retain-qos1-qos0.py	/^        rc = 0$/;"	v
rc	test/broker/04-retain-qos1-qos0.py	/^rc = 1$/;"	v
rc	test/broker/04-retain-upgrade-outgoing-qos.py	/^rc = 1$/;"	v
rc	test/broker/05-clean-session-qos1-helper.py	/^rc = 0$/;"	v
rc	test/broker/05-clean-session-qos1-helper.py	/^rc = 1$/;"	v
rc	test/broker/05-clean-session-qos1.py	/^        rc = 0$/;"	v
rc	test/broker/05-clean-session-qos1.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-b2br-disconnect-qos1.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-b2br-disconnect-qos2.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-b2br-remapping.py	/^    rc = test(bridge, sock)$/;"	v
rc	test/broker/06-bridge-b2br-remapping.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-br2b-disconnect-qos1-helper.py	/^rc = 0$/;"	v
rc	test/broker/06-bridge-br2b-disconnect-qos1-helper.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-br2b-disconnect-qos1.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^        rc = 0$/;"	v
rc	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-br2b-disconnect-qos2.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-br2b-remapping.py	/^    rc = test(bridge, sock)$/;"	v
rc	test/broker/06-bridge-br2b-remapping.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-fail-persist-resend-qos1.py	/^                rc = 0$/;"	v
rc	test/broker/06-bridge-fail-persist-resend-qos1.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-fail-persist-resend-qos2.py	/^                        rc = 0$/;"	v
rc	test/broker/06-bridge-fail-persist-resend-qos2.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-per-listener-settings.py	/^    rc = test(bridge, sock)$/;"	v
rc	test/broker/06-bridge-per-listener-settings.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-reconnect-local-out-helper.py	/^rc = 0$/;"	v
rc	test/broker/06-bridge-reconnect-local-out-helper.py	/^rc = 1$/;"	v
rc	test/broker/06-bridge-reconnect-local-out.py	/^rc = 1$/;"	v
rc	test/broker/07-will-invalid-utf8.py	/^    rc = 0$/;"	v
rc	test/broker/07-will-invalid-utf8.py	/^rc = 1$/;"	v
rc	test/broker/07-will-no-flag.py	/^    rc = 0$/;"	v
rc	test/broker/07-will-no-flag.py	/^rc = 1$/;"	v
rc	test/broker/07-will-null-helper.py	/^rc = 0$/;"	v
rc	test/broker/07-will-null-helper.py	/^rc = 1$/;"	v
rc	test/broker/07-will-null-topic.py	/^    rc = 0$/;"	v
rc	test/broker/07-will-null-topic.py	/^rc = 1$/;"	v
rc	test/broker/07-will-null.py	/^        rc = 0$/;"	v
rc	test/broker/07-will-null.py	/^rc = 1$/;"	v
rc	test/broker/07-will-qos0-helper.py	/^rc = 0$/;"	v
rc	test/broker/07-will-qos0-helper.py	/^rc = 1$/;"	v
rc	test/broker/07-will-qos0.py	/^        rc = 0$/;"	v
rc	test/broker/07-will-qos0.py	/^rc = 1$/;"	v
rc	test/broker/08-ssl-bridge-helper.py	/^rc = 1$/;"	v
rc	test/broker/08-ssl-bridge.py	/^rc = 1$/;"	v
rc	test/broker/08-ssl-connect-cert-auth-crl.py	/^rc = 1$/;"	v
rc	test/broker/08-ssl-connect-cert-auth-expired.py	/^rc = 1$/;"	v
rc	test/broker/08-ssl-connect-cert-auth-revoked.py	/^rc = 1$/;"	v
rc	test/broker/08-ssl-connect-cert-auth-without.py	/^        rc = 0$/;"	v
rc	test/broker/08-ssl-connect-cert-auth-without.py	/^rc = 1$/;"	v
rc	test/broker/08-ssl-connect-cert-auth.py	/^rc = 1$/;"	v
rc	test/broker/08-ssl-connect-identity.py	/^rc = 1$/;"	v
rc	test/broker/08-ssl-connect-no-auth-wrong-ca.py	/^rc = 1$/;"	v
rc	test/broker/08-ssl-connect-no-auth.py	/^rc = 1$/;"	v
rc	test/broker/08-ssl-connect-no-identity.py	/^rc = 1$/;"	v
rc	test/broker/08-tls-psk-bridge.py	/^        rc = 0$/;"	v
rc	test/broker/08-tls-psk-bridge.py	/^rc = 1$/;"	v
rc	test/broker/08-tls-psk-pub.py	/^        rc = 0$/;"	v
rc	test/broker/08-tls-psk-pub.py	/^rc = 1$/;"	v
rc	test/broker/09-plugin-auth-acl-sub.py	/^rc = 1$/;"	v
rc	test/broker/09-plugin-auth-context-params.py	/^rc = 1$/;"	v
rc	test/broker/09-plugin-auth-defer-unpwd-fail.py	/^rc = 1$/;"	v
rc	test/broker/09-plugin-auth-defer-unpwd-success.py	/^rc = 1$/;"	v
rc	test/broker/09-plugin-auth-msg-params.py	/^rc = 1$/;"	v
rc	test/broker/09-plugin-auth-unpwd-fail.py	/^rc = 1$/;"	v
rc	test/broker/09-plugin-auth-unpwd-success.py	/^rc = 1$/;"	v
rc	test/broker/09-plugin-auth-v2-unpwd-fail.py	/^rc = 1$/;"	v
rc	test/broker/09-plugin-auth-v2-unpwd-success.py	/^rc = 1$/;"	v
rc	test/broker/10-listener-mount-point-helper.py	/^rc = 0$/;"	v
rc	test/broker/10-listener-mount-point-helper.py	/^rc = 1$/;"	v
rc	test/broker/10-listener-mount-point.py	/^rc = 1$/;"	v
rc	test/broker/11-persistent-subscription.py	/^rc = 1$/;"	v
rc	test/lib/01-con-discon-success.py	/^            rc = 0$/;"	v
rc	test/lib/01-con-discon-success.py	/^rc = 1$/;"	v
rc	test/lib/01-keepalive-pingreq.py	/^                rc = 0$/;"	v
rc	test/lib/01-keepalive-pingreq.py	/^rc = 1$/;"	v
rc	test/lib/01-no-clean-session.py	/^        rc = 0$/;"	v
rc	test/lib/01-no-clean-session.py	/^rc = 1$/;"	v
rc	test/lib/01-unpwd-set.py	/^        rc = 0$/;"	v
rc	test/lib/01-unpwd-set.py	/^rc = 1$/;"	v
rc	test/lib/01-will-set.py	/^        rc = 0$/;"	v
rc	test/lib/01-will-set.py	/^rc = 1$/;"	v
rc	test/lib/01-will-unpwd-set.py	/^        rc = 0$/;"	v
rc	test/lib/01-will-unpwd-set.py	/^rc = 1$/;"	v
rc	test/lib/02-subscribe-qos0.py	/^                rc = 0$/;"	v
rc	test/lib/02-subscribe-qos0.py	/^rc = 1$/;"	v
rc	test/lib/02-subscribe-qos1.py	/^                rc = 0$/;"	v
rc	test/lib/02-subscribe-qos1.py	/^rc = 1$/;"	v
rc	test/lib/02-subscribe-qos2.py	/^                rc = 0$/;"	v
rc	test/lib/02-subscribe-qos2.py	/^rc = 1$/;"	v
rc	test/lib/02-unsubscribe.py	/^                rc = 0$/;"	v
rc	test/lib/02-unsubscribe.py	/^rc = 1$/;"	v
rc	test/lib/03-publish-b2c-qos1.py	/^            rc = 0$/;"	v
rc	test/lib/03-publish-b2c-qos1.py	/^rc = 1$/;"	v
rc	test/lib/03-publish-b2c-qos2.py	/^                rc = 0$/;"	v
rc	test/lib/03-publish-b2c-qos2.py	/^rc = 1$/;"	v
rc	test/lib/03-publish-c2b-qos1-disconnect.py	/^                        rc = 0$/;"	v
rc	test/lib/03-publish-c2b-qos1-disconnect.py	/^rc = 1$/;"	v
rc	test/lib/03-publish-c2b-qos1-timeout.py	/^                    rc = 0$/;"	v
rc	test/lib/03-publish-c2b-qos1-timeout.py	/^rc = 1$/;"	v
rc	test/lib/03-publish-c2b-qos2-disconnect.py	/^                                    rc = 0$/;"	v
rc	test/lib/03-publish-c2b-qos2-disconnect.py	/^rc = 1$/;"	v
rc	test/lib/03-publish-c2b-qos2-timeout.py	/^                            rc = 0$/;"	v
rc	test/lib/03-publish-c2b-qos2-timeout.py	/^rc = 1$/;"	v
rc	test/lib/03-publish-c2b-qos2.py	/^                    rc = 0$/;"	v
rc	test/lib/03-publish-c2b-qos2.py	/^rc = 1$/;"	v
rc	test/lib/03-publish-qos0-no-payload.py	/^                rc = 0$/;"	v
rc	test/lib/03-publish-qos0-no-payload.py	/^rc = 1$/;"	v
rc	test/lib/03-publish-qos0.py	/^                rc = 0$/;"	v
rc	test/lib/03-publish-qos0.py	/^rc = 1$/;"	v
rc	test/lib/04-retain-qos0.py	/^            rc = 0$/;"	v
rc	test/lib/04-retain-qos0.py	/^rc = 1$/;"	v
rc	test/lib/08-ssl-bad-cacert.py	/^rc = 1$/;"	v
rc	test/lib/08-ssl-bad-cacert.py	/^rc = client.returncode$/;"	v
rc	test/lib/08-ssl-connect-cert-auth-enc.py	/^            rc = 0$/;"	v
rc	test/lib/08-ssl-connect-cert-auth-enc.py	/^rc = 1$/;"	v
rc	test/lib/08-ssl-connect-cert-auth.py	/^            rc = 0$/;"	v
rc	test/lib/08-ssl-connect-cert-auth.py	/^rc = 1$/;"	v
rc	test/lib/08-ssl-connect-no-auth.py	/^            rc = 0$/;"	v
rc	test/lib/08-ssl-connect-no-auth.py	/^rc = 1$/;"	v
rc	test/lib/09-util-topic-matching.py	/^rc = 1$/;"	v
rc	test/lib/09-util-topic-tokenise.py	/^rc = 1$/;"	v
rc	test/lib/09-util-utf8-validate.py	/^rc = 1$/;"	v
read_e	src/persist.h	32;"	d
received_count	test/qos.cpp	/^int received_count = 0;$/;"	v
reconnect	lib/cpp/mosquittopp.cpp	/^int mosquittopp::reconnect()$/;"	f	class:mosqpp::mosquittopp
reconnect_async	lib/cpp/mosquittopp.cpp	/^int mosquittopp::reconnect_async()$/;"	f	class:mosqpp::mosquittopp
reconnect_delay	lib/mosquitto_internal.h	/^	unsigned int reconnect_delay;$/;"	m	struct:mosquitto
reconnect_delay_max	lib/mosquitto_internal.h	/^	unsigned int reconnect_delay_max;$/;"	m	struct:mosquitto
reconnect_delay_set	lib/cpp/mosquittopp.cpp	/^void mosquittopp::reconnect_delay_set(unsigned int reconnect_delay, unsigned int reconnect_delay_max, bool reconnect_exponential_backoff)$/;"	f	class:mosqpp::mosquittopp
reconnect_exponential_backoff	lib/mosquitto_internal.h	/^	bool reconnect_exponential_backoff;$/;"	m	struct:mosquitto
ref_count	src/mosquitto_broker_internal.h	/^	int ref_count;$/;"	m	struct:mosquitto_msg_store
registerOfflineSubscriber	test/broker/03-publish-qos1-queued-bytes.py	/^def registerOfflineSubscriber():$/;"	f
reinitialise	lib/cpp/mosquittopp.cpp	/^int mosquittopp::reinitialise(const char *id, bool clean_session)$/;"	f	class:mosqpp::mosquittopp
remaining_count	lib/mosquitto_internal.h	/^	int8_t remaining_count;$/;"	m	struct:mosquitto__packet
remaining_length	lib/mosquitto_internal.h	/^	uint32_t remaining_length;$/;"	m	struct:mosquitto__packet
remaining_length	test/mosq_test.py	/^def remaining_length(packet):$/;"	f
remaining_mult	lib/mosquitto_internal.h	/^	uint32_t remaining_mult;$/;"	m	struct:mosquitto__packet
remote_clientid	src/mosquitto_broker_internal.h	/^	char *remote_clientid;$/;"	m	struct:mosquitto__bridge
remote_password	src/mosquitto_broker_internal.h	/^	char *remote_password;$/;"	m	struct:mosquitto__bridge
remote_prefix	src/mosquitto_broker_internal.h	/^	char *remote_prefix;$/;"	m	struct:mosquitto__bridge_topic
remote_topic	src/mosquitto_broker_internal.h	/^	char *remote_topic; \/* topic prefixed with remote_prefix *\/$/;"	m	struct:mosquitto__bridge_topic
remote_username	src/mosquitto_broker_internal.h	/^	char *remote_username;$/;"	m	struct:mosquitto__bridge
require_certificate	src/mosquitto_broker_internal.h	/^	bool require_certificate;$/;"	m	struct:mosquitto__listener
restart_t	src/mosquitto_broker_internal.h	/^	time_t restart_t;$/;"	m	struct:mosquitto__bridge
restart_timeout	src/mosquitto_broker_internal.h	/^	int restart_timeout;$/;"	m	struct:mosquitto__bridge
restore_privileges	src/mosquitto.cpp	/^int restore_privileges(void)$/;"	f
retain	client/client_shared.h	/^	bool retain;$/;"	m	struct:mosq_config
retain	client/pub_client.cpp	/^static int retain = 0;$/;"	v	file:
retain	lib/mosquitto.h	/^	bool retain;$/;"	m	struct:libmosquitto_will
retain	lib/mosquitto.h	/^	bool retain;$/;"	m	struct:mosquitto_message
retain	src/db_dump/db_dump.cpp	/^	uint8_t qos, retain, direction, state, dup;$/;"	m	struct:db_client_msg	file:
retain	src/db_dump/db_dump.cpp	/^	uint8_t qos, retain;$/;"	m	struct:db_msg	file:
retain	src/mosquitto_broker_internal.h	/^	bool retain;$/;"	m	struct:mosquitto_client_msg
retain	src/mosquitto_broker_internal.h	/^	bool retain;$/;"	m	struct:mosquitto_msg_store
retain	src/mosquitto_plugin.h	/^	bool retain;$/;"	m	struct:mosquitto_acl_msg
retain__process	src/subs.cpp	/^static int retain__process(struct mosquitto_db *db, struct mosquitto_msg_store *retained, struct mosquitto *context, const char *sub, int sub_qos)$/;"	f	file:
retain__search	src/subs.cpp	/^static int retain__search(struct mosquitto_db *db, struct mosquitto__subhier *subhier, struct sub__token *tokens, struct mosquitto *context, const char *sub, int sub_qos, int level)$/;"	f	file:
retain_clear	test/broker/04-retain-qos0-clear.py	/^            retain_clear = sock.recv(256)$/;"	v
retain_clear_packet	test/broker/04-retain-qos0-clear.py	/^retain_clear_packet = mosq_test.gen_publish("retain\/clear\/test", qos=0, payload=None, retain=True)$/;"	v
retained	src/mosquitto_broker_internal.h	/^	struct mosquitto_msg_store *retained;$/;"	m	struct:mosquitto__subhier	typeref:struct:mosquitto__subhier::mosquitto_msg_store
retained_count	src/mosquitto_broker_internal.h	/^	int retained_count;$/;"	m	struct:mosquitto_db
retained_only	client/client_shared.h	/^	bool retained_only; \/* sub *\/$/;"	m	struct:mosq_config
round_robin	src/mosquitto_broker_internal.h	/^	bool round_robin;$/;"	m	struct:mosquitto__bridge
rq	test/broker/03-publish-qos1-queued-bytes.py	/^rq = Queue.Queue()$/;"	v
run	examples/mysql_log/mysql_log.cpp	/^static int run = 1;$/;"	v	file:
run	src/mosquitto.cpp	/^int run;$/;"	v
run	test/broker/03-publish-qos1-queued-bytes.py	/^    def run(self):$/;"	m	class:BrokerMonitor
run	test/broker/c/08-tls-psk-bridge.cpp	/^static int run = -1;$/;"	v	file:
run	test/broker/c/08-tls-psk-pub.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/01-con-discon-success.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/01-keepalive-pingreq.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/01-no-clean-session.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/01-unpwd-set.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/01-will-set.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/01-will-unpwd-set.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/02-subscribe-qos0.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/02-subscribe-qos1.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/02-subscribe-qos2.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/02-unsubscribe.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/03-publish-b2c-qos2.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/03-publish-c2b-qos1-disconnect.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/03-publish-c2b-qos2-disconnect.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/03-publish-c2b-qos2.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/03-publish-qos0-no-payload.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/03-publish-qos0.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/04-retain-qos0.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/08-ssl-connect-cert-auth-enc.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/08-ssl-connect-cert-auth.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/08-ssl-connect-no-auth.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/c/08-ssl-fake-cacert.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/01-con-discon-success.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/01-keepalive-pingreq.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/01-no-clean-session.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/01-unpwd-set.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/01-will-set.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/01-will-unpwd-set.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/02-subscribe-qos0.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/02-subscribe-qos1.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/02-subscribe-qos2.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/02-unsubscribe.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/03-publish-b2c-qos2.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/03-publish-c2b-qos1-disconnect.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/03-publish-c2b-qos2-disconnect.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/03-publish-c2b-qos2.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/03-publish-qos0-no-payload.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/03-publish-qos0.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/04-retain-qos0.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/08-ssl-bad-cacert.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/08-ssl-connect-cert-auth-enc.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/08-ssl-connect-cert-auth.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/08-ssl-connect-no-auth.cpp	/^static int run = -1;$/;"	v	file:
run	test/lib/cpp/08-ssl-fake-cacert.cpp	/^static int run = -1;$/;"	v	file:
run	test/msgsps_pub.cpp	/^static bool run = true;$/;"	v	file:
run	test/msgsps_sub.cpp	/^static bool run = true;$/;"	v	file:
run_tests	test/broker/ptest.py	/^def run_tests(tests, ports):$/;"	f
run_tests	test/lib/ptest.py	/^def run_tests(tests, ports):$/;"	f
running	misc/currentcost/cc128_read.py	/^    running = False$/;"	v
running	misc/currentcost/cc128_read.py	/^running = True$/;"	v
salt	src/mosquitto_broker_internal.h	/^	unsigned char *salt;$/;"	m	struct:mosquitto__unpwd
salt_len	src/mosquitto_broker_internal.h	/^	unsigned int salt_len;$/;"	m	struct:mosquitto__unpwd
security__cleanup_single	src/security.cpp	/^static int security__cleanup_single(struct mosquitto__security_options *opts, bool reload)$/;"	f	file:
security__init_single	src/security.cpp	/^static int security__init_single(struct mosquitto__security_options *opts, bool reload)$/;"	f	file:
security__load_v2	src/security.cpp	/^int security__load_v2(struct mosquitto_db *db, struct mosquitto__auth_plugin *plugin, struct mosquitto_auth_opt *auth_options, int auth_option_count, void *lib)$/;"	f
security__load_v3	src/security.cpp	/^int security__load_v3(struct mosquitto_db *db, struct mosquitto__auth_plugin *plugin, struct mosquitto_opt *auth_options, int auth_option_count, void *lib)$/;"	f
security__module_cleanup_single	src/security.cpp	/^static void security__module_cleanup_single(struct mosquitto__security_options *opts)$/;"	f	file:
security__module_init_single	src/security.cpp	/^static int security__module_init_single(struct mosquitto_db *db, struct mosquitto__security_options *opts)$/;"	f	file:
security_cleanup_v2	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_security_cleanup_v2 security_cleanup_v2;$/;"	m	struct:mosquitto__auth_plugin
security_cleanup_v3	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_security_cleanup_v3 security_cleanup_v3;$/;"	m	struct:mosquitto__auth_plugin
security_init_v2	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_security_init_v2 security_init_v2;$/;"	m	struct:mosquitto__auth_plugin
security_init_v3	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_security_init_v3 security_init_v3;$/;"	m	struct:mosquitto__auth_plugin
security_options	src/mosquitto_broker_internal.h	/^	struct mosquitto__security_options security_options;$/;"	m	struct:mosquitto__config	typeref:struct:mosquitto__config::mosquitto__security_options
security_options	src/mosquitto_broker_internal.h	/^	struct mosquitto__security_options security_options;$/;"	m	struct:mosquitto__listener	typeref:struct:mosquitto__listener::mosquitto__security_options
send__command_with_mid	lib/send_mosq.cpp	/^int send__command_with_mid(struct mosquitto *mosq, uint8_t command, uint16_t mid, bool dup)$/;"	f
send__connack	src/send_connack.cpp	/^int send__connack(struct mosquitto *context, int ack, int result)$/;"	f
send__connect	lib/send_connect.cpp	/^int send__connect(struct mosquitto *mosq, uint16_t keepalive, bool clean_session)$/;"	f
send__disconnect	lib/send_disconnect.cpp	/^int send__disconnect(struct mosquitto *mosq)$/;"	f
send__pingreq	lib/send_mosq.cpp	/^int send__pingreq(struct mosquitto *mosq)$/;"	f
send__pingresp	lib/send_mosq.cpp	/^int send__pingresp(struct mosquitto *mosq)$/;"	f
send__puback	lib/send_mosq.cpp	/^int send__puback(struct mosquitto *mosq, uint16_t mid)$/;"	f
send__pubcomp	lib/send_mosq.cpp	/^int send__pubcomp(struct mosquitto *mosq, uint16_t mid)$/;"	f
send__publish	lib/send_publish.cpp	/^int send__publish(struct mosquitto *mosq, uint16_t mid, const char *topic, uint32_t payloadlen, const void *payload, int qos, bool retain, bool dup)$/;"	f
send__pubrec	lib/send_mosq.cpp	/^int send__pubrec(struct mosquitto *mosq, uint16_t mid)$/;"	f
send__pubrel	lib/send_mosq.cpp	/^int send__pubrel(struct mosquitto *mosq, uint16_t mid)$/;"	f
send__real_publish	lib/send_publish.cpp	/^int send__real_publish(struct mosquitto *mosq, uint16_t mid, const char *topic, uint32_t payloadlen, const void *payload, int qos, bool retain, bool dup)$/;"	f
send__simple_command	lib/send_mosq.cpp	/^int send__simple_command(struct mosquitto *mosq, uint8_t command)$/;"	f
send__suback	src/send_suback.cpp	/^int send__suback(struct mosquitto *context, uint16_t mid, uint32_t payloadlen, const void *payload)$/;"	f
send__subscribe	lib/send_subscribe.cpp	/^int send__subscribe(struct mosquitto *mosq, int *mid, const char *topic, uint8_t topic_qos)$/;"	f
send__unsubscribe	lib/send_unsubscribe.cpp	/^int send__unsubscribe(struct mosquitto *mosq, int *mid, const char *topic)$/;"	f
sent	test/qos.cpp	/^	bool sent;$/;"	m	struct:msg_list	file:
sent_count	test/qos.cpp	/^int sent_count = 0;$/;"	v
sent_mid	test/broker/c/08-tls-psk-bridge.cpp	/^static int sent_mid;$/;"	v	file:
sent_mid	test/broker/c/08-tls-psk-pub.cpp	/^static int sent_mid;$/;"	v	file:
sent_mid	test/lib/c/03-publish-qos0-no-payload.cpp	/^static int sent_mid = -1;$/;"	v	file:
sent_mid	test/lib/c/03-publish-qos0.cpp	/^static int sent_mid = -1;$/;"	v	file:
sent_mid	test/lib/cpp/03-publish-qos0-no-payload.cpp	/^static int sent_mid = -1;$/;"	v	file:
sent_mid	test/lib/cpp/03-publish-qos0.cpp	/^static int sent_mid = -1;$/;"	v	file:
service_handle	src/service.cpp	/^SERVICE_STATUS_HANDLE service_handle = 0;$/;"	v
service_handler	src/service.cpp	/^void __stdcall service_handler(DWORD fdwControl)$/;"	f
service_install	src/service.cpp	/^void service_install(void)$/;"	f
service_main	src/service.cpp	/^void __stdcall service_main(DWORD dwArgc, LPTSTR *lpszArgv)$/;"	f
service_run	src/service.cpp	/^void service_run(void)$/;"	f
service_status	src/service.cpp	/^static SERVICE_STATUS service_status;$/;"	v	file:
service_uninstall	src/service.cpp	/^void service_uninstall(void)$/;"	f
set_label	misc/currentcost/gnome-panel/CurrentCostMQTT.py	/^    def set_label(self, val):$/;"	m	class:CurrentCostMQTT
set_tcp_nodelay	src/mosquitto_broker_internal.h	/^	bool set_tcp_nodelay;$/;"	m	struct:mosquitto__config
show_menu	misc/currentcost/gnome-panel/CurrentCostMQTT.py	/^    def show_menu(self, widget, event):$/;"	m	class:CurrentCostMQTT
signature	src/deps/uthash.h	/^   uint32_t signature; \/* used only to find hash tables in external analysis *\/$/;"	m	struct:UT_hash_table
sleep_time	test/broker/06-bridge-fail-persist-resend-qos1.py	/^    sleep_time = 0.5$/;"	v
sleep_time	test/broker/06-bridge-fail-persist-resend-qos2.py	/^    sleep_time = 0.5$/;"	v
snprintf	client/client_shared.cpp	30;"	d	file:
snprintf	client/pub_client.cpp	29;"	d	file:
snprintf	client/sub_client_output.cpp	30;"	d	file:
snprintf	config.h	23;"	d
snprintf	examples/mysql_log/mysql_log.cpp	9;"	d	file:
snprintf	src/mosquitto_passwd.cpp	41;"	d	file:
snprintf	test/fake_user.cpp	38;"	d	file:
sock	lib/mosquitto_internal.h	/^	mosq_sock_t sock;$/;"	m	struct:mosquitto
sock	test/broker/01-connect-invalid-id-0-311.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/01-connect-invalid-id-0.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/01-connect-invalid-id-missing.py	/^    sock = mosq_test.do_client_connect(connect_packet, "", port=port)$/;"	v
sock	test/broker/01-connect-invalid-id-utf8.py	/^    sock = mosq_test.do_client_connect(connect_packet, "", port=port)$/;"	v
sock	test/broker/01-connect-invalid-protonum.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/01-connect-invalid-reserved.py	/^    sock = mosq_test.do_client_connect(connect_packet, "", port=port)$/;"	v
sock	test/broker/01-connect-success.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/01-connect-uname-invalid-utf8.py	/^    sock = mosq_test.do_client_connect(connect_packet, "", port=port)$/;"	v
sock	test/broker/01-connect-uname-no-flag.py	/^    sock = mosq_test.do_client_connect(connect_packet, "", port=port)$/;"	v
sock	test/broker/01-connect-uname-pwd-no-flag.py	/^    sock = mosq_test.do_client_connect(connect_packet, "", port=port)$/;"	v
sock	test/broker/02-subpub-qos0.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, timeout=20, port=port)$/;"	v
sock	test/broker/02-subpub-qos1.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, timeout=20, port=port)$/;"	v
sock	test/broker/02-subpub-qos2.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, timeout=20, port=port)$/;"	v
sock	test/broker/02-subscribe-invalid-utf8.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/02-subscribe-qos0.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/02-subscribe-qos1.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/02-subscribe-qos2.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/02-unsubscribe-invalid-no-topic.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/02-unsubscribe-qos0.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/02-unsubscribe-qos1.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/02-unsubscribe-qos2.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/03-pattern-matching-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, connack_error="helper connack", port=port)$/;"	v
sock	test/broker/03-publish-b2c-disconnect-qos1-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, connack_error="helper connack", port=port)$/;"	v
sock	test/broker/03-publish-b2c-disconnect-qos1.py	/^        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/broker/03-publish-b2c-disconnect-qos1.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack1_packet, port=port)$/;"	v
sock	test/broker/03-publish-b2c-disconnect-qos2-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, connack_error="helper connack", port=port)$/;"	v
sock	test/broker/03-publish-b2c-disconnect-qos2.py	/^            sock = mosq_test.do_client_connect(connect_packet, connack2_packet, port=port)$/;"	v
sock	test/broker/03-publish-b2c-disconnect-qos2.py	/^        sock = mosq_test.do_client_connect(connect_packet, connack2_packet, port=port)$/;"	v
sock	test/broker/03-publish-b2c-disconnect-qos2.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack1_packet, port=port)$/;"	v
sock	test/broker/03-publish-b2c-timeout-qos1-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, connack_error="helper connack")$/;"	v
sock	test/broker/03-publish-b2c-timeout-qos1.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet)$/;"	v
sock	test/broker/03-publish-b2c-timeout-qos2-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, connack_error="helper connack")$/;"	v
sock	test/broker/03-publish-b2c-timeout-qos2.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet)$/;"	v
sock	test/broker/03-publish-c2b-disconnect-qos2.py	/^        sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/03-publish-c2b-disconnect-qos2.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/03-publish-c2b-timeout-qos2.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet)$/;"	v
sock	test/broker/03-publish-dollar.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/03-publish-invalid-utf8.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/03-publish-qos1.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/03-publish-qos2.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/04-retain-qos0-clear.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, timeout=4, port=port)$/;"	v
sock	test/broker/04-retain-qos0-fresh.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/04-retain-qos0-repeated.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, timeout=20, port=port)$/;"	v
sock	test/broker/04-retain-qos0.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/04-retain-qos1-qos0.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/05-clean-session-qos1-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/05-clean-session-qos1.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack1_packet, port=port)$/;"	v
sock	test/broker/05-clean-session-qos1.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack2_packet, timeout=30, port=port)$/;"	v
sock	test/broker/06-bridge-b2br-remapping.py	/^    sock = mosq_test.do_client_connect($/;"	v
sock	test/broker/06-bridge-br2b-disconnect-qos1-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port, connack_error="helper connack")$/;"	v
sock	test/broker/06-bridge-br2b-disconnect-qos2-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port, connack_error="helper connack")$/;"	v
sock	test/broker/06-bridge-br2b-remapping.py	/^    sock = mosq_test.do_client_connect($/;"	v
sock	test/broker/06-bridge-fail-persist-resend-qos1.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/broker/06-bridge-fail-persist-resend-qos2.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/broker/06-bridge-per-listener-settings.py	/^    sock = mosq_test.do_client_connect($/;"	v
sock	test/broker/06-bridge-reconnect-local-out-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port, connack_error="helper connack")$/;"	v
sock	test/broker/07-will-invalid-utf8.py	/^    sock = mosq_test.do_client_connect(connect_packet, "", timeout=30, port=port)$/;"	v
sock	test/broker/07-will-no-flag.py	/^    sock = mosq_test.do_client_connect(connect_packet, "", port=port)$/;"	v
sock	test/broker/07-will-null-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/07-will-null-topic.py	/^    sock = mosq_test.do_client_connect(connect_packet, "", timeout=30, port=port)$/;"	v
sock	test/broker/07-will-null.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, timeout=30, port=port)$/;"	v
sock	test/broker/07-will-qos0-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port)$/;"	v
sock	test/broker/07-will-qos0.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, timeout=30, port=port)$/;"	v
sock	test/broker/08-ssl-bridge-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port, connack_error="helper connack")$/;"	v
sock	test/broker/08-ssl-bridge.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/broker/08-ssl-connect-cert-auth-without.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/broker/08-ssl-connect-no-auth-wrong-ca.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/broker/08-tls-psk-bridge.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, timeout=30, port=port1)$/;"	v
sock	test/broker/08-tls-psk-pub.py	/^    sock = mosq_test.do_client_connect(connect_packet, connack_packet, timeout=20, port=port2)$/;"	v
sock	test/broker/10-listener-mount-point-helper.py	/^sock = mosq_test.do_client_connect(connect_packet, connack_packet, port=port, connack_error="helper connack")$/;"	v
sock	test/lib/01-con-discon-success.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/01-keepalive-pingreq.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/01-no-clean-session.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/01-unpwd-set.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/01-will-set.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/01-will-unpwd-set.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/02-subscribe-qos0.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/02-subscribe-qos1.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/02-subscribe-qos2.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/02-unsubscribe.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/03-publish-b2c-qos1.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/03-publish-b2c-qos2.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/03-publish-c2b-qos1-disconnect.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/03-publish-c2b-qos1-timeout.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/03-publish-c2b-qos2-disconnect.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/03-publish-c2b-qos2-timeout.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/03-publish-c2b-qos2.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/03-publish-qos0-no-payload.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/03-publish-qos0.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/04-retain-qos0.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/08-ssl-connect-cert-auth-enc.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/08-ssl-connect-cert-auth.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/08-ssl-connect-no-auth.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock	test/lib/08-ssl-fake-cacert.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock_count	src/mosquitto_broker_internal.h	/^	int sock_count;$/;"	m	struct:mosquitto__listener
socket	lib/cpp/mosquittopp.cpp	/^int mosquittopp::socket()$/;"	f	class:mosqpp::mosquittopp
sockpairR	lib/mosquitto_internal.h	/^	mosq_sock_t sockpairR, sockpairW;$/;"	m	struct:mosquitto
sockpairW	lib/mosquitto_internal.h	/^	mosq_sock_t sockpairR, sockpairW;$/;"	m	struct:mosquitto
socks	src/mosquitto_broker_internal.h	/^	mosq_sock_t *socks;$/;"	m	struct:mosquitto__listener
socks5__read	lib/socks_mosq.cpp	/^int socks5__read(struct mosquitto *mosq)$/;"	f
socks5__send	lib/socks_mosq.cpp	/^int socks5__send(struct mosquitto *mosq)$/;"	f
socks5_host	client/client_shared.h	/^	char *socks5_host;$/;"	m	struct:mosq_config
socks5_host	lib/mosquitto_internal.h	/^	char *socks5_host;$/;"	m	struct:mosquitto
socks5_password	client/client_shared.h	/^	char *socks5_password;$/;"	m	struct:mosq_config
socks5_password	lib/mosquitto_internal.h	/^	char *socks5_password;$/;"	m	struct:mosquitto
socks5_port	client/client_shared.h	/^	int socks5_port;$/;"	m	struct:mosq_config
socks5_port	lib/mosquitto_internal.h	/^	int socks5_port;$/;"	m	struct:mosquitto
socks5_set	lib/cpp/mosquittopp.cpp	/^int mosquittopp::socks5_set(const char *host, int port, const char *username, const char *password)$/;"	f	class:mosqpp::mosquittopp
socks5_username	client/client_shared.h	/^	char *socks5_username;$/;"	m	struct:mosq_config
socks5_username	lib/mosquitto_internal.h	/^	char *socks5_username;$/;"	m	struct:mosquitto
source_id	src/db_dump/db_dump.cpp	/^	char *source_id;$/;"	m	struct:db_msg	file:
source_id	src/mosquitto_broker_internal.h	/^	char *source_id;$/;"	m	struct:mosquitto_msg_store
source_mid	src/db_dump/db_dump.cpp	/^	uint16_t source_mid, mid;$/;"	m	struct:db_msg	file:
source_mid	src/mosquitto_broker_internal.h	/^	uint16_t source_mid;$/;"	m	struct:mosquitto_msg_store
spare_sock	src/net.cpp	/^static mosq_sock_t spare_sock = INVALID_SOCKET;$/;"	v	file:
srv_callback	lib/srv_mosq.cpp	/^static void srv_callback(void *arg, int status, int timeouts, unsigned char *abuf, int alen)$/;"	f	file:
ssize_t	lib/net_mosq.h	/^typedef SSIZE_T ssize_t;$/;"	t
ssl	lib/mosquitto_internal.h	/^	SSL *ssl;$/;"	m	struct:mosquitto
ssl_ctx	lib/mosquitto_internal.h	/^	SSL_CTX *ssl_ctx;$/;"	m	struct:mosquitto
ssl_ctx	src/mosquitto_broker_internal.h	/^	SSL_CTX *ssl_ctx;$/;"	m	struct:mosquitto__listener
ssl_ctx_defaults	lib/mosquitto_internal.h	/^	bool ssl_ctx_defaults;$/;"	m	struct:mosquitto
ssock	test/broker/06-bridge-b2br-disconnect-qos1.py	/^ssock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
ssock	test/broker/06-bridge-b2br-disconnect-qos2.py	/^ssock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
ssock	test/broker/06-bridge-b2br-remapping.py	/^ssock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
ssock	test/broker/06-bridge-br2b-disconnect-qos1.py	/^ssock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
ssock	test/broker/06-bridge-br2b-disconnect-qos2.py	/^ssock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
ssock	test/broker/06-bridge-br2b-remapping.py	/^ssock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
ssock	test/broker/06-bridge-per-listener-settings.py	/^ssock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
ssock	test/broker/08-ssl-bridge.py	/^ssock = ssl.wrap_socket(sock, ca_certs="..\/ssl\/all-ca.crt", keyfile="..\/ssl\/server.key", certfile="..\/ssl\/server.crt", server_side=True, ssl_version=ssl.PROTOCOL_TLSv1)$/;"	v
ssock	test/broker/08-ssl-connect-cert-auth-without.py	/^ssock = ssl.wrap_socket(sock, ca_certs="..\/ssl\/test-root-ca.crt", cert_reqs=ssl.CERT_REQUIRED)$/;"	v
ssock	test/broker/08-ssl-connect-no-auth-wrong-ca.py	/^ssock = ssl.wrap_socket(sock, ca_certs="..\/ssl\/test-alt-ca.crt", cert_reqs=ssl.CERT_REQUIRED)$/;"	v
ssock	test/lib/08-ssl-connect-cert-auth-enc.py	/^ssock = ssl.wrap_socket(sock, ca_certs="..\/ssl\/all-ca.crt",$/;"	v
ssock	test/lib/08-ssl-connect-cert-auth.py	/^ssock = ssl.wrap_socket(sock, ca_certs="..\/ssl\/all-ca.crt",$/;"	v
ssock	test/lib/08-ssl-connect-no-auth.py	/^ssock = ssl.wrap_socket(sock, ca_certs="..\/ssl\/all-ca.crt", keyfile="..\/ssl\/server.key", certfile="..\/ssl\/server.crt", server_side=True, ssl_version=ssl.PROTOCOL_TLSv1)$/;"	v
ssock	test/lib/08-ssl-fake-cacert.py	/^ssock = ssl.wrap_socket(sock, ca_certs="..\/ssl\/all-ca.crt",$/;"	v
start	test/msgsps_pub.cpp	/^static struct timeval start, stop;$/;"	v	typeref:struct:timeval	file:
start	test/msgsps_sub.cpp	/^static struct timeval start, stop;$/;"	v	typeref:struct:timeval	file:
start_broker	test/mosq_test.py	/^def start_broker(filename, cmd=None, port=0, use_conf=False):$/;"	f
start_client	test/mosq_test.py	/^def start_client(filename, cmd, env, port=1888):$/;"	f
start_type	src/mosquitto_broker_internal.h	/^	enum mosquitto_bridge_start_type start_type;$/;"	m	struct:mosquitto__bridge	typeref:enum:mosquitto__bridge::mosquitto_bridge_start_type
state	lib/mosquitto_internal.h	/^	enum mosquitto_client_state state;$/;"	m	struct:mosquitto	typeref:enum:mosquitto::mosquitto_client_state
state	lib/mosquitto_internal.h	/^	enum mosquitto_msg_state state;$/;"	m	struct:mosquitto_message_all	typeref:enum:mosquitto_message_all::mosquitto_msg_state
state	src/db_dump/db_dump.cpp	/^	uint8_t qos, retain, direction, state, dup;$/;"	m	struct:db_client_msg	file:
state	src/mosquitto_broker_internal.h	/^	enum mosquitto_msg_state state;$/;"	m	struct:mosquitto_client_msg	typeref:enum:mosquitto_client_msg::mosquitto_msg_state
state_mutex	lib/mosquitto_internal.h	/^	pthread_mutex_t state_mutex;$/;"	m	struct:mosquitto
stats	src/db_dump/db_dump.cpp	/^static int stats = 0;$/;"	v	file:
status	client/pub_client.cpp	/^static int status = STATUS_CONNECTING;$/;"	v	file:
stmt	examples/mysql_log/mysql_log.cpp	/^static MYSQL_STMT *stmt = NULL;$/;"	v	file:
stop	test/msgsps_pub.cpp	/^static struct timeval start, stop;$/;"	v	typeref:struct:	file:
stop	test/msgsps_sub.cpp	/^static struct timeval start, stop;$/;"	v	typeref:struct:	file:
store	src/mosquitto_broker_internal.h	/^	struct mosquitto_msg_store *store;$/;"	m	struct:mosquitto_client_msg	typeref:struct:mosquitto_client_msg::mosquitto_msg_store
store	src/mosquitto_broker_internal.h	/^	struct mosquitto_msg_store *store;$/;"	m	struct:mosquitto_msg_store_load	typeref:struct:mosquitto_msg_store_load::mosquitto_msg_store
store_bytes	test/broker/03-publish-qos1-queued-bytes.py	/^    def store_bytes(self, client, userdata, message):$/;"	m	class:BrokerMonitor
store_count	test/broker/03-publish-qos1-queued-bytes.py	/^    def store_count(self, client, userdata, message):$/;"	m	class:BrokerMonitor
store_id	src/db_dump/db_dump.cpp	/^	dbid_t store_id;$/;"	m	struct:db_client_msg	file:
store_id	src/db_dump/db_dump.cpp	/^	dbid_t store_id;$/;"	m	struct:db_msg	file:
store_id	src/db_dump/db_dump.cpp	/^	dbid_t store_id;$/;"	m	struct:msg_store_chunk	file:
strcasecmp	config.h	29;"	d
strcasecmp_p	src/conf_includedir.cpp	/^int strcasecmp_p(const void *p1, const void *p2)$/;"	f
strerror	lib/cpp/mosquittopp.cpp	/^const char* strerror(int mosq_errno)$/;"	f	namespace:mosqpp
strerror_r	config.h	32;"	d
strncasecmp	client/client_shared.cpp	31;"	d	file:
strtok_r	config.h	31;"	d
sub	test/qos.cpp	/^struct sub{$/;"	s	file:
sub__add	src/subs.cpp	/^int sub__add(struct mosquitto_db *db, struct mosquitto *context, const char *sub, int qos, struct mosquitto__subhier **root)$/;"	f
sub__add_hier_entry	src/subs.cpp	/^struct mosquitto__subhier *sub__add_hier_entry(struct mosquitto__subhier *parent, struct mosquitto__subhier **sibling, const char *topic, size_t len)$/;"	f
sub__add_recurse	src/subs.cpp	/^static int sub__add_recurse(struct mosquitto_db *db, struct mosquitto *context, int qos, struct mosquitto__subhier *subhier, struct sub__token *tokens)$/;"	f	file:
sub__clean_session	src/subs.cpp	/^int sub__clean_session(struct mosquitto_db *db, struct mosquitto *context)$/;"	f
sub__messages_queue	src/subs.cpp	/^int sub__messages_queue(struct mosquitto_db *db, const char *source_id, const char *topic, int qos, int retain, struct mosquitto_msg_store **stored)$/;"	f
sub__remove	src/subs.cpp	/^int sub__remove(struct mosquitto_db *db, struct mosquitto *context, const char *sub, struct mosquitto__subhier *root)$/;"	f
sub__remove_recurse	src/subs.cpp	/^static int sub__remove_recurse(struct mosquitto_db *db, struct mosquitto *context, struct mosquitto__subhier *subhier, struct sub__token *tokens)$/;"	f	file:
sub__retain_queue	src/subs.cpp	/^int sub__retain_queue(struct mosquitto_db *db, struct mosquitto *context, const char *sub, int sub_qos)$/;"	f
sub__search	src/subs.cpp	/^static void sub__search(struct mosquitto_db *db, struct mosquitto__subhier *subhier, struct sub__token *tokens, const char *source_id, const char *topic, int qos, int retain, struct mosquitto_msg_store *stored, bool set_retain)$/;"	f	file:
sub__token	src/subs.cpp	/^struct sub__token {$/;"	s	file:
sub__topic_append	src/subs.cpp	/^static struct sub__token *sub__topic_append(struct sub__token **tail, struct sub__token **topics, char *topic)$/;"	f	file:
sub__topic_tokenise	src/subs.cpp	/^static int sub__topic_tokenise(const char *subtopic, struct sub__token **topics)$/;"	f	file:
sub__topic_tokens_free	src/subs.cpp	/^static void sub__topic_tokens_free(struct sub__token *tokens)$/;"	f	file:
sub__tree_print	src/subs.cpp	/^void sub__tree_print(struct mosquitto__subhier *root, int level)$/;"	f
sub_count	lib/mosquitto_internal.h	/^	int sub_count;$/;"	m	struct:mosquitto
sub_sock	test/broker/02-subscribe-persistence-flipflop.py	/^    sub_sock = mosq_test.do_client_connect(connect_packet_sub_clean, connack_packet_sub, port=port)$/;"	v
sub_sock	test/broker/02-subscribe-persistence-flipflop.py	/^    sub_sock = mosq_test.do_client_connect(connect_packet_sub_persistent, connack_packet_sub, port=port)$/;"	v
sub_topic_tokenise	lib/cpp/mosquittopp.cpp	/^int sub_topic_tokenise(const char *subtopic, char ***topics, int *count)$/;"	f	namespace:mosqpp
sub_topic_tokens_free	lib/cpp/mosquittopp.cpp	/^int sub_topic_tokens_free(char ***topics, int count)$/;"	f	namespace:mosqpp
suback1_packet	test/broker/02-subhier-crash.py	/^suback1_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback2_packet	test/broker/02-subhier-crash.py	/^suback2_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback2_packet	test/broker/06-bridge-b2br-disconnect-qos1.py	/^suback2_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback2_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^suback2_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback2_packet	test/broker/06-bridge-br2b-disconnect-qos1.py	/^suback2_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback2_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^suback2_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback3_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^suback3_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback3_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^suback3_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback_packet	test/broker/02-subpub-qos0.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/02-subpub-qos1.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/broker/02-subpub-qos2.py	/^suback_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback_packet	test/broker/02-subscribe-invalid-utf8.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/02-subscribe-persistence-flipflop.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/broker/02-subscribe-qos0.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/02-subscribe-qos1.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/broker/02-subscribe-qos2.py	/^suback_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback_packet	test/broker/03-publish-b2c-disconnect-qos1.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^suback_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback_packet	test/broker/03-publish-b2c-timeout-qos1.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/broker/03-publish-b2c-timeout-qos2.py	/^suback_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback_packet	test/broker/03-publish-c2b-disconnect-qos2.py	/^suback_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback_packet	test/broker/04-retain-qos0-clear.py	/^suback_packet = mosq_test.gen_suback(mid_sub, 0)$/;"	v
suback_packet	test/broker/04-retain-qos0-fresh.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/04-retain-qos0-repeated.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/04-retain-qos0.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/04-retain-qos1-qos0.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/04-retain-upgrade-outgoing-qos.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/broker/05-clean-session-qos1.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/broker/06-bridge-b2br-disconnect-qos1.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^suback_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback_packet	test/broker/06-bridge-br2b-disconnect-qos1.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^suback_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback_packet	test/broker/06-bridge-reconnect-local-out.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/07-will-null.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/07-will-qos0.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/08-ssl-bridge.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/08-tls-psk-bridge.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/08-tls-psk-pub.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/09-plugin-auth-acl-sub.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/09-plugin-auth-context-params.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/broker/09-plugin-auth-msg-params.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/broker/10-listener-mount-point.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/broker/11-persistent-subscription.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/lib/02-subscribe-qos0.py	/^suback_packet = mosq_test.gen_suback(mid, 0)$/;"	v
suback_packet	test/lib/02-subscribe-qos1.py	/^suback_packet = mosq_test.gen_suback(mid, 1)$/;"	v
suback_packet	test/lib/02-subscribe-qos2.py	/^suback_packet = mosq_test.gen_suback(mid, 2)$/;"	v
suback_packet_fail	test/broker/09-plugin-auth-acl-sub.py	/^suback_packet_fail = mosq_test.gen_suback(mid_fail, 0x80)$/;"	v
subhier_clean	src/database.cpp	/^static void subhier_clean(struct mosquitto_db *db, struct mosquitto__subhier **subhier)$/;"	f	file:
subs	lib/mosquitto_internal.h	/^	struct mosquitto__subhier **subs;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto__subhier
subs	src/mosquitto_broker_internal.h	/^	struct mosquitto__subhier *subs;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::mosquitto__subhier
subs	src/mosquitto_broker_internal.h	/^	struct mosquitto__subleaf *subs;$/;"	m	struct:mosquitto__subhier	typeref:struct:mosquitto__subhier::mosquitto__subleaf
subs	test/qos.cpp	/^struct sub subs[3];$/;"	v	typeref:struct:sub
subs__process	src/subs.cpp	/^static int subs__process(struct mosquitto_db *db, struct mosquitto__subhier *hier, const char *source_id, const char *topic, int qos, int retain, struct mosquitto_msg_store *stored, bool set_retain)$/;"	f	file:
subscribe	lib/cpp/mosquittopp.cpp	/^int mosquittopp::subscribe(int *mid, const char *sub, int qos)$/;"	f	class:mosqpp::mosquittopp
subscribe1_packet	test/broker/02-subhier-crash.py	/^subscribe1_packet = mosq_test.gen_subscribe(mid, "topic\/a", 0)$/;"	v
subscribe2_packet	test/broker/02-subhier-crash.py	/^subscribe2_packet = mosq_test.gen_subscribe(mid, "topic\/b", 0)$/;"	v
subscribe2_packet	test/broker/06-bridge-b2br-disconnect-qos1.py	/^subscribe2_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 1)$/;"	v
subscribe2_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^subscribe2_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 2)$/;"	v
subscribe2_packet	test/broker/06-bridge-br2b-disconnect-qos1.py	/^subscribe2_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 1)$/;"	v
subscribe2_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^subscribe2_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 2)$/;"	v
subscribe3_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^subscribe3_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 2)$/;"	v
subscribe3_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^subscribe3_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 2)$/;"	v
subscribe_callback	lib/cpp/mosquittopp.cpp	/^mosqpp_EXPORT int subscribe_callback($/;"	f	namespace:mosqpp
subscribe_packet	test/broker/02-subpub-qos0.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "subpub\/qos0", 0)$/;"	v
subscribe_packet	test/broker/02-subpub-qos1.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "subpub\/qos1", 1)$/;"	v
subscribe_packet	test/broker/02-subpub-qos2.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "subpub\/qos2", 2)$/;"	v
subscribe_packet	test/broker/02-subscribe-invalid-utf8.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "invalid\/utf8", 0)$/;"	v
subscribe_packet	test/broker/02-subscribe-invalid-utf8.py	/^subscribe_packet = struct.pack("B"*len(b), *b)$/;"	v
subscribe_packet	test/broker/02-subscribe-persistence-flipflop.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "flipflop\/test", 1)$/;"	v
subscribe_packet	test/broker/02-subscribe-qos0.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos0\/test", 0)$/;"	v
subscribe_packet	test/broker/02-subscribe-qos1.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos1\/test", 1)$/;"	v
subscribe_packet	test/broker/02-subscribe-qos2.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos2\/test", 2)$/;"	v
subscribe_packet	test/broker/03-publish-b2c-disconnect-qos1.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos1\/disconnect\/test", 1)$/;"	v
subscribe_packet	test/broker/03-publish-b2c-disconnect-qos2.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos2\/disconnect\/test", 2)$/;"	v
subscribe_packet	test/broker/03-publish-b2c-timeout-qos1.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos1\/timeout\/test", 1)$/;"	v
subscribe_packet	test/broker/03-publish-b2c-timeout-qos2.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos2\/timeout\/test", 2)$/;"	v
subscribe_packet	test/broker/03-publish-c2b-disconnect-qos2.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos2\/disconnect\/test", 2)$/;"	v
subscribe_packet	test/broker/04-retain-qos0-clear.py	/^subscribe_packet = mosq_test.gen_subscribe(mid_sub, "retain\/clear\/test", 0)$/;"	v
subscribe_packet	test/broker/04-retain-qos0-fresh.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "retain\/qos0\/test", 0)$/;"	v
subscribe_packet	test/broker/04-retain-qos0-repeated.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "retain\/qos0\/test", 0)$/;"	v
subscribe_packet	test/broker/04-retain-qos0.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "retain\/qos0\/test", 0)$/;"	v
subscribe_packet	test/broker/04-retain-qos1-qos0.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "retain\/qos1\/test", 0)$/;"	v
subscribe_packet	test/broker/04-retain-upgrade-outgoing-qos.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "retain\/qos0\/test", 1)$/;"	v
subscribe_packet	test/broker/05-clean-session-qos1.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos1\/clean_session\/test", 1)$/;"	v
subscribe_packet	test/broker/06-bridge-b2br-disconnect-qos1.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 1)$/;"	v
subscribe_packet	test/broker/06-bridge-b2br-disconnect-qos2.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 2)$/;"	v
subscribe_packet	test/broker/06-bridge-br2b-disconnect-qos1.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 1)$/;"	v
subscribe_packet	test/broker/06-bridge-br2b-disconnect-qos2.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 2)$/;"	v
subscribe_packet	test/broker/06-bridge-reconnect-local-out.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 0)$/;"	v
subscribe_packet	test/broker/07-will-null.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "will\/null\/test", 0)$/;"	v
subscribe_packet	test/broker/07-will-qos0.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "will\/qos0\/test", 0)$/;"	v
subscribe_packet	test/broker/08-ssl-bridge.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "bridge\/#", 0)$/;"	v
subscribe_packet	test/broker/08-tls-psk-bridge.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "psk\/test", 0)$/;"	v
subscribe_packet	test/broker/08-tls-psk-pub.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "psk\/test", 0)$/;"	v
subscribe_packet	test/broker/09-plugin-auth-acl-sub.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos0\/test", 0)$/;"	v
subscribe_packet	test/broker/09-plugin-auth-context-params.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "param\/topic", 1)$/;"	v
subscribe_packet	test/broker/09-plugin-auth-msg-params.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "param\/topic", 1)$/;"	v
subscribe_packet	test/broker/10-listener-mount-point.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "#", 0)$/;"	v
subscribe_packet	test/broker/11-persistent-subscription.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "subpub\/qos1", 1)$/;"	v
subscribe_packet	test/lib/02-subscribe-qos0.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos0\/test", 0)$/;"	v
subscribe_packet	test/lib/02-subscribe-qos1.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos1\/test", 1)$/;"	v
subscribe_packet	test/lib/02-subscribe-qos2.py	/^subscribe_packet = mosq_test.gen_subscribe(mid, "qos2\/test", 2)$/;"	v
subscribe_packet_fail	test/broker/09-plugin-auth-acl-sub.py	/^subscribe_packet_fail = mosq_test.gen_subscribe(mid_fail, "#", 0)$/;"	v
subscribe_simple	lib/cpp/mosquittopp.cpp	/^int subscribe_simple($/;"	f	namespace:mosqpp
subscription_count	src/mosquitto_broker_internal.h	/^	int subscription_count;$/;"	m	struct:mosquitto_db
subscription_size	src/db_dump/db_dump.cpp	/^	int subscription_size;$/;"	m	struct:client_chunk	file:
subscriptions	src/db_dump/db_dump.cpp	/^	int subscriptions;$/;"	m	struct:client_chunk	file:
sys_interval	src/mosquitto_broker_internal.h	/^	int sys_interval;$/;"	m	struct:mosquitto__config
sys_tree__init	src/sys_tree.cpp	/^void sys_tree__init(struct mosquitto_db *db)$/;"	f
sys_tree__update	src/sys_tree.cpp	/^void sys_tree__update(struct mosquitto_db *db, int interval, time_t start_time)$/;"	f
sys_tree__update_clients	src/sys_tree.cpp	/^static void sys_tree__update_clients(struct mosquitto_db *db, char *buf)$/;"	f	file:
sys_tree__update_memory	src/sys_tree.cpp	/^static void sys_tree__update_memory(struct mosquitto_db *db, char *buf)$/;"	f	file:
syslog_h	src/logging.cpp	/^HANDLE syslog_h;$/;"	v
tail	src/deps/uthash.h	/^   struct UT_hash_handle *tail; \/* tail hh in app order, for fast append    *\/$/;"	m	struct:UT_hash_table	typeref:struct:UT_hash_table::UT_hash_handle
tbl	src/deps/uthash.h	/^   struct UT_hash_table *tbl;$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_table
temp__expire_websockets_clients	src/loop.cpp	/^static void temp__expire_websockets_clients(struct mosquitto_db *db)$/;"	f	file:
test	test/broker/02-subhier-crash.py	/^def test():$/;"	f
test	test/broker/06-bridge-b2br-remapping.py	/^def test(bridge, sock):$/;"	f
test	test/broker/06-bridge-br2b-remapping.py	/^def test(bridge, sock):$/;"	f
test	test/broker/06-bridge-per-listener-settings.py	/^def test(bridge, sock):$/;"	f
tests	test/broker/ptest.py	/^tests = [$/;"	v
tests	test/lib/ptest.py	/^tests = [$/;"	v
thread_id	lib/mosquitto_internal.h	/^	pthread_t thread_id;$/;"	m	struct:mosquitto
threaded	lib/mosquitto_internal.h	/^	char threaded;$/;"	m	struct:mosquitto
threaded_set	lib/cpp/mosquittopp.cpp	/^int mosquittopp::threaded_set(bool threaded)$/;"	f	class:mosqpp::mosquittopp
threshold	src/mosquitto_broker_internal.h	/^	int threshold;$/;"	m	struct:mosquitto__bridge
timeout	client/client_shared.h	/^	int timeout; \/* sub *\/$/;"	m	struct:mosq_config
timestamp	lib/mosquitto_internal.h	/^	time_t timestamp;$/;"	m	struct:mosquitto_message_all
timestamp	src/mosquitto_broker_internal.h	/^	time_t timestamp;$/;"	m	struct:mosquitto_client_msg
tls_cafile	lib/mosquitto_internal.h	/^	char *tls_cafile;$/;"	m	struct:mosquitto
tls_cafile	src/mosquitto_broker_internal.h	/^	char *tls_cafile;$/;"	m	struct:mosquitto__bridge
tls_capath	lib/mosquitto_internal.h	/^	char *tls_capath;$/;"	m	struct:mosquitto
tls_capath	src/mosquitto_broker_internal.h	/^	char *tls_capath;$/;"	m	struct:mosquitto__bridge
tls_cert_reqs	lib/mosquitto_internal.h	/^	int tls_cert_reqs;$/;"	m	struct:mosquitto
tls_certfile	lib/mosquitto_internal.h	/^	char *tls_certfile;$/;"	m	struct:mosquitto
tls_certfile	src/mosquitto_broker_internal.h	/^	char *tls_certfile;$/;"	m	struct:mosquitto__bridge
tls_ciphers	lib/mosquitto_internal.h	/^	char *tls_ciphers;$/;"	m	struct:mosquitto
tls_ex_index_context	src/net.cpp	/^static int tls_ex_index_context = -1;$/;"	v	file:
tls_ex_index_listener	src/net.cpp	/^static int tls_ex_index_listener = -1;$/;"	v	file:
tls_ex_index_mosq	lib/net_mosq.cpp	/^int tls_ex_index_mosq = -1;$/;"	v
tls_insecure	lib/mosquitto_internal.h	/^	bool tls_insecure;$/;"	m	struct:mosquitto
tls_insecure	src/mosquitto_broker_internal.h	/^	bool tls_insecure;$/;"	m	struct:mosquitto__bridge
tls_insecure_set	lib/cpp/mosquittopp.cpp	/^int mosquittopp::tls_insecure_set(bool value)$/;"	f	class:mosqpp::mosquittopp
tls_keyfile	lib/mosquitto_internal.h	/^	char *tls_keyfile;$/;"	m	struct:mosquitto
tls_keyfile	src/mosquitto_broker_internal.h	/^	char *tls_keyfile;$/;"	m	struct:mosquitto__bridge
tls_opts_set	lib/cpp/mosquittopp.cpp	/^int mosquittopp::tls_opts_set(int cert_reqs, const char *tls_version, const char *ciphers)$/;"	f	class:mosqpp::mosquittopp
tls_psk	lib/mosquitto_internal.h	/^	char *tls_psk;$/;"	m	struct:mosquitto
tls_psk	src/mosquitto_broker_internal.h	/^	char *tls_psk;$/;"	m	struct:mosquitto__bridge
tls_psk_identity	lib/mosquitto_internal.h	/^	char *tls_psk_identity;$/;"	m	struct:mosquitto
tls_psk_identity	src/mosquitto_broker_internal.h	/^	char *tls_psk_identity;$/;"	m	struct:mosquitto__bridge
tls_psk_set	lib/cpp/mosquittopp.cpp	/^int mosquittopp::tls_psk_set(const char *psk, const char *identity, const char *ciphers)$/;"	f	class:mosqpp::mosquittopp
tls_pw_callback	lib/mosquitto_internal.h	/^	int (*tls_pw_callback)(char *buf, int size, int rwflag, void *userdata);$/;"	m	struct:mosquitto
tls_set	lib/cpp/mosquittopp.cpp	/^int mosquittopp::tls_set(const char *cafile, const char *capath, const char *certfile, const char *keyfile, int (*pw_callback)(char *buf, int size, int rwflag, void *userdata))$/;"	f	class:mosqpp::mosquittopp
tls_version	client/client_shared.h	/^	char *tls_version;$/;"	m	struct:mosq_config
tls_version	lib/mosquitto.h	/^	char *tls_version;$/;"	m	struct:libmosquitto_tls
tls_version	lib/mosquitto_internal.h	/^	char *tls_version;$/;"	m	struct:mosquitto
tls_version	src/mosquitto_broker_internal.h	/^	char *tls_version;$/;"	m	struct:mosquitto__bridge
tls_version	src/mosquitto_broker_internal.h	/^	char *tls_version;$/;"	m	struct:mosquitto__listener
tmp_remove_subs	src/subs.cpp	/^static struct mosquitto__subhier *tmp_remove_subs(struct mosquitto__subhier *sub)$/;"	f	file:
to_hex_string	test/mosq_test.py	/^def to_hex_string(packet):$/;"	f
to_process	lib/mosquitto_internal.h	/^	uint32_t to_process;$/;"	m	struct:mosquitto__packet
to_string	test/mosq_test.py	/^def to_string(packet):$/;"	f
topic	client/client_shared.h	/^	char *topic; \/* pub *\/$/;"	m	struct:mosq_config
topic	client/pub_client.cpp	/^static char *topic = NULL;$/;"	v	file:
topic	lib/helpers.cpp	/^	const char *topic;$/;"	m	struct:userdata__callback	file:
topic	lib/mosquitto.h	/^	char *topic;$/;"	m	struct:libmosquitto_will
topic	lib/mosquitto.h	/^	char *topic;$/;"	m	struct:mosquitto_message
topic	src/db_dump/db_dump.cpp	/^	char *topic;$/;"	m	struct:db_msg	file:
topic	src/db_dump/db_dump.cpp	/^	char *topic;$/;"	m	struct:db_sub	file:
topic	src/mosquitto_broker_internal.h	/^	char *topic;$/;"	m	struct:mosquitto__acl
topic	src/mosquitto_broker_internal.h	/^	char *topic;$/;"	m	struct:mosquitto__bridge_topic
topic	src/mosquitto_broker_internal.h	/^	char* topic;$/;"	m	struct:mosquitto_msg_store
topic	src/mosquitto_broker_internal.h	/^	mosquitto__topic_element_uhpa topic;$/;"	m	struct:mosquitto__subhier
topic	src/mosquitto_plugin.h	/^	const char *topic;$/;"	m	struct:mosquitto_acl_msg
topic	src/subs.cpp	/^	mosquitto__topic_element_uhpa topic;$/;"	m	struct:sub__token	file:
topic	test/qos.cpp	/^	char *topic;$/;"	m	struct:sub	file:
topic_count	client/client_shared.h	/^	int topic_count; \/* sub *\/$/;"	m	struct:mosq_config
topic_count	src/mosquitto_broker_internal.h	/^	int topic_count;$/;"	m	struct:mosquitto__bridge
topic_len	src/mosquitto_broker_internal.h	/^	uint16_t topic_len;$/;"	m	struct:mosquitto__subhier
topic_len	src/subs.cpp	/^	uint16_t topic_len;$/;"	m	struct:sub__token	file:
topic_matches_sub	lib/cpp/mosquittopp.cpp	/^int topic_matches_sub(const char *sub, const char *topic, bool *result)$/;"	f	namespace:mosqpp
topic_remapping	src/mosquitto_broker_internal.h	/^	bool topic_remapping;$/;"	m	struct:mosquitto__bridge
topics	client/client_shared.h	/^	char **topics; \/* sub *\/$/;"	m	struct:mosq_config
topics	src/mosquitto_broker_internal.h	/^	struct mosquitto__bridge_topic *topics;$/;"	m	struct:mosquitto__bridge	typeref:struct:mosquitto__bridge::mosquitto__bridge_topic
true	lib/mosquitto.h	37;"	d
true	src/mosquitto_passwd.cpp	35;"	d	file:
try_private	src/mosquitto_broker_internal.h	/^	bool try_private;$/;"	m	struct:mosquitto__bridge
try_private_accepted	src/mosquitto_broker_internal.h	/^	bool try_private_accepted;$/;"	m	struct:mosquitto__bridge
ucount	src/mosquitto_broker_internal.h	/^	int ucount;$/;"	m	struct:mosquitto__acl
uhpa_free	src/mosquitto_broker_internal.h	55;"	d
uhpa_free	src/uhpa.h	129;"	d
uhpa_malloc	src/mosquitto_broker_internal.h	54;"	d
uhpa_malloc	src/uhpa.h	125;"	d
uint16_t	lib/mosquitto_internal.h	/^		typedef unsigned short uint16_t;$/;"	t
uint32_t	lib/mosquitto_internal.h	/^		typedef unsigned int uint32_t;$/;"	t
uint32_t	src/deps/uthash.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	lib/mosquitto_internal.h	/^		typedef unsigned long long uint64_t;$/;"	t
uint8_t	lib/mosquitto_internal.h	/^		typedef unsigned char uint8_t;$/;"	t
uint8_t	src/deps/uthash.h	/^typedef unsigned char uint8_t;$/;"	t
unpwd	src/mosquitto_broker_internal.h	/^	struct mosquitto__unpwd *unpwd;$/;"	m	struct:mosquitto__listener	typeref:struct:mosquitto__listener::mosquitto__unpwd
unpwd	src/mosquitto_broker_internal.h	/^	struct mosquitto__unpwd *unpwd;$/;"	m	struct:mosquitto_db	typeref:struct:mosquitto_db::mosquitto__unpwd
unpwd__cleanup	src/security_default.cpp	/^static int unpwd__cleanup(struct mosquitto__unpwd **root, bool reload)$/;"	f	file:
unpwd__file_parse	src/security_default.cpp	/^static int unpwd__file_parse(struct mosquitto__unpwd **unpwd, const char *password_file)$/;"	f	file:
unpwd_check_v2	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_unpwd_check_v2 unpwd_check_v2;$/;"	m	struct:mosquitto__auth_plugin
unpwd_check_v3	src/mosquitto_broker_internal.h	/^	FUNC_auth_plugin_unpwd_check_v3 unpwd_check_v3;$/;"	m	struct:mosquitto__auth_plugin
unsub_mid	test/broker/04-retain-qos0-repeated.py	/^unsub_mid = 13$/;"	v
unsub_topic_count	client/client_shared.h	/^	int unsub_topic_count; \/* sub *\/$/;"	m	struct:mosq_config
unsub_topics	client/client_shared.h	/^	char **unsub_topics; \/* sub *\/$/;"	m	struct:mosq_config
unsuback1_packet	test/broker/02-subhier-crash.py	/^unsuback1_packet = mosq_test.gen_unsuback(mid)$/;"	v
unsuback_packet	test/broker/02-unsubscribe-qos0.py	/^unsuback_packet = mosq_test.gen_unsuback(mid)$/;"	v
unsuback_packet	test/broker/02-unsubscribe-qos1.py	/^unsuback_packet = mosq_test.gen_unsuback(mid)$/;"	v
unsuback_packet	test/broker/02-unsubscribe-qos2.py	/^unsuback_packet = mosq_test.gen_unsuback(mid)$/;"	v
unsuback_packet	test/broker/04-retain-qos0-clear.py	/^unsuback_packet = mosq_test.gen_unsuback(mid_unsub)$/;"	v
unsuback_packet	test/broker/04-retain-qos0-repeated.py	/^unsuback_packet = mosq_test.gen_unsuback(unsub_mid)$/;"	v
unsuback_packet	test/broker/06-bridge-fail-persist-resend-qos1.py	/^unsuback_packet = mosq_test.gen_unsuback(1)$/;"	v
unsuback_packet	test/broker/06-bridge-fail-persist-resend-qos2.py	/^unsuback_packet = mosq_test.gen_unsuback(1)$/;"	v
unsuback_packet	test/lib/02-unsubscribe.py	/^unsuback_packet = mosq_test.gen_unsuback(mid)$/;"	v
unsubscribe	lib/cpp/mosquittopp.cpp	/^int mosquittopp::unsubscribe(int *mid, const char *sub)$/;"	f	class:mosqpp::mosquittopp
unsubscribe1_packet	test/broker/02-subhier-crash.py	/^unsubscribe1_packet = mosq_test.gen_unsubscribe(mid, "topic\/a")$/;"	v
unsubscribe_packet	test/broker/02-unsubscribe-invalid-no-topic.py	/^unsubscribe_packet = gen_unsubscribe_invalid_no_topic(mid)$/;"	v
unsubscribe_packet	test/broker/02-unsubscribe-qos0.py	/^unsubscribe_packet = mosq_test.gen_unsubscribe(mid, "qos0\/test")$/;"	v
unsubscribe_packet	test/broker/02-unsubscribe-qos1.py	/^unsubscribe_packet = mosq_test.gen_unsubscribe(mid, "qos1\/test")$/;"	v
unsubscribe_packet	test/broker/02-unsubscribe-qos2.py	/^unsubscribe_packet = mosq_test.gen_unsubscribe(mid, "qos2\/test")$/;"	v
unsubscribe_packet	test/broker/04-retain-qos0-clear.py	/^unsubscribe_packet = mosq_test.gen_unsubscribe(mid_unsub, "retain\/clear\/test")$/;"	v
unsubscribe_packet	test/broker/04-retain-qos0-repeated.py	/^unsubscribe_packet = mosq_test.gen_unsubscribe(unsub_mid, "retain\/qos0\/test")$/;"	v
unsubscribe_packet	test/broker/06-bridge-fail-persist-resend-qos1.py	/^unsubscribe_packet = mosq_test.gen_unsubscribe(1, "bridge\/#")$/;"	v
unsubscribe_packet	test/broker/06-bridge-fail-persist-resend-qos2.py	/^unsubscribe_packet = mosq_test.gen_unsubscribe(1, "bridge\/#")$/;"	v
unsubscribe_packet	test/lib/02-unsubscribe.py	/^unsubscribe_packet = mosq_test.gen_unsubscribe(mid, "unsubscribe\/test")$/;"	v
update	test/broker/03-publish-qos1-queued-bytes.py	/^    def update(self, tup):$/;"	m	class:StoreCounts
update_file	src/mosquitto_passwd.cpp	/^int update_file(FILE *fptr, FILE *ftmp)$/;"	f
update_pwuser	src/mosquitto_passwd.cpp	/^int update_pwuser(FILE *fptr, FILE *ftmp, const char *username, const char *password)$/;"	f
upgrade_outgoing_qos	src/mosquitto_broker_internal.h	/^	bool upgrade_outgoing_qos;$/;"	m	struct:mosquitto__config
usb	misc/currentcost/cc128_read.py	/^usb = serial.Serial(port='\/dev\/ttyUSB0', baudrate=57600)$/;"	v
use_identity_as_username	src/mosquitto_broker_internal.h	/^	bool use_identity_as_username;$/;"	m	struct:mosquitto__listener
use_srv	client/client_shared.h	/^	bool use_srv;$/;"	m	struct:mosq_config
use_subject_as_username	src/mosquitto_broker_internal.h	/^	bool use_subject_as_username;$/;"	m	struct:mosquitto__listener
use_username_as_clientid	src/mosquitto_broker_internal.h	/^	bool use_username_as_clientid;$/;"	m	struct:mosquitto__listener
user	src/mosquitto_broker_internal.h	/^	char *user;$/;"	m	struct:mosquitto__config
user_data	src/mosquitto_broker_internal.h	/^	void *user_data;$/;"	m	struct:mosquitto__auth_plugin
user_data_set	lib/cpp/mosquittopp.cpp	/^void mosquittopp::user_data_set(void *userdata)$/;"	f	class:mosqpp::mosquittopp
userdata	lib/helpers.cpp	/^	void *userdata;$/;"	m	struct:userdata__callback	file:
userdata	lib/mosquitto_internal.h	/^	void *userdata;$/;"	m	struct:mosquitto
userdata__callback	lib/helpers.cpp	/^struct userdata__callback {$/;"	s	file:
userdata__simple	lib/helpers.cpp	/^struct userdata__simple {$/;"	s	file:
username	client/client_shared.h	/^	char *username;$/;"	m	struct:mosq_config
username	client/pub_client.cpp	/^static char *username = NULL;$/;"	v	file:
username	lib/mosquitto.h	/^	char *username;$/;"	m	struct:libmosquitto_auth
username	lib/mosquitto_internal.h	/^	char *username;$/;"	m	struct:mosquitto
username	src/mosquitto_broker_internal.h	/^	char *username;$/;"	m	struct:mosquitto__acl_user
username	src/mosquitto_broker_internal.h	/^	char *username;$/;"	m	struct:mosquitto__unpwd
username_pw_set	lib/cpp/mosquittopp.cpp	/^int mosquittopp::username_pw_set(const char *username, const char *password)$/;"	f	class:mosqpp::mosquittopp
uthash_expand_fyi	src/deps/uthash.h	83;"	d
uthash_fatal	src/deps/uthash.h	70;"	d
uthash_free	config.h	37;"	d
uthash_free	src/deps/uthash.h	76;"	d
uthash_malloc	config.h	36;"	d
uthash_malloc	src/deps/uthash.h	73;"	d
uthash_noexpand_fyi	src/deps/uthash.h	80;"	d
validate_utf8	lib/cpp/mosquittopp.cpp	/^int validate_utf8(const char *str, int len)$/;"	f	namespace:mosqpp
value	src/mosquitto_plugin.h	/^	char *value;$/;"	m	struct:mosquitto_auth_opt
value	src/mosquitto_plugin.h	/^	char *value;$/;"	m	struct:mosquitto_opt
value	test/broker/c/mosquitto_plugin_v2.h	/^	char *value;$/;"	m	struct:mosquitto_auth_opt
verbose	client/client_shared.h	/^	bool verbose; \/* sub *\/$/;"	m	struct:mosq_config
verbose	src/mosquitto_broker_internal.h	/^	bool verbose;$/;"	m	struct:mosquitto_db
version	src/mosquitto_broker_internal.h	/^	int version;$/;"	m	struct:mosquitto__auth_plugin
want_connect	lib/mosquitto_internal.h	/^	bool want_connect;$/;"	m	struct:mosquitto
want_retained	lib/helpers.cpp	/^	bool want_retained;$/;"	m	struct:userdata__simple	file:
want_write	lib/cpp/mosquittopp.cpp	/^bool mosquittopp::want_write()$/;"	f	class:mosqpp::mosquittopp
want_write	lib/mosquitto_internal.h	/^	bool want_write;$/;"	m	struct:mosquitto
websockets_log_level	src/mosquitto_broker_internal.h	/^	int websockets_log_level;$/;"	m	struct:mosquitto__config
will	lib/mosquitto_internal.h	/^	struct mosquitto_message *will;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::mosquitto_message
will	test/broker/07-will-null.py	/^    will = subprocess.Popen(['.\/07-will-null-helper.py', str(port)], stdout=subprocess.PIPE, stderr=subprocess.PIPE)$/;"	v
will	test/broker/07-will-qos0.py	/^    will = subprocess.Popen(['.\/07-will-qos0-helper.py', str(port)], stdout=subprocess.PIPE, stderr=subprocess.PIPE)$/;"	v
will__clear	lib/will_mosq.cpp	/^int will__clear(struct mosquitto *mosq)$/;"	f
will__set	lib/will_mosq.cpp	/^int will__set(struct mosquitto *mosq, const char *topic, int payloadlen, const void *payload, int qos, bool retain)$/;"	f
will_clear	lib/cpp/mosquittopp.cpp	/^int mosquittopp::will_clear()$/;"	f	class:mosqpp::mosquittopp
will_payload	client/client_shared.h	/^	char *will_payload;$/;"	m	struct:mosq_config
will_payloadlen	client/client_shared.h	/^	long will_payloadlen;$/;"	m	struct:mosq_config
will_qos	client/client_shared.h	/^	int will_qos;$/;"	m	struct:mosq_config
will_retain	client/client_shared.h	/^	bool will_retain;$/;"	m	struct:mosq_config
will_set	lib/cpp/mosquittopp.cpp	/^int mosquittopp::will_set(const char *topic, int payloadlen, const void *payload, int qos, bool retain)$/;"	f	class:mosqpp::mosquittopp
will_topic	client/client_shared.h	/^	char *will_topic;$/;"	m	struct:mosq_config
write_config	test/broker/01-connect-anon-denied.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/01-connect-uname-no-password-denied.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/01-connect-uname-password-denied.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/01-connect-uname-password-success-no-tls.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/01-connect-uname-password-success.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/04-retain-upgrade-outgoing-qos.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/06-bridge-b2br-disconnect-qos1.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/06-bridge-b2br-disconnect-qos2.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/06-bridge-b2br-remapping.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/06-bridge-br2b-disconnect-qos1.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/06-bridge-br2b-disconnect-qos2.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/06-bridge-br2b-remapping.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/06-bridge-fail-persist-resend-qos1.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/06-bridge-fail-persist-resend-qos2.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/06-bridge-per-listener-settings.py	/^def write_config(filename, port1, port2, port3):$/;"	f
write_config	test/broker/06-bridge-reconnect-local-out.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/08-ssl-bridge.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/08-ssl-connect-cert-auth-crl.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/08-ssl-connect-cert-auth-expired.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/08-ssl-connect-cert-auth-revoked.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/08-ssl-connect-cert-auth-without.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/08-ssl-connect-cert-auth.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/08-ssl-connect-identity.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/08-ssl-connect-no-auth-wrong-ca.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/08-ssl-connect-no-auth.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/08-ssl-connect-no-identity.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/08-tls-psk-pub.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/09-plugin-auth-acl-sub.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/09-plugin-auth-context-params.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/09-plugin-auth-defer-unpwd-fail.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/09-plugin-auth-defer-unpwd-success.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/09-plugin-auth-msg-params.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/09-plugin-auth-unpwd-fail.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/09-plugin-auth-unpwd-success.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/09-plugin-auth-v2-unpwd-fail.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/09-plugin-auth-v2-unpwd-success.py	/^def write_config(filename, port):$/;"	f
write_config	test/broker/10-listener-mount-point.py	/^def write_config(filename, port1, port2):$/;"	f
write_config	test/broker/11-persistent-subscription.py	/^def write_config(filename, port):$/;"	f
write_config1	test/broker/08-tls-psk-bridge.py	/^def write_config1(filename, port1, port2):$/;"	f
write_config2	test/broker/08-tls-psk-bridge.py	/^def write_config2(filename, port2, port3):$/;"	f
write_e	src/persist.h	33;"	d
write_json_payload	client/sub_client_output.cpp	/^static void write_json_payload(const char *payload, int payloadlen)$/;"	f	file:
write_payload	client/sub_client_output.cpp	/^static void write_payload(const unsigned char *payload, int payloadlen, int hex)$/;"	f	file:
ws_context	lib/mosquitto_internal.h	/^	struct libwebsocket_context *ws_context;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::libwebsocket_context
ws_context	src/mosquitto_broker_internal.h	/^	struct libwebsocket_context *ws_context;$/;"	m	struct:mosquitto__listener	typeref:struct:mosquitto__listener::libwebsocket_context
ws_protocol	src/mosquitto_broker_internal.h	/^	struct libwebsocket_protocols *ws_protocol;$/;"	m	struct:mosquitto__listener	typeref:struct:mosquitto__listener::libwebsocket_protocols
ws_want_write	lib/mosquitto_internal.h	/^	bool ws_want_write;$/;"	m	struct:mosquitto
wsi	lib/mosquitto_internal.h	/^	struct libwebsocket *wsi;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::libwebsocket
wsi	lib/mosquitto_internal.h	/^	struct lws *wsi;$/;"	m	struct:mosquitto	typeref:struct:mosquitto::lws
~mosquittopp	lib/cpp/mosquittopp.cpp	/^mosquittopp::~mosquittopp()$/;"	f	class:mosqpp::mosquittopp
~mqtt_tempconv	examples/temperature_conversion/temperature_conversion.cpp	/^mqtt_tempconv::~mqtt_tempconv()$/;"	f	class:mqtt_tempconv
